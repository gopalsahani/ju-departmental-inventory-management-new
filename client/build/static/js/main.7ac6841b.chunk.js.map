{"version":3,"sources":["redux/features/roleslice.js","components/Layout.js","redux/features/alertslice.js","pages/Homepage.js","pages/Login.js","pages/Register.js","components/ProtectedRoute.js","components/PublicRoute.js","pages/techpage/Techpage.js","pages/techpage/Classpage.js","pages/techpage/Classedit.js","components/Spinner.js","pages/techpage/Classdetail.js","pages/techpage/Classdetailedit.js","pages/techpage/Labpage.js","pages/techpage/Labedit.js","pages/techpage/Labdetail.js","components/Layout2.js","pages/Summary.js","pages/techpage/Labdetailedit.js","pages/summary/Techsum.js","pages/summary/Labsum.js","pages/techpage/Teacherpage.js","pages/techpage/Teacheredit.js","pages/techpage/Teacherdetail.js","pages/techpage/Teacherdetailedit.js","pages/techpage/Serverpage.js","pages/techpage/Serveredit.js","pages/techpage/Serverdetail.js","pages/techpage/Serverdetailedit.js","pages/summary/Classsum.js","pages/summary/Teachersum.js","pages/summary/Serversum.js","pages/nontech/Nontechpage.js","pages/nontech/Teacherpage_non.js","pages/nontech/Teachereditnon.js","pages/nontech/Teacherdetailsnon.js","pages/nontech/Teacherdetaileditnon.js","pages/nontech/Classpage_non.js","pages/nontech/Classeditnon.js","pages/nontech/Classdetailsnon.js","pages/nontech/Classdetaileditnon.js","pages/nontech/Labpage_non.js","pages/nontech/Labeditnon.js","pages/nontech/Labdetailsnon.js","pages/nontech/Labdetaileditnon.js","pages/nontech/Serverpage_non.js","pages/nontech/Servereditnon.js","pages/nontech/Serverdetailnon.js","pages/nontech/Serverdetaileditnon.js","pages/summary/Nontechsum.js","pages/summary/Teachersumnon.js","pages/summary/Classsumnon.js","pages/summary/Labsumnon.js","pages/summary/Serversumnon.js","pages/Userlist.js","pages/nontech/Dumpnontech.js","pages/Purchaselist.js","pages/techpage/Dumptech.js","pages/Purchasetechlist.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["roleslice","createSlice","name","initialState","role","reducers","setRole","state","action","payload","actions","Layout","_ref","children","dispatch","useDispatch","navigate","useNavigate","roles","useSelector","useEffect","localStorage","setItem","savedRole","getItem","handlelogout","async","clear","window","location","reload","React","createElement","Fragment","className","onClick","alertslice","loading","showloading","hideloading","Homepage","State","id","Login","Form","layout","onFinish","res","axios","post","values","data","success","token","message","userRole","admin","console","log","error","Item","label","Input","type","required","Link","to","style","color","margin","Register","ProtectedRoute","Navigate","PublicRoute","path","icon","Techpage","alignItems","justifyContent","display","fontSize","fontFamily","map","class","Classpage","classlist","setClasslist","useState","get","headers","Authorization","getallclass","Row","gutter","Col","xs","md","lg","rules","placeholder","width","marginTop","cursor","_id","classname","classno","buildingname","floorno","confirm","handledelete","Classedit","params","useParams","classdata","setClassdata","classid","getclassdata","initialValues","Spinner","Classdetail","Option","Select","classdetails","setClassdetails","itemtype","setItemtype","formattedDates","setFormattedDates","setClassname","classes","setClasses","getclassdetails","dates","details","freshdate","installationdate","processdates","date","moment","isodate","day","suffix","j","k","format","lab","find","messgae","getalllabs","border","float","otheritemtype","onChange","value","DatePicker","TextArea","rows","marginLeft","borderCollapse","textAlign","padding","key","maxHeight","overflowY","description","desktopnumber","monitornumber","monitorname","mousenumber","mousename","keyboardnumber","keyboardname","cpunumber","cpuname","Classdetailedit_Option","Classdetailedit","classdetaill","setClassdetaill","form","useForm","classdetailid","otherdata","setFieldsValue","productid","Labpage","labslist","setLabslist","labname","labno","Labedit","labinfo","setLabinfo","labid","getlabdata","Labdetail_Option","Labdetail","labdetails","setLabdetails","setLabname","labs","setLabs","getdetails","Layout2","Summary","Labdetailedit_Option","Labdetailedit","labdetail","setLabdetail","labdetailid","getlabdetail","history","back","Techsum","Labsum_Option","Labsum","setlabdetails","labnumbers","setLabnumbers","totallabs","setTotallabs","labnums","setLabnums","sortorder","setSortorder","item","displaydata","setDisplaydata","buildings","setBuildings","setBuildingname","buildingobject","setBuildingobject","alllabname","setAlllabname","labnumber","alllabs","b_names","lab_names","getlabdetails","alllabdetails","labnos","buildingnames","labnames","Set","tabledatas","product","Date","toLocaleDateString","ipaddress","initialprint","columns","title","dataIndex","tabledata","lab_name","order","displaydatas","excludeitem","filter","includes","sort","a","b","dateA","dateB","print","borderRadius","Table","dataSource","pagination","Teacherpage","teacherlist","setTeacherlist","getallteacher","teachername","roomno","Teacheredit","teacherinfo","setTeacherinfo","teacherid","getteacherdata","Teacherdetail_Option","Teacherdetail","teacherdetails","setTeacherdetails","setTeachername","teachers","setTeachers","Teacherdetailedit_Option","Teacherdetailedit","teacherdetailinfo","setTeacherdetailinfo","teacherdetailid","getteacherdetails","Serverpage_Option","Serverpage","serverlist","setServerlist","getallserver","roomname","Serveredit","serverinfo","setServerinfo","serverroomid","getserverdata","Serverdetail_Option","Serverdetail","serverdetails","setServerdetails","serverroomname","setServerroomname","serveritems","setServeritems","serverName","serverType","operatingSystem","hostname","macAddress","Serverdetailedit_Option","Serverdetailedit","serverrdetailinfo","setServerdetailinfo","serverdetailid","getServerdetail","Classsum_Option","Classsum","classnumbers","setClassnumbers","totalclass","setTotalclass","classnums","setClassnums","allclassname","setAllclassname","classnumber","allclass","class_names","allclassdetails","classnos","classnames","Teachersum_Option","Teachersum","teachernames","setTeachernames","totalteachers","setTotalteachers","teachernums","setTeachernums","allteachers","getallteachers","allteacherdetails","teachernamess","Serversum_Option","Serversum","serverrooms","setServerrooms","serverroomdetails","setServerroomdetails","serverroomnames","setServerroomnames","totalserverrooms","setTotalserverrooms","serverroomnums","setServerroomnums","allserverrooms","getserverroomdetails","getallserverrooms","allserverroomdetails","serverroomnamess","Nontechpage","Teacherpage_non","Teachereditnon","Teacherdetailsnon_Option","Teacherdetailsnon","teacher","setTeacher","uid","Teacherdetaileditnon_Option","Teacherdetaileditnon","Classpage_non","Classeditnon","Classdetailsnon_Option","Classdetailsnon","getallclasses","Classdetaileditnon_Option","Classdetaileditnon","classdetailinfo","setClassdetailinfo","Labpage_non","Labeditnon","Labdetailsnon_Option","Labdetailsnon","setLab","Labdetaileditnon_Option","Labdetaileditnon","labdetailinfo","setLabdetailinfo","Serverpage_non_Option","Serverpage_non","Servereditnon","Serverdetailnon_Option","Serverdetailnon","servername","setServername","server","setServer","Serverdetaileditnon_Option","Serverdetaileditnon","serverdetailinfo","Nontechsum","Teachersumnon_Option","Teachersumnon","uniqueid","Classsumnon_Option","Classsumnon","Labsumnon_Option","Labsumnon","Serversumnon_Option","Serversumnon","Userlist","userlist","setUserlist","Cache-Control","Pragma","Expires","getusers","column","render","_","record","Switch","checked","checkedChildren","unCheckedChildren","userid","newrole","updateuserrole","Dumpnontech_Option","Dumpnontech","dumpdata","setDumpdata","roomnames","setRoomnames","setTabledata","countvalue","setCountvalue","deleteitem","setDeleteitem","totalitems","setTotalitems","getalldumpdata","roomid","roomtype","alldumpdata","roomnamess","length","backgroundColor","deletedata","position","fontWeight","left","deinstallationdate","Purchaselist_Option","Purchaselist","purchasedata","setPurchasedata","edititem","setEdititem","deletecount","setDeletecount","getallpurchasedata","changevalue","deletelist","count","background","gap","min","max","e","Number","target","handlepartialdelete","colSpan","Dumptech_Option","Dumptech","Purchasetechlist_Option","Purchasetechlist","App","alerts","BrowserRouter","Routes","Route","element","Serverrdetaileditnon","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","createRoot","document","getElementById","Provider","StrictMode"],"mappings":"oVAEO,MAAMA,EAAUC,YAAY,CACnCC,KAAK,OACLC,aAAa,CACbC,KAAK,QAELC,SAAS,CACLC,QAAQA,CAACC,EAAMC,KACXD,EAAMH,KAAKI,EAAOC,aAMdH,QAACA,GAASN,EAAUU,QCgEjBC,MAvEAC,IAAkB,IAAjBC,SAAEA,GAAUD,EAE1B,MAAME,EAAWC,cACXC,EAAWC,cACTC,EAAMC,YAAYZ,GAAOA,EAAMH,KAAKA,MAErCgB,oBAAU,KACO,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAEZ,MAAMW,EAAeC,UACfL,aAAaG,QAAQ,WACvBH,aAAaM,QACbC,OAAOC,SAASC,WAIpB,OAEEC,IAAAC,cAAAD,IAAAE,SAAA,KACS,UAAVf,EACEa,IAAAC,cAAA,OAAKE,UAAU,UACdH,IAAAC,cAAA,UAAQE,UAAU,kBAAkBC,QAASA,IAAMnB,EAAS,MAAM,QAGlEe,IAAAC,cAAA,UAAQE,UAAU,kBAAkBC,QAASA,IAAMnB,EAAS,UAAU,aAGtEe,IAAAC,cAAA,UAAQE,UAAU,kBAAkBC,QAASA,IAAMnB,EAAS,cAAc,iBAG1Ee,IAAAC,cAAA,UAAQE,UAAU,kBAAkBC,QAASA,IAAMnB,EAAS,cAAc,aAG1Ee,IAAAC,cAAA,UAAQE,UAAU,iBAAiBC,QAASV,GAAc,WAM5DM,IAAAC,cAAA,OAAKE,UAAU,UACbH,IAAAC,cAAA,UAAQE,UAAU,kBAAkBC,QAASA,IAAMnB,EAAS,MAAM,QAGlEe,IAAAC,cAAA,UAAQE,UAAU,kBAAkBC,QAASA,IAAMnB,EAAS,UAAU,aAGtEe,IAAAC,cAAA,UAAQE,UAAU,kBAAkBC,QAASA,IAAMnB,EAAS,cAAc,iBAG1Ee,IAAAC,cAAA,UAAQE,UAAU,iBAAiBC,QAASV,GAAc,WAM7DZ,ICvEI,MAAMuB,EAAanC,YAAY,CACpCC,KAAM,SACNC,aAAc,CACZkC,SAAS,GAEXhC,SAAU,CACRiC,YAAc/B,IACZA,EAAM8B,SAAU,GAElBE,YAAchC,IACZA,EAAM8B,SAAU,OAKTC,YAAEA,EAAWC,YAAEA,GAAgBH,EAAW1B,QC2DxC8B,MApEEA,KACb,MAAMtB,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAE5CU,EAAWC,cACXC,EAAWC,cAqBjB,OAnBEG,oBAAU,KACH,WAARF,GACDF,EAAS,aAEL,CAACE,EAAMF,IAGPI,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAENiB,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACLoB,IAAAC,cAAA,OAAKE,UAAU,aACbH,IAAAC,cAAA,OAAKE,UAAU,UACbH,IAAAC,cAAA,OACCE,UAAU,MACTQ,GAAG,YACHP,QAASA,KAEPnB,EAAS,WAIXe,IAAAC,cAAA,SAAG,cAELD,IAAAC,cAAA,OACCE,UAAU,MACTQ,GAAG,gBACHP,QAASA,KACPnB,EAAS,eAGXe,IAAAC,cAAA,SAAG,kBAELD,IAAAC,cAAA,OACAE,UAAU,MACRQ,GAAG,UACHP,QAASA,KAEPnB,EAAS,cAIXe,IAAAC,cAAA,SAAG,qECQFW,MAhEDA,KACZ,MAAM3B,EAAWC,cACXH,EAAWC,cA6BjB,OACEgB,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,OAAKE,UAAU,kBACbH,IAAAC,cAACY,IAAI,CACHC,OAAO,WACPC,SAhCgBpB,UAEtB,IACEZ,EAASwB,KACT,MAAMS,QAAYC,IAAMC,KAAK,sBAAuBC,GAGpD,GADApC,EAASyB,KACLQ,EAAII,KAAKC,QAAS,CACpB/B,aAAaC,QAAQ,QAASyB,EAAII,KAAKE,OACvCC,IAAQF,QAAQL,EAAII,KAAKG,SACzB,MAAMC,EAASR,EAAII,KAAKK,MAAMpD,KAC9BU,EAASR,EAAQiD,IACzBE,QAAQC,IAAIH,GACZvC,EAAS,UAIDsC,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACP7C,EAASyB,KACTkB,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAWVzB,UAAU,iBAEVH,IAAAC,cAAA,MAAIE,UAAU,eAAc,SAE5BH,IAAAC,cAACY,IAAKgB,KAAI,CAACC,MAAM,QAAQ3D,KAAK,SAC5B6B,IAAAC,cAAC8B,IAAK,CAACC,KAAK,QAAQC,UAAQ,KAE9BjC,IAAAC,cAACY,IAAKgB,KAAI,CAACC,MAAM,WAAW3D,KAAK,YAC/B6B,IAAAC,cAAC8B,IAAK,CAACC,KAAK,WAAWC,UAAQ,KAEjCjC,IAAAC,cAACiC,IAAI,CAACC,GAAG,YAAYhC,UAAU,OAAM,4BAGrCH,IAAAC,cAAA,UAAQ+B,KAAK,SAAS7B,UAAU,mBAAkB,SAGlDH,IAAAC,cAAA,OAAKmC,MAAO,CAACC,MAAM,YAAY,6BAE7BrC,IAAAC,cAAA,KAAGmC,MAAO,CAACE,OAAO,QAAQ,uBAC1BtC,IAAAC,cAAA,KAAGmC,MAAO,CAACE,OAAO,QAAQ,yBCPvBC,MApDEA,KACf,MAAMtD,EAAWC,cACXH,EAAWC,cAoBjB,OACEgB,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,OAAKE,UAAU,kBACbH,IAAAC,cAACY,IAAI,CACHC,OAAO,WACPC,SAxBgBpB,UAEtB,IACEZ,EAASwB,KACT,MAAMS,QAAYC,IAAMC,KAAK,yBAA0BC,GACvDpC,EAASyB,KACLQ,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBtC,EAAS,WAETsC,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACP7C,EAASyB,KACTkB,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAUVzB,UAAU,iBAEVH,IAAAC,cAAA,MAAIE,UAAU,eAAc,gBAC5BH,IAAAC,cAACY,IAAKgB,KAAI,CAACC,MAAM,OAAO3D,KAAK,QAC3B6B,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOC,UAAQ,KAE7BjC,IAAAC,cAACY,IAAKgB,KAAI,CAACC,MAAM,QAAQ3D,KAAK,SAC5B6B,IAAAC,cAAC8B,IAAK,CAACC,KAAK,QAAQC,UAAQ,KAE9BjC,IAAAC,cAACY,IAAKgB,KAAI,CAACC,MAAM,WAAW3D,KAAK,YAC/B6B,IAAAC,cAAC8B,IAAK,CAACC,KAAK,WAAWC,UAAQ,KAEjCjC,IAAAC,cAACiC,IAAI,CAACC,GAAG,SAAShC,UAAU,OAAM,2BAGlCH,IAAAC,cAAA,UAAQ+B,KAAK,SAAS7B,UAAU,mBAAkB,gBC/CrD,MAAMqC,EAAiB3D,IAAkB,IAAjBC,SAAEA,GAAUD,EAC3BO,YAAYZ,GAASA,EAAMH,KAAKA,MAG9C,OAFciB,aAAaG,QAAQ,SAGzBX,EAEDkB,IAAAC,cAACwC,IAAQ,CAACN,GAAG,YCRXO,EAAc7D,IAAkB,IAAjBC,SAAEA,GAAUD,EACtC,OAAIS,aAAaG,QAAQ,SAChBO,IAAAC,cAACwC,IAAQ,CAACN,GAAG,MAEbrD,SCAX,MAAMsC,EAAO,CACX,CACEjD,KAAM,UACNwE,KAAM,WACNC,KAAM,+BAER,CACEzE,KAAM,QACNwE,KAAM,SACNC,KAAM,qBAER,CACEzE,KAAM,MACNwE,KAAM,OACNC,KAAM,wBAER,CACEzE,KAAM,SACNwE,KAAM,UACNC,KAAM,sBAER,CACEzE,KAAM,OACNwE,KAAM,QACNC,KAAM,sBAgDKC,MA7CEA,KAEf,MAAM1D,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEjBK,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAEJ,MAAME,EAAWC,cACjB,OACEc,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACPoB,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,eAC7GD,IAAAC,cAAA,WAASE,UAAU,cAChBiB,EAAK+B,IAAK/B,GAEPpB,IAAAC,cAAA,OACEE,UAAU,OACVC,QAASA,KACPnB,EAASmC,EAAKuB,QAGhB3C,IAAAC,cAAA,KAAGmD,MAAOhC,EAAKwB,OAEf5C,IAAAC,cAAA,SAAImB,EAAKjD,8BCwIVkF,MAnMGA,KAChB,MAAMpE,EAAWC,eACVoE,EAAWC,GAAgBC,mBAAS,IAErCrE,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEhBK,oBAAU,KACO,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IA+BNM,oBAAU,KAdUM,WAClB,MAAMqB,QAAYC,IAAMwC,IAAI,2BAA4B,CACtDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXkC,EAAavC,EAAII,KAAKA,MACtBG,IAAQF,QAAQ,oBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAIzBqC,IACC,IA6BH,OACE5D,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACLoB,IAAAC,cAAA,OAAKE,UAAU,IACbH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SAhEbpB,UACjB,IACE,MAAMqB,QAAYC,IAAMC,KAAK,wBAAyBC,GAElDH,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAoDoCzB,UAAU,OACtDH,IAAAC,cAAA,MAAIE,UAAU,eAAc,gBAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,aACN3D,KAAK,YACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,cAQRsB,GACCA,EAAUH,IAAK/B,GAEXpB,IAAAC,cAAA,OAAKE,UAAU,sBACbH,IAAAC,cAAA,OACEmC,MAAO,CAAEmC,OAAQ,WACjBpE,UAAU,cACVC,QAASA,KACPnB,mBAA0BmC,EAAKoD,SAElC,cAECxE,IAAAC,cAAA,SAAG,IAAEmB,EAAKqD,YAGZzE,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,aACFmB,EAAKsD,SAER1E,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,kBACFmB,EAAKuD,cAER3E,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,aACFmB,EAAKwD,SAER5E,IAAAC,cAAA,SACED,IAAAC,cAAA,UACEG,QAASA,KAEMyE,QAAQ,wBAEnB5F,gBAAuBmC,EAAKoD,QAGhCrE,UAAU,mBACX,QAGDH,IAAAC,cAAA,UACEG,QAASA,KA7HRT,WACnB,IAGE,GADakF,QAAQ,yBACT,CACV,MAAM7D,QAAYC,IAAMC,KACtB,2BACA,CAAEP,MACF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,UAElB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAuGIkD,CAAa1D,EAAKoD,MAEpBrE,UAAU,kBACX,iBChDN4E,MAvIGA,KAChB,MAAM9F,EAAWC,cACX8F,EAASC,eACRC,EAAWC,GAAgB3B,mBAAS,MAErCrE,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEhBK,oBAAU,KACO,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAiDN,OALAM,oBAAU,KArBWM,WACnB,MAAMqB,QAAYC,IAAMC,KACtB,wBACA,CACEkE,QAASJ,EAAOI,SAElB,CACE1B,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACX8D,EAAanE,EAAII,KAAKA,MACtBM,QAAQC,IAAIuD,GACZ3D,IAAQF,QAAQL,EAAII,KAAKG,UAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,UAMzB8D,IACC,IAGDrF,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACJsG,GACClF,IAAAC,cAAA,OAAKE,UAAU,YACbH,IAAAC,cAACY,IAAI,CACHC,OAAO,WACPC,SAvDOpB,UACjBwB,EAAOiE,QAAUJ,EAAOI,QACxB,IACE,MAAMpE,QAAYC,IAAMC,KAAK,yBAA0BC,EAAQ,CAC7DuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBtC,EAAS,WAETsC,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAsCNzB,UAAU,MACVmF,cAAeJ,GAEflF,IAAAC,cAAA,MAAIE,UAAU,eAAc,cAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,aACN3D,KAAK,YACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACqC,YAAY,sBAGvBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,wBCxHJuD,MARCA,IAEZvF,IAAAC,cAAA,OAAKE,UAAU,qBACbH,IAAAC,cAAA,OAAKE,UAAU,gDC4iBNqF,MAviBKA,KAClB,MAAMvG,EAAWC,eACXuG,OAAEA,GAAWC,IACbV,EAASC,eACRU,EAAcC,GAAmBpC,mBAAS,KAC1CqC,EAAUC,GAAetC,sBACzBuC,EAAgBC,GAAqBxC,mBAAS,KAC7CiB,EAAUwB,GAAczC,sBACvB0C,EAAQC,GAAY3C,mBAAS,IAEhCrE,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAGhBK,oBAAU,KACO,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAkCNM,oBAAU,KAhCcM,WACtB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,+BACA,CACEkE,QAASJ,EAAOI,SAElB,CACE1B,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXuE,EAAgB5E,EAAII,KAAKA,MACzBG,IAAQF,QAAQL,EAAII,KAAKG,UAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPL,IAAQK,MAAM,0BAahBwE,IACC,IACH/G,oBAAU,KAZWM,WACnB,MAAM0G,EAAQ,GACRC,EAAUX,EAChB,IAAK,IAAIvE,KAAQkF,EACfD,EAAMjF,EAAKoD,WAAa+B,EAAUnF,EAAKoF,kBAEzCR,EAAkBK,IAOlBI,IACC,CAACd,IAEJ,MAAMY,EAAY5G,UAChB,MAAM+G,EAAOC,IAAOC,GACdC,EAAMH,EAAKA,OACjB,IAAII,EAAS,GACb,MAAMC,EAAIF,EAAM,GACVG,EAAIH,EAAM,IAahB,SADqBA,IATnBC,EADQ,IAANC,GAAiB,KAANC,EACJ,KACM,IAAND,GAAiB,KAANC,EACX,KACM,IAAND,GAAiB,KAANC,EACX,KAEA,QAG0BN,EAAKO,OAAO,iBAyCrD5H,oBAAU,KACN,MAAM6H,EAAIhB,EAAQiB,KAAM/F,GAAOA,EAAKoD,MAAMQ,EAAOI,SAC7C8B,GACFjB,EAAaiB,EAAIzC,YAEf,CAACyB,EAAQlB,EAAOI,UAErB/F,oBAAU,KAzBQM,WACjB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,2BAA4B,CACtDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,QAEX8E,EAAWnF,EAAII,KAAKA,MAEpBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAWdyF,IACC,IA4BL,OACErH,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACToB,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAIwE,IACzGzE,IAAAC,cAAA,OACEE,UAAU,WACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,OACPkD,MAAO,OACPjF,OAAQ,QAGVtC,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SAxFdpB,UACnBwB,EAAOiE,QAAUJ,EAAOI,QACA,UAApBjE,EAAO0E,UAAwB1E,EAAOqG,gBACxCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhB,IACE,MAAMxG,QAAYC,IAAMC,KAAK,8BAA+BC,GACxDH,EAAII,KAAKC,SAGXE,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,2BAyEL5B,IAAAC,cAAA,MAAIE,UAAU,eAAc,YAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEjC1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,WAAU,oBACxB1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,6BAG7BvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAKR,YAAbwB,GACC7F,IAAAC,cAAA,OAAKmC,MAAO,CAAEiC,MAAO,SACnBrE,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACb9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,2BAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,4BAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,uBAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,2BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,qBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,eACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,mBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,iBACL2D,MAAM,kBACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,0BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,4BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,eACL2D,MAAM,sBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,4BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,uBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,UACL2D,MAAM,iBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,4BAOvCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,OAAQyD,WAAY,MAAMxD,UAAU,SACrD,eASXtE,IAAAC,cAAA,SACNE,UAAU,QACViC,MAAO,CACLiC,MAAO,OACP0D,eAAgB,WAChBzD,UAAW,SAGbtE,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,qBAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,eAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,gBAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAKLrC,IAAAC,cAAA,aACG0F,GACCA,EAAaxC,IAAK/B,GAChBpB,IAAAC,cAAA,MAAIiI,IAAK9G,EAAKoD,KACZxE,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKyE,WAEX7F,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,YAAO8F,EAAe3E,EAAKoD,MAAQ,eAErCxE,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACX3D,MAAO,UAGTrE,IAAAC,cAAA,OAAKmC,MAAO,CAAE+F,UAAW,QAASC,UAAW,SAC1ChH,EAAKiH,aAAe,QAGzBrI,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,WAGM,YAAlB5G,EAAKyE,UACJ7F,IAAAC,cAAA,OACEmC,MAAO,CACL+F,UAAW,QACXC,UAAW,SAGbpI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,mBAAmB,IAAEmB,EAAKkH,eAE/BtI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,mBAAmB,IAAEmB,EAAKmH,eAE/BvI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,iBAAiB,IAAEmB,EAAKoH,aAE7BxI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,iBAAiB,IAAEmB,EAAKqH,aAE7BzI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,eAAe,IAAEmB,EAAKsH,WAE3B1I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,oBAAoB,IAAEmB,EAAKuH,gBAEhC3I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,kBAAkB,IAAEmB,EAAKwH,cAE9B5I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,eAAe,IAAEmB,EAAKyH,WAE3B7I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,aAAa,IAAEmB,EAAK0H,WAK/B9I,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,KACEE,UAAU,yBACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,2BAtYflF,WACnB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,iCACA,CAAEP,MACF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,QAEXxB,OAAOC,SAASC,SAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAGzB,MAAOK,GACPL,IAAQK,MAAM,uBACdF,QAAQC,IAAIC,KAmXGkD,CAAa1D,EAAKoD,QAIxBxE,IAAAC,cAAA,KACEE,UAAU,iCACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,yBACjB5F,sBAA6BmC,EAAKoD,kBC3hBvD,MAAOiB,OAAMsD,GAAErD,IAmTAsD,MAjTSA,KACtB,MAAMhE,EAASC,cACThG,EAAWC,eACV+J,EAAcC,GAAmB1F,mBAAS,OAC1CqC,EAAUC,GAAetC,mBAAS,OAClC2F,GAAQtI,IAAKuI,UAEdjK,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEhBK,oBAAU,KACO,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAkCNM,oBAAU,KAhCWM,WACnB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,kCACA,CACEmI,cAAerE,EAAOqE,eAExB,CACE3F,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIpD,GAAIuB,EAAII,KAAKC,QAAS,CACpB6H,EAAgBlI,EAAII,KAAKA,MACzB,MAAMoF,iBAAEA,KAAqB8C,GAActI,EAAII,KAAKA,KACpD+H,EAAKI,eAAe,IACfD,EACH9C,iBAAkBG,IAAOH,KAE3BjF,IAAQF,QAAQL,EAAII,KAAKG,cAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAGzB,MAAOK,GACPF,QAAQE,MAAM,6BAA8BA,GAC5CL,IAAQK,MAAM,kCAMhByD,IACC,IA2BH,OACErF,IAAAC,cAACrB,EAAM,KACHoB,IAAAC,cAAA,OACSE,UAAU,WACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,QACPkD,MAAO,OACPjD,UAAW,SAGbtE,IAAAC,cAACY,IAAI,CACHC,OAAO,WACPC,SAtCIpB,UACK,UAApBwB,EAAO0E,UAAwB1E,EAAOqG,gBACxCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhBrG,EAAOqI,UAAYxE,EAAOqE,cAC1B,IACE,MAAMrI,QAAYC,IAAMC,KAAK,+BAAgCC,EAAQ,CACnEuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBtC,mBAA0B+B,EAAII,KAAKA,KAAKgE,YAExC7D,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAkBDzB,UAAU,MACVgJ,KAAMA,GAENnJ,IAAAC,cAAA,MAAIE,UAAU,eAAc,eAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEjC1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,OAAM,cACpB1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,WAAU,oBACxB1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,6BAG7BvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAKM,aAAf,OAAZ4E,QAAY,IAAZA,OAAY,EAAZA,EAAcpD,WACb7F,IAAAC,cAAA,OAAKmC,MAAO,CAAEiC,MAAO,SACnBrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,2BAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,4BAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,uBAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,2BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,qBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,eACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,mBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,iBACL2D,MAAM,kBACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,0BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,4BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,eACL2D,MAAM,sBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,4BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,uBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,UACL2D,MAAM,iBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,2BAMvCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,OAAQyD,WAAY,QACrC,iBC/FX2B,MAvMCA,KACd,MAAOC,EAAUC,GAAenG,mBAAS,IACnCvE,EAAWC,cAEXC,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEfK,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAiCNM,oBAAU,KAfSM,WACjB,MAAMqB,QAAYC,IAAMwC,IAAI,8BAA+B,CACzDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXsI,EAAY3I,EAAII,KAAKA,MACrBG,IAAQF,QAAQ,iBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAKzB8F,IACC,IA6BH,OACErH,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACPoB,IAAAC,cAAA,MAAIE,UAAU,iBAAgB,QAC5BH,IAAAC,cAAA,OAAKE,UAAU,IACbH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SApEbpB,UACjB,IACE,MAAMqB,QAAYC,IAAMC,KAAK,0BAA2BC,GAEpDH,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAGzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAuDoCzB,UAAU,OACtDH,IAAAC,cAAA,MAAIE,UAAU,aAAY,gBAC1BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,WACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,oBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,aACN3D,KAAK,QACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,sBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,cASV0H,GACCA,EAASvG,IAAK/B,GAEVpB,IAAAC,cAAA,OAAKE,UAAU,sBACbH,IAAAC,cAAA,OACEmC,MAAO,CAAEmC,OAAQ,WACjBpE,UAAU,cACVC,QAASA,KACPnB,iBAAwBmC,EAAKoD,SAEhC,YAECxE,IAAAC,cAAA,SAAG,IAAEmB,EAAKwI,UAGZ5J,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,YACFmB,EAAKyI,OAER7J,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,mBACFmB,EAAKuD,cAER3E,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,cACFmB,EAAKwD,SAER5E,IAAAC,cAAA,SACED,IAAAC,cAAA,UACEG,QAASA,KAEMyE,QAAQ,wBAEnB5F,cAAqBmC,EAAKoD,QAG9BrE,UAAU,mBACX,QAGDH,IAAAC,cAAA,UACEG,QAASA,KA/HNT,WACnB,IAGE,GADakF,QAAQ,yBACT,CACV,MAAM7D,QAAYC,IAAMC,KACtB,8BACA,CAAEP,MACF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,UAElB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAyGEkD,CAAa1D,EAAKoD,MAEpBrE,UAAU,kBACX,iBCnDJ2J,MAxICA,KACd,MAAM9E,EAASC,cACThG,EAAWC,eACV6K,EAASC,GAAcxG,mBAAS,MAEjCrE,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEfK,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAuBNM,oBAAU,KAtBSM,WACjB,MAAMqB,QAAYC,IAAMC,KACtB,8BACA,CACE+I,MAAOjF,EAAOiF,OAEhB,CACEvG,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACX2I,EAAWhJ,EAAII,KAAKA,MAGpBG,IAAQF,QAAQL,EAAII,KAAKG,UAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,UAMzB2I,IACC,IAwBH,OACElK,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACJmL,GACC/J,IAAAC,cAAA,OAAKE,UAAU,YACbH,IAAAC,cAACY,IAAI,CACHC,OAAO,WACPX,UAAU,MACVY,SA9BOpB,UACjBwB,EAAO8I,MAAQjF,EAAOiF,MACtB,IACE,MAAMjJ,QAAYC,IAAMC,KAAK,2BAA4BC,EAAQ,CAC/DuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBtC,EAAS,SAETsC,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAaN0D,cAAeyE,GAEf/J,IAAAC,cAAA,MAAIE,UAAU,eAAc,YAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,WACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,oBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,aACN3D,KAAK,QACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,sBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,iBC/GnB,MAAQyD,OAAO0E,GAAIzE,IA8iBJ0E,MA5iBGA,KAChB,MAAOC,EAAYC,GAAiB9G,mBAAS,KAEtCqC,EAAUC,GAAetC,sBACzBuC,EAAgBC,GAAqBxC,mBAAS,IAC/CwB,EAASC,eACR2E,EAAQW,GAAY/G,sBACpBgH,EAAKC,GAASjH,mBAAS,IACxBvE,EAAWC,cAEXC,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEhBK,oBAAU,KACO,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAEN,MAsDMwH,EAAY5G,UAChB,MAAM+G,EAAOC,IAAOC,GACdC,EAAMH,EAAKA,OACjB,IAAII,EAAS,GACb,MAAMC,EAAIF,EAAM,GACVG,EAAIH,EAAM,IAahB,SADqBA,IATnBC,EADQ,IAANC,GAAiB,KAANC,EACJ,KACM,IAAND,GAAiB,KAANC,EACX,KACM,IAAND,GAAiB,KAANC,EACX,KAEA,QAG0BN,EAAKO,OAAO,iBAwBnD5H,oBAAU,KACR,MAAM6H,EAAIsD,EAAKrD,KAAM/F,GAAOA,EAAKoD,MAAMQ,EAAOiF,OAC1C/C,GACFqD,EAAWrD,EAAI0C,UAEb,CAACY,EAAKxF,EAAOiF,QAElB5K,oBAAU,KA1BQM,WACjB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,2BAA4B,CACtDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBkJ,EAAQzJ,EAAII,KAAKA,OAEjBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAYdyF,IACC,IAELhI,oBAAU,KA5ESM,WACjB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,kCACA,CACE+I,MAAOjF,EAAOiF,OAEhB,CACEvG,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB+I,EAActJ,EAAII,KAAKA,OAEvBG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAwDhB8I,IACC,IAEHrL,oBAAU,KAzFWM,WACnB,MAAM0G,EAAQ,GACRC,EAAU+D,EAChB,IAAK,IAAIjJ,KAAQkF,EACfD,EAAMjF,EAAKoD,WAAa+B,EAAUnF,EAAKoF,kBAEzCR,EAAkBK,IAoFlBI,IACC,CAAC4D,IA2BJ,OACErK,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACPoB,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAI2J,IAC9G5J,IAAAC,cAAA,OACEE,UAAU,WACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,OACPkD,MAAO,OACPjF,OAAQ,QAGVtC,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SAxJXpB,UAEnBwB,EAAO8I,MAAQjF,EAAOiF,MACE,UAApB9I,EAAO0E,UAAwB1E,EAAOqG,gBACxCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhB,IACE,MAAMxG,QAAYC,IAAMC,KAAK,gCAAiCC,GAC1DH,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,2BAwIR5B,IAAAC,cAAA,MAAIE,UAAU,eAAc,YAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEjC1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,WAAU,oBACxB1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,6BAG7BvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAKR,YAAbwB,GACC7F,IAAAC,cAAA,OAAKmC,MAAO,CAAEiC,MAAO,SACnBrE,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACb9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,2BAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,4BAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,uBAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,2BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,qBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,eACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,mBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,iBACL2D,MAAM,kBACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,0BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,4BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,eACL2D,MAAM,sBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,4BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,uBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,UACL2D,MAAM,iBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,4BAOvCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,OAAQyD,WAAY,MAAMxD,UAAU,SACrD,eASXtE,IAAAC,cAAA,SACNE,UAAU,QACViC,MAAO,CACLiC,MAAO,OACP0D,eAAgB,WAChBzD,UAAW,SAGbtE,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,qBAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,eAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,gBAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAKLrC,IAAAC,cAAA,aACGoK,GACCA,EAAWlH,IAAK/B,GACdpB,IAAAC,cAAA,MAAIiI,IAAK9G,EAAKoD,KACZxE,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKyE,WAEX7F,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,YAAO8F,EAAe3E,EAAKoD,MAAQ,eAErCxE,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACX3D,MAAO,UAGTrE,IAAAC,cAAA,OAAKmC,MAAO,CAAE+F,UAAW,QAASC,UAAW,SAC1ChH,EAAKiH,aAAe,QAGzBrI,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,WAGM,YAAlB5G,EAAKyE,UACJ7F,IAAAC,cAAA,OACEmC,MAAO,CACL+F,UAAW,QACXC,UAAW,SAGbpI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,mBAAmB,IAAEmB,EAAKkH,eAE/BtI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,mBAAmB,IAAEmB,EAAKmH,eAE/BvI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,iBAAiB,IAAEmB,EAAKoH,aAE7BxI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,iBAAiB,IAAEmB,EAAKqH,aAE7BzI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,eAAe,IAAEmB,EAAKsH,WAE3B1I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,oBAAoB,IAAEmB,EAAKuH,gBAEhC3I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,kBAAkB,IAAEmB,EAAKwH,cAE9B5I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,eAAe,IAAEmB,EAAKyH,WAE3B7I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,aAAa,IAAEmB,EAAK0H,WAK/B9I,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,KACEE,UAAU,yBACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,2BAvYZlF,WACnB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,mCACA,CACEP,MAEF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAmXFkD,CAAa1D,EAAKoD,QAIxBxE,IAAAC,cAAA,KACEE,UAAU,iCACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,yBACjB5F,oBAA2BmC,EAAKoD,kBCldnCmG,MA1FC9L,IAAkB,IAAjBC,SAAEA,GAAUD,EAC3B,MAAMM,EAAMC,YAAYZ,GAAOA,EAAMH,KAAKA,MACpCU,EAAWC,cAEZK,oBAAU,KACO,UAAVF,GAA+B,WAAVA,EACvBG,aAAaC,QAAQ,OAAQJ,GACd,WAARA,GACPG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAEV,MAAME,EAAWC,cACXQ,EAAeC,UACfL,aAAaG,QAAQ,WACvBH,aAAaM,QACbX,EAAS,YAKb,OACEe,IAAAC,cAAAD,IAAAE,SAAA,KACS,WAARf,EACEa,IAAAC,cAAA,OAAKE,UAAU,UACZH,IAAAC,cAAA,UACAE,UAAU,kBACVC,QAASA,KACPnB,EAAS,cAEZ,qBAGDe,IAAAC,cAAA,UACEE,UAAU,kBACVC,QAASA,KACPnB,EAAS,mBAEZ,yBAGDe,IAAAC,cAAA,UAAQE,UAAU,iBAAiBC,QAASV,GAAc,WAKlEM,IAAAC,cAAA,OAAKE,UAAU,UACPH,IAAAC,cAAA,UACEE,UAAU,kBACVC,QAASA,KACPnB,EAAS,OAEZ,QAGDe,IAAAC,cAAA,UACEE,UAAU,kBACVC,QAASA,KACPnB,EAAS,cAEZ,qBAGDe,IAAAC,cAAA,UACEE,UAAU,kBACVC,QAASA,KACPnB,EAAS,mBAEZ,yBAGDe,IAAAC,cAAA,UAAQE,UAAU,iBAAiBC,QAASV,GAAc,WAM3DZ,IChCQ8L,MApDCA,KACd,MAAM3L,EAAWC,cACXC,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAcjB,OAZCK,oBAAU,KACO,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAEJiB,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAAC0K,EAAO,KACP3K,IAAAC,cAAA,OAAKmD,MAAM,aACNpD,IAAAC,cAAA,OAAKmD,MAAM,UACTpD,IAAAC,cAAA,OACEmD,MAAM,MACNzC,GAAG,YACHP,QAASA,KAEPnB,EAAS,cAIXe,IAAAC,cAAA,SAAG,sBAELD,IAAAC,cAAA,OACEmD,MAAM,MACNzC,GAAG,gBACHP,QAASA,KACPnB,EAAS,mBAGXe,IAAAC,cAAA,SAAG,+BC3BjB,MAAQwF,OAAOoF,GAAInF,IAmTJoF,MAjTOA,KACpB,MAAO3B,GAAQtI,IAAKuI,WACb2B,EAAWC,GAAgBxH,mBAAS,OACpCqC,EAAUC,GAAetC,mBAAS,MACnCwB,EAASC,cAGT9F,GAFWD,cAEHE,YAAasB,GAAUA,EAAMrC,KAAKA,OAC1CU,EAAWC,cAEhBK,oBAAU,KACO,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAgCNM,oBAAU,KA9BWM,WACnB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,uCACA,CACE+J,YAAajG,EAAOiG,aAEtB,CACEvH,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIpD,GAAIuB,EAAII,KAAKC,QAAS,CACpBE,IAAQF,QAAQL,EAAII,KAAKG,SACzByJ,EAAahK,EAAII,KAAKA,MACtB,MAAMoF,iBAAEA,KAAqB8C,GAActI,EAAII,KAAKA,KACpD+H,EAAKI,eAAe,IACfD,EACH9C,iBAAkBG,IAAOH,UAG3BjF,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAKhBsJ,IACC,IA2BH,OACElL,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACLoB,IAAAC,cAAA,OACEE,UAAU,WACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,QACPkD,MAAO,OACPjD,UAAW,SAGbtE,IAAAC,cAACY,IAAI,CACHC,OAAO,WACPC,SAvCWpB,UACK,UAApBwB,EAAO0E,UAAwB1E,EAAOqG,gBACxCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhBrG,EAAO8J,YAAcjG,EAAOiG,YAE5B,IACE,MAAMjK,QAAYC,IAAMC,KAAK,gCAAiCC,EAAQ,CACpEuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOsL,QAAQC,QAEf7J,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAmBRzB,UAAU,MACVgJ,KAAMA,GAENnJ,IAAAC,cAAA,MAAIE,UAAU,eAAc,eAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEjC1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,OAAM,cACpB1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,WAAU,oBACxB1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,6BAG7BvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAKG,aAAf,OAAT0G,QAAS,IAATA,OAAS,EAATA,EAAWlF,WACV7F,IAAAC,cAAA,OAAKmC,MAAO,CAAEiC,MAAO,SACnBrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,2BAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,4BAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,uBAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,2BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,qBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,eACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,mBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,iBACL2D,MAAM,kBACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,0BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,4BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,eACL2D,MAAM,sBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,4BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,uBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,UACL2D,MAAM,iBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,2BAMvCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,OAAQyD,WAAY,QACrC,kBCrTnB,MAAM1G,EAAO,CACT,CACEjD,KAAM,UACNwE,KAAM,cACNC,KAAM,+BAER,CACEzE,KAAM,QACNwE,KAAM,YACNC,KAAM,qBAER,CACEzE,KAAM,MACNwE,KAAM,UACNC,KAAM,wBAER,CACEzE,KAAM,SACNwE,KAAM,aACNC,KAAM,uBAkCGyI,MA7BCA,KACZ,MAAMpM,EAAWC,cACnB,OACEc,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAAC0K,EAAO,KACR3K,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,sBAC5GD,IAAAC,cAAA,OAAKmC,MAAO,CAACkC,UAAU,SACxBtE,IAAAC,cAAA,WAASE,UAAU,cACdiB,EAAK+B,IAAK/B,GAEPpB,IAAAC,cAAA,OACEE,UAAU,OACVC,QAASA,KACPnB,EAASmC,EAAKuB,QAGhB3C,IAAAC,cAAA,KAAGmD,MAAOhC,EAAKwB,OAEf5C,IAAAC,cAAA,SAAImB,EAAKjD,sBC1CzB,MAAQsH,OAAO6F,GAAI5F,IAuUJ6F,MArUAA,KACb,MAAOf,EAAMC,GAAWjH,mBAAS,KAC1B6G,EAAYmB,GAAiBhI,mBAAS,KAEtCiI,EAAYC,GAAiBlI,mBAAS,KACxCmI,EAAUC,GAAcpI,mBAAS,KAClCqI,EAAQC,GAAYtI,mBAAS,IAC7BuI,EAAUC,GAAcxI,mBAAS,aAE9ByI,EAAM1M,GAAWiE,mBAAS,QAC1B0I,EAAaC,GAAkB3I,sBAC/B4I,EAAUC,GAAc7I,mBAAS,KACjCmB,EAAa2H,GAAiB9I,mBAAS,SACvC+I,EAAeC,GAAmBhJ,mBAAS,KAE5CoG,EAAQW,GAAY/G,mBAAS,QAC7BiJ,EAAWC,GAAelJ,mBAAS,IAqDnCmJ,EAAYhN,UAChB,MAAMiN,EAAUpC,EAChB,IAAK,IAAIpJ,KAAQwL,EACf,GAAIxL,EAAKoD,MAAQyF,EACf,OAAO7I,EAAKyI,OAeZgD,EAAUlN,UACd,MAAMiN,EAAUpC,EAChB,IAAK,IAAIpJ,KAAQwL,EACf,GAAIxL,EAAKoD,MAAQyF,EACf,OAAO7I,EAAKuD,cAeZmI,EAAYnN,UAChB,MAAMiN,EAAUpC,EAChB,IAAK,IAAIpJ,KAAQwL,EACf,GAAIxL,EAAKoD,MAAQyF,EACf,OAAO7I,EAAKwI,SAOlBvK,oBAAU,KA9EYM,WACpB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,8BAA+B,CACzDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBiK,EAAcxK,EAAII,KAAKA,OAEvBG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAgEhBmL,IACC,IAEH1N,oBAAU,KArGSM,WACjB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,2BAA4B,CACtDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBkJ,EAAQzJ,EAAII,KAAKA,OAEjBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAuFhByF,IACC,IAEHhI,oBAAU,KAnEKM,WACb,MAAMkK,EAAQ,GAERmD,EAAgB3C,EACtB,IAAK,IAAIjJ,KAAQ4L,EACfnD,EAAMzI,EAAKoD,WAAamI,EAAUvL,EAAK6I,OAEzCyB,EAAc7B,IA6DdoD,IACC,CAAC5C,EAAYG,IAEhBnL,oBAAU,KApDYM,WACpB,MAAMyM,EAAY,GAEZY,EAAgB3C,EACtB,IAAK,IAAIjJ,KAAQ4L,EACfZ,EAAUhL,EAAKoD,WAAaqI,EAAQzL,EAAK6I,OAE3CuC,EAAkBJ,IA8ClBc,IACC,CAAC7C,EAAYG,IAGhBnL,oBAAU,KAtCOM,WACf,MAAMyM,EAAY,GAEZY,EAAgB3C,EACtB,IAAK,IAAIjJ,KAAQ4L,EACfZ,EAAUhL,EAAKoD,WAAasI,EAAU1L,EAAK6I,OAE7CyC,EAAcN,IAgCde,IACC,CAAC9C,EAAYG,IAEhBnL,oBAAU,KACZ,MAAMwM,EAAQ,IAAI,IAAIuB,IAAI5C,EAAKrH,IAAI/B,GAAMA,EAAKwI,WAC9CgC,EAAaC,IACT,CAACrB,IAEHnL,oBAAU,KACZ,MAAM+M,EAAU,IAAI,IAAIgB,IAAI5C,EAAKrH,IAAI/B,GAAMA,EAAKuD,gBAChD0H,EAAaD,IACT,CAAC5B,IA4BHnL,oBAAU,KA1BWM,WACnB,GAAa,QAATsM,EAAgB,CAClB,MAAMoB,EAAahD,EAAWlH,IAAK/B,IAAI,CACrC8G,IAAK9G,EAAKoD,IACV8I,QACoB,YAAlBlM,EAAKyE,SAAyBzE,EAAKkH,cAAgBlH,EAAKyE,SAC1Da,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YACAjH,EAAKiH,YAAa,KACjBjH,EAAKkH,+BAAiClH,EAAKkH,gBAAkB,KAAM,KACnElH,EAAKqM,uBAAyBrM,EAAKqM,YAAc,IAAK,KACtDrM,EAAKmH,gCAAkCnH,EAAKmH,gBAAkB,IAAK,KACnEnH,EAAKoH,4BAA8BpH,EAAKoH,cAAgB,IAAK,KAC7DpH,EAAKqH,4BAA8BrH,EAAKqH,cAAgB,IAAK,KAC7DrH,EAAKsH,wBAA0BtH,EAAKsH,YAAc,IAAK,KACvDtH,EAAKuH,kCACiBvH,EAAKuH,iBACxB,IAAK,KACRvH,EAAKwH,8BAAgCxH,EAAKwH,eAAiB,IAAK,KAChExH,EAAKyH,wBAA0BzH,EAAKyH,YAAc,IAAK,KACvDzH,EAAK0H,oBAAsB1H,EAAK0H,UAAY,IAC7Cc,QAAS6C,EAAWrL,EAAKoD,QAE3B2H,EAAekB,KAIjBK,IACC,CAACrD,EAAWoC,IAEf,MAoEMkB,EACQ,QAAZ/D,EACI,CACE,CAAEgE,MAAO,2BAA4BC,UAAW,UAAW3F,IAAK,WAChE,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAO,4BACPC,UAAW,cACX3F,IAAK,eAEP,CAAE0F,MAAO,WAAYC,UAAW,UAAW3F,IAAK,YAElD,CACE,CACE0F,MAAO,2BACPC,UAAW,UACX3F,IAAK,WAEP,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAO,cACPC,UAAW,cACX3F,IAAK,gBAiBf,OAJF7I,oBAAU,KAvGUyO,EAAC7B,EAAM8B,EAASC,EAAMvB,KACtC,IAAIwB,EACJ,GAAa,UAAThC,EACF,GAAe,QAAX8B,EAAkB,CAEpB,MAAMG,EAAc,CAAC,UAAW,UAAW,cAC3CD,EAAe5D,EAAW8D,OACvB/M,IAAU8M,EAAYE,SAAShN,EAAKyE,eAEnC,CACJ,MAAMqI,EAAc,CAAC,UAAW,UAAW,cAC3CD,EAAe5D,EAAW8D,OACvB/M,IACE8M,EAAYE,SAAShN,EAAKyE,WAC3B4G,EAAWrL,EAAKoD,OAAOuJ,QAM3BE,EAFgB,QAAThC,EACM,QAAX8B,EACa1D,EAEAA,EAAW8D,OACvB/M,GAASqL,EAAWrL,EAAKoD,OAAOuJ,GAItB,QAAXA,EACa1D,EAAW8D,OAAQ/M,GAASA,EAAKyE,WAAaoG,GAE9C5B,EAAW8D,OACvB/M,GAASA,EAAKyE,WAAaoG,GAAQQ,EAAWrL,EAAKoD,OAAOuJ,GAMrEE,EAAaI,KAAK,CAACC,EAAEC,KACnB,MAAMC,EAAM,IAAIjB,KAAKe,EAAE9H,kBACjBiI,EAAM,IAAIlB,KAAKgB,EAAE/H,kBACvB,MAAe,aAARwH,EAAmBS,EAAMD,EAAMA,EAAMC,IAG1C,MAAMpB,EAAaY,EAAa9K,IAAK/B,IAAI,CACvC8G,IAAK9G,EAAKoD,IACV8I,QACoB,YAAlBlM,EAAKyE,SAAyBzE,EAAKkH,cAAgBlH,EAAKyE,SAC1Da,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YACEjH,EAAKiH,YAAa,KACjBjH,EAAKkH,gCAAkClH,EAAKkH,gBAAkB,IAAK,KACnElH,EAAKqM,wBAA0BrM,EAAKqM,YAAc,IAAK,KACvDrM,EAAKmH,gCAAkCnH,EAAKmH,gBAAkB,IAAK,KACnEnH,EAAKoH,4BAA8BpH,EAAKoH,cAAgB,IAAK,KAC7DpH,EAAKqH,4BAA8BrH,EAAKqH,cAAgB,IAAK,KAC7DrH,EAAKsH,wBAA0BtH,EAAKsH,YAAc,IAAK,KACvDtH,EAAKuH,kCACiBvH,EAAKuH,iBACxB,IAAK,KACRvH,EAAKwH,8BAAgCxH,EAAKwH,eAAiB,IAAK,KAChExH,EAAKyH,wBAA0BzH,EAAKyH,YAAc,IAAK,KACvDzH,EAAK0H,oBAAsB1H,EAAK0H,UAAY,IAC/Cc,QAAS6C,EAAWrL,EAAKoD,QAE3B2H,EAAekB,IAwCnBS,CAAU7B,EAAKrC,EAAQmC,EAAUU,IAC/B,CAACR,EAAKrC,EAAQmC,EAAUU,IAGtBzM,IAAAC,cAAAD,IAAAE,SAAA,KAEEF,IAAAC,cAAC0K,EAAO,KACR3K,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,gBAC7GD,IAAAC,cAAA,OAAKE,UAAU,yDAAyDiC,MAAO,CAACiC,MAAM,SAEtFrE,IAAAC,cAAA,YAAM,kBACJD,IAAAC,cAACyF,IAAM,CAACtB,YAAY,iBAAiBqD,SArB7BC,IAClBnI,EAAQmI,IAoB8DtF,MAAO,CAACiC,MAAM,UACxErE,IAAAC,cAACwF,EAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,OAAM,QAEtB1H,IAAAC,cAAA,YAAM,iBACLD,IAAAC,cAACyF,IAAM,CAACtB,YAAY,kBAAkBqD,SAxB5BC,IACnB6C,EAAW7C,IAuB8DtF,MAAO,CAACiC,MAAM,UAC9ErE,IAAAC,cAACwF,EAAM,CAACiC,MAAM,OAAM,OAClBiE,EAAUxI,IAAK/B,GAChBpB,IAAAC,cAACwF,EAAM,CAACiC,MAAOtG,GAAOA,KAMvBpB,IAAAC,cAAA,YAAM,cACND,IAAAC,cAACyF,IAAM,CAACtB,YAAY,oBAAoBqD,SAAWC,IAASsE,EAAatE,KACxE1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,YAAW,cACzB1H,IAAAC,cAACwF,EAAM,CAACiC,MAAM,YAAW,gBAI7B1H,IAAAC,cAAA,UAAQG,QAASA,KAAKP,OAAO6O,SAAUtM,MAAO,CAAC0F,WAAW,MAAM6G,aAAa,OAAOpK,OAAO,YAAa,SACxGvE,IAAAC,cAAC2O,IAAK,CAACjB,QAASA,EAASkB,WAAY3C,EAAa4C,YAAY,OCpHvDC,MAzMKA,KAClB,MAAM9P,EAASC,eACR8P,EAAYC,GAAgBzL,mBAAS,IAEtCrE,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEjBK,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAmCAM,oBAAU,KAfYM,WACpB,MAAMqB,QAAYC,IAAMwC,IAAI,qCAAsC,CAChEC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACX4N,EAAejO,EAAII,KAAKA,MACxBG,IAAQF,QAAQ,qBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAKzB2N,IACC,IA6BP,OACElP,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAACrB,EAAM,KACPoB,IAAAC,cAAA,OAAKE,UAAU,IACTH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SApEXpB,UACf,IACE,MAAMqB,QAAYC,IAAMC,KAAK,kCAAmCC,GAE5DH,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,WAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SACtB1B,OAAOC,SAASC,UAEnB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAuDgCzB,UAAU,OACtDH,IAAAC,cAAA,MAAIE,UAAU,eAAc,kBAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,cACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,0BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,cACN3D,KAAK,SACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,uBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,cAQRgN,GACDA,EAAY7L,IAAK/B,GAEbpB,IAAAC,cAAA,OAAKE,UAAU,sBACbH,IAAAC,cAAA,OACEmC,MAAO,CAAEmC,OAAQ,WACjBpE,UAAU,cACVC,QAASA,KACPnB,qBAA4BmC,EAAKoD,SAEpC,gBAECxE,IAAAC,cAAA,SAAG,IAAEmB,EAAK+N,cAGZnP,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,aACFmB,EAAKgO,QAERpP,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,mBACFmB,EAAKuD,cAER3E,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,cACFmB,EAAKwD,SAER5E,IAAAC,cAAA,SACED,IAAAC,cAAA,UACEG,QAASA,KAEMyE,QAAQ,wBAEnB5F,kBAAyBmC,EAAKoD,QAGlCrE,UAAU,mBACX,QAGDH,IAAAC,cAAA,UACEG,QAASA,KA7HFT,WACnB,IAGE,GADakF,QAAQ,yBACT,CACV,MAAM7D,QAAYC,IAAMC,KACtB,qCACA,CAAEP,MACF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,UAElB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAuGFkD,CAAa1D,EAAKoD,MAEpBrE,UAAU,kBACX,iBCrDHkP,OArIKA,KACpB,MAAMrK,EAASC,cACRhG,EAAWC,eACVoQ,EAAaC,GAAkB/L,mBAAS,MAEzCrE,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEbK,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAwBJM,oBAAU,KAtBWM,WACnB,MAAMqB,QAAYC,IAAMC,KACtB,sCACA,CACEsO,UAAWxK,EAAOwK,WAEpB,CACE9L,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXkO,EAAevO,EAAII,KAAKA,MAGxBG,IAAQF,QAAQL,EAAII,KAAKG,UAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,UAMzBkO,IACC,IAwBN,OACEzP,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAACrB,EAAM,KACH0Q,GACDtP,IAAAC,cAAA,OAAKE,UAAU,YACLH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SA3BjBpB,UACjBwB,EAAOqO,UAAYxK,EAAOwK,UAC1B,IACE,MAAMxO,QAAYC,IAAMC,KAAK,mCAAoCC,EAAQ,CACvEuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBtC,EAAS,aAETsC,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BASwCzB,UAAU,MAAMmF,cAAegK,GAC3EtP,IAAAC,cAAA,MAAIE,UAAU,eAAc,gBAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,cACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,0BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,cACN3D,KAAK,SACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,uBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,uBCnHzB,MAAQyD,OAAOiK,IAAIhK,IAslBJiK,OAplBOA,KACpB,MAAOC,EAAgBC,GAAqBrM,mBAAS,KAC9CqC,EAAUC,GAAetC,sBACzBuC,EAAgBC,GAAqBxC,mBAAS,IAC/CwB,EAASC,eACPkK,EAAYW,GAAgBtM,sBAC3BuM,EAASC,GAAaxM,mBAAS,IAClCvE,EAAWC,cAEXC,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEjBK,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAqBJM,oBAAU,KACR,MAAM6H,EAAI6I,EAAS5I,KAAM/F,GAAOA,EAAKoD,MAAMQ,EAAOwK,WAC9CtI,GACF4I,EAAe5I,EAAIiI,cAEjB,CAACY,EAAS/K,EAAOwK,YAEtBnQ,oBAAU,KA1BQM,WACjB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,qCAAsC,CAChEC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzByO,EAAYhP,EAAII,KAAKA,OAErBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAYdyF,IACC,IAmFLhI,oBAAU,KAhDSM,WACjB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,0CACA,CACEsO,UAAWxK,EAAOwK,WAEpB,CACE9L,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBsO,EAAkB7O,EAAII,KAAKA,OAE3BG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA4BhB8I,IACC,IA+BH,OACE1K,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACLoB,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAIkP,IACxGnP,IAAAC,cAAA,OACEE,UAAU,WACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,OACPkD,MAAO,OACPjF,OAAQ,QAGVtC,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SA/HnBpB,UAEnBwB,EAAOqO,UAAYxK,EAAOwK,UACF,UAApBrO,EAAO0E,UAAwB1E,EAAOqG,gBACxCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhB,IACE,MAAMxG,QAAYC,IAAMC,KACtB,wCACAC,GAEEH,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,2BA4GA5B,IAAAC,cAAA,MAAIE,UAAU,eAAc,YAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEzC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,oBACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,0BAAyB,0BAGvC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,kBACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,uBAAsB,uBAGpC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,mBAAkB,mBAChC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,YAKR,UAAb7B,GACc7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,6BAG7BvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAKR,YAAbwB,GACC7F,IAAAC,cAAA,OAAKmC,MAAO,CAAEiC,MAAO,SACnBrE,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACb9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,2BAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,4BAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,uBAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,2BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,qBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,eACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,mBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,iBACL2D,MAAM,kBACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,0BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,4BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,eACL2D,MAAM,sBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,4BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,uBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,UACL2D,MAAM,iBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,4BAOvCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAKC,GAAI,GACxBlE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,OAAQyD,WAAY,MAAMxD,UAAU,SACrD,eAY9BtE,IAAAC,cAAA,SACEE,UAAU,QACViC,MAAO,CACLiC,MAAO,OACP0D,eAAgB,WAChBzD,UAAW,SAGbtE,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,qBAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,eAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,gBAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAKLrC,IAAAC,cAAA,aACG2P,GACCA,EAAezM,IAAK/B,GAClBpB,IAAAC,cAAA,MAAIiI,IAAK9G,EAAKoD,KACZxE,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKyE,WAEX7F,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGV,IAAIsF,KAAKnM,EAAKoF,kBAAkBgH,sBAEnCxN,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SAEX3D,MAAO,UAGTrE,IAAAC,cAAA,OAAKmC,MAAO,CAAE+F,UAAW,QAASC,UAAW,SAC1ChH,EAAKiH,aAAe,QAGzBrI,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,WAGM,YAAlB5G,EAAKyE,UACJ7F,IAAAC,cAAA,OACEE,UAAU,eACViC,MAAO,CACL+F,UAAW,QACXC,UAAW,SAGbpI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,mBAAmB,IAAEmB,EAAKkH,eAE/BtI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,eAAe,IAAEmB,EAAKqM,WAE3BzN,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,mBAAmB,IAAEmB,EAAKmH,eAE/BvI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,iBAAiB,IAAEmB,EAAKoH,aAE7BxI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,iBAAiB,IAAEmB,EAAKqH,aAE7BzI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,eAAe,IAAEmB,EAAKsH,WAE3B1I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,oBAAoB,IAAEmB,EAAKuH,gBAEhC3I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,kBAAkB,IAAEmB,EAAKwH,cAE9B5I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,eAAe,IAAEmB,EAAKyH,WAE3B7I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,aAAa,IAAEmB,EAAK0H,WAK/B9I,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,KACEE,UAAU,yBACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,2BA5apBlF,WACnB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,2CACA,CACEP,MAEF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAwZMkD,CAAa1D,EAAKoD,QAIxBxE,IAAAC,cAAA,KACEE,UAAU,iCACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,yBACjB5F,wBAA+BmC,EAAKoD,kBCnkB9D,MAAOiB,OAAMwK,IAAGvK,IAwUDwK,OAvUWA,KACtB,MAAO/G,GAAMtI,IAAKuI,WACXvD,EAAUC,GAAetC,mBAAS,OAClC2M,EAAmBC,GAAwB5M,mBAAS,MACrDwB,EAAOC,cAEP9F,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEnBK,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IA8DJ,OAJGM,oBAAU,KA3BaM,WACpB,MAAMqB,QAAYC,IAAMC,KACpB,4CACA,CACEmP,gBAAiBrL,EAAOqL,iBAE1B,CACE3M,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIpD,GAAIuB,EAAII,KAAKC,QAAS,CACpB+O,EAAqBpP,EAAII,KAAKA,MAG9B,MAAMoF,iBAACA,KAAoB8C,GAAWtI,EAAII,KAAKA,KAC/C+H,EAAKI,eAAe,IACbD,EACH9C,iBAAiBA,EAAiBG,IAAOH,GAAkB,OAE/DjF,IAAQF,QAAQL,EAAII,KAAKG,cAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,UAM3B+O,IACC,IAELtQ,IAAAC,cAAAD,IAAAE,SAAA,KACCF,IAAAC,cAACrB,EAAM,KAEIoB,IAAAC,cAAA,OACEE,UAAU,cACbiC,MAAO,CAACkF,OAAO,kBAAkBjD,MAAM,MAAM/B,OAAO,OAAOiF,MAAM,SAK9DvH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWX,UAAU,MAAOY,SAvEpCpB,UACS,UAApBwB,EAAO0E,UAAwB1E,EAAOqG,gBACtCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhBrG,EAAOkP,gBAAkBrL,EAAOqL,gBAEhC,IACE,MAAMrP,QAAYC,IAAMC,KACtB,2CACAC,EACA,CACEuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOsL,QAAQC,QAEf7J,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA8CyDuH,KAAMA,GACrEnJ,IAAAC,cAAA,MAAIE,UAAU,eAAc,eAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEjC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,oBACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,0BAAyB,0BAGvC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,kBACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,uBAAsB,uBAGpC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,mBAAkB,mBAChC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,6BAG7BvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAIS,aAAb,OAAjB8L,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBtK,WAClB7F,IAAAC,cAAA,OAAKmC,MAAO,CAAEiC,MAAO,SACnBrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,2BAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,4BAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,wBAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,2BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,qBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,eACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,mBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,iBACL2D,MAAM,kBACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,0BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,4BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,eACL2D,MAAM,sBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,4BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,uBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,UACL2D,MAAM,iBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,2BAMvCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,OAAQyD,WAAY,QACrC,kBCpU3B,MAAQrC,OAAO8K,IAAI7K,IA2MJ8K,OAzMIA,KACjB,MAAO3K,EAAUC,GAAetC,mBAAS,OACnCiN,EAAYC,GAAiBlN,mBAAS,IACtCvE,EAAWC,cAEXC,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEfK,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAiCNM,oBAAU,KAfWM,WACnB,MAAMqB,QAAYC,IAAMwC,IAAI,mCAAoC,CAC9DC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXqP,EAAc1P,EAAII,KAAKA,MACvBG,IAAQF,QAAQ,mBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAKzBoP,IACC,IA6BH,OACE3Q,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACLoB,IAAAC,cAAA,OACEE,UAAU,OAGVH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SAtEbpB,UACjB,IACE,MAAMqB,QAAYC,IAAMC,KAAK,gCAAiCC,GAE1DH,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAGzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAyDoCzB,UAAU,OACtDH,IAAAC,cAAA,MAAIE,UAAU,eAAc,gBAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,mBACN3D,KAAK,WACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,oBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,cACN3D,KAAK,SACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,sBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,cAQRyO,GACDA,EAAWtN,IAAK/B,GAEZpB,IAAAC,cAAA,OAAKE,UAAU,sBACbH,IAAAC,cAAA,OACEmC,MAAO,CAAEmC,OAAQ,WACjBpE,UAAU,cACVC,QAASA,KACPnB,oBAA2BmC,EAAKoD,SAEnC,oBAECxE,IAAAC,cAAA,SAAG,IAAEmB,EAAKwP,WAGZ5Q,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,aACFmB,EAAKgO,QAERpP,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,mBACFmB,EAAKuD,cAER3E,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,cACFmB,EAAKwD,SAER5E,IAAAC,cAAA,SACED,IAAAC,cAAA,UACEG,QAASA,KAEMyE,QAAQ,wBAEnB5F,iBAAwBmC,EAAKoD,QAGjCrE,UAAU,mBACX,QAGDH,IAAAC,cAAA,UACEG,QAASA,KAhINT,WACnB,IAGE,GADakF,QAAQ,yBACT,CACV,MAAM7D,QAAYC,IAAMC,KACtB,mCACA,CAAEP,MACF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,UAElB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA0GEkD,CAAa1D,EAAKoD,MAEpBrE,UAAU,kBACX,iBCtDJ0Q,OAxIIA,KAClB,MAAM7L,EAASC,cACRhG,EAAWC,eACV4R,EAAYC,GAAiBvN,mBAAS,OACtC2F,GAAMtI,IAAKuI,UAEZjK,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEfK,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAwBNM,oBAAU,KAvBYM,WACpB,MAAMqB,QAAYC,IAAMC,KACtB,oCACA,CACE8P,aAAchM,EAAOgM,cAEvB,CACEtN,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACX0P,EAAc/P,EAAII,KAAKA,MAGvB+H,EAAKI,eAAevI,EAAII,KAAKA,MAC7BG,IAAQF,QAAQL,EAAII,KAAKG,UAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,UAMzB0P,IACC,IAyBH,OACEjR,IAAAC,cAAAD,IAAAE,SAAA,KACCF,IAAAC,cAACrB,EAAM,KACPoB,IAAAC,cAAA,OACKE,UAAU,MACViC,MAAO,CAAEkF,OAAQ,kBAAmBjD,MAAO,QAAQkD,MAAM,SAEzDvH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SA9BbpB,UACjBwB,EAAO6P,aAAehM,EAAOgM,aAC7B,IACE,MAAMhQ,QAAYC,IAAMC,KAAK,mCAAoCC,EAAQ,CACvEuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBtC,EAAS,YAETsC,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAYoCzB,UAAU,MAAMgJ,KAAMA,GAClEnJ,IAAAC,cAAA,MAAIE,UAAU,eAAc,gBAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,mBACN3D,KAAK,WACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,oBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,cACN3D,KAAK,SACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,sBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,iBCzHjB,MAAQyD,OAAOyL,IAAIxL,IAwrBJyL,OAtrBMA,KACnB,MAAOC,EAAeC,GAAoB7N,mBAAS,KAC5CqC,EAAUC,GAAetC,qBAE1BwB,EAASC,eACNqM,EAAeC,GAAmB/N,sBAClCgO,EAAYC,GAAgBjO,mBAAS,IACxCvE,EAAWC,cAEXC,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEfK,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAsBNM,oBAAU,KACR,MAAM6H,EAAIsK,EAAYrK,KAAM/F,GAAOA,EAAKoD,MAAMQ,EAAOgM,cACjD9J,GACFqK,EAAkBrK,EAAI0J,WAEpB,CAACY,EAAYxM,EAAOgM,eAEzB3R,oBAAU,KA1BQM,WACjB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,mCAAoC,CAC9DC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBkQ,EAAezQ,EAAII,KAAKA,OAExBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAYdyF,IACC,IAmDLhI,oBAAU,KAxBSM,WACjB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,wCACA,CACE8P,aAAchM,EAAOgM,cAEvB,CACEtN,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB8P,EAAiBrQ,EAAII,KAAKA,OAE1BG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAIhB8I,IACC,IA0BH,OACE1K,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACHoB,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAIqR,IAC3GtR,IAAAC,cAAA,OACEE,UAAU,WACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,OACPkD,MAAO,OACPjF,OAAQ,QAGVtC,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SAzFlBpB,UAEnBwB,EAAO6P,aAAehM,EAAOgM,aACL,UAApB7P,EAAO0E,UAAwB1E,EAAOqG,gBACxCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhB,IACE,MAAMxG,QAAYC,IAAMC,KACtB,sCACAC,GAEEH,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,2BAsED5B,IAAAC,cAAA,MAAIE,UAAU,eAAc,YAC5BH,IAAAC,cAAC4D,IAAG,CAACA,KAAG,EAACC,OAAQ,IACf9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAExC1H,IAAAC,cAAA,UAAQyH,MAAM,UAAS,UACvB1H,IAAAC,cAAA,UAAQyH,MAAM,WAAU,WACxB1H,IAAAC,cAAA,UAAQyH,MAAM,UAAS,UACvB1H,IAAAC,cAAA,UAAQyH,MAAM,mBAAkB,oBAChC1H,IAAAC,cAAA,UAAQyH,MAAM,WAAU,WACxB1H,IAAAC,cAAA,UAAQyH,MAAM,aAAY,aAC1B1H,IAAAC,cAAA,UAAQyH,MAAM,OAAM,sCAGpB1H,IAAAC,cAAA,UAAQyH,MAAM,kBAAiB,0BAG/B1H,IAAAC,cAAA,UAAQyH,MAAM,eAAc,gBAC5B1H,IAAAC,cAAA,UAAQyH,MAAM,mBAAkB,4BAGhC1H,IAAAC,cAAA,UAAQyH,MAAM,iBAAgB,kBAC9B1H,IAAAC,cAAA,UAAQyH,MAAM,aAAY,uCAG1B1H,IAAAC,cAAA,UAAQyH,MAAM,eAAc,yBAC5B1H,IAAAC,cAAA,UAAQyH,MAAM,mBAAkB,oBAChC1H,IAAAC,cAAA,UAAQyH,MAAM,iBAAgB,0BAG9B1H,IAAAC,cAAA,UAAQyH,MAAM,2BAA0B,oCAGxC1H,IAAAC,cAAA,UAAQyH,MAAM,iBAAgB,kBAC9B1H,IAAAC,cAAA,UAAQyH,MAAM,mBAAkB,4BAGhC1H,IAAAC,cAAA,UAAQyH,MAAM,oBAAmB,2BAGjC1H,IAAAC,cAAA,UAAQyH,MAAM,QAAO,mCAGrB1H,IAAAC,cAAA,UAAQyH,MAAM,eAAc,gBAC5B1H,IAAAC,cAAA,UAAQyH,MAAM,sBAAqB,oCAGnC1H,IAAAC,cAAA,UAAQyH,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,6BAG7BvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAIR,WAAbwB,GACC7F,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,iBACN3D,KAAK,aACLgG,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLoC,YAAY,8BAKlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,mBACN3D,KAAK,aACLgG,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,kCAIbvB,IAAAC,cAACyF,IAAM,CAACtB,YAAY,2BAClBpE,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,mBACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,cACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,sBAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,eACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,oBAK7B1H,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,mBACN3D,KAAK,kBACLgG,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,kCAIbvB,IAAAC,cAACyF,IAAM,CAACtB,YAAY,2BAClBpE,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,kBACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,aAK7B1H,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,aACN3D,KAAK,YACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,4BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,uBAInCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,YACN3D,KAAK,WACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,2BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAInCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,cACN3D,KAAK,aACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,6BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAKzB,YAAbyB,GACE7F,IAAAC,cAAAD,IAAAE,SAAA,KAECF,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,2BAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,4BAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,wBAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,2BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,qBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,eACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,mBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,iBACL2D,MAAM,kBACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,0BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,4BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,eACL2D,MAAM,sBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,4BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,uBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,UACL2D,MAAM,iBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,2BAOvCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,OAAQyD,WAAY,MAAMxD,UAAU,SACrD,eASXtE,IAAAC,cAAA,SACEE,UAAU,QACViC,MAAO,CACLiC,MAAO,OACP0D,eAAgB,WAChBzD,UAAW,SAGbtE,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,qBAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,eAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,uBAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAKLrC,IAAAC,cAAA,aACGmR,GACCA,EAAcjO,IAAK/B,GACjBpB,IAAAC,cAAA,MAAIiI,IAAK9G,EAAKoD,KACZxE,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKyE,WAEX7F,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGV,IAAIsF,KAAKnM,EAAKoF,kBAAkBgH,sBAEnCxN,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SAEX3D,MAAO,UAGTrE,IAAAC,cAAA,OAAKmC,MAAO,CAAE+F,UAAW,QAASC,UAAW,SAC1ChH,EAAKiH,aAAe,QAGzBrI,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,WAGM,WAAlB5G,EAAKyE,UACJ7F,IAAAC,cAAA,OAAKmC,MAAO,CAAE+F,UAAW,QAASC,UAAW,SAE3CpI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,oBACFmB,EAAKsQ,YAER1R,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,iBACFmB,EAAKuQ,YAER3R,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,sBACFmB,EAAKwQ,iBAER5R,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,gBACFmB,EAAKqM,WAERzN,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,cACFmB,EAAKyQ,UAER7R,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,iBACFmB,EAAK0Q,aAIO,YAAlB1Q,EAAKyE,UACJ7F,IAAAC,cAAA,OACEE,UAAU,eACViC,MAAO,CACL+F,UAAW,QACXC,UAAW,SAGbpI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,mBAAmB,IAAEmB,EAAKkH,eAE/BtI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,eAAe,IAAEmB,EAAKqM,WAE3BzN,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,mBAAmB,IAAEmB,EAAKmH,eAE/BvI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,iBAAiB,IAAEmB,EAAKoH,aAE7BxI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,iBAAiB,IAAEmB,EAAKqH,aAE7BzI,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,eAAe,IAAEmB,EAAKsH,WAE3B1I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,oBAAoB,IAAEmB,EAAKuH,gBAEhC3I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,kBAAkB,IAAEmB,EAAKwH,cAE9B5I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,eAAe,IAAEmB,EAAKyH,WAE3B7I,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,aAAa,IAAEmB,EAAK0H,WAK/B9I,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,KACEE,UAAU,yBACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,2BAjjBpBlF,WACnB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,yCACA,CACEP,MAEF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA6hBMkD,CAAa1D,EAAKoD,QAIxBxE,IAAAC,cAAA,KACEE,UAAU,iCACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,yBACjB5F,uBAA8BmC,EAAKoD,kBCnqB3D,MAAOiB,OAAMsM,IAAGrM,IAybHsM,OAvbUA,KACnB,MAAO7I,GAAMtI,IAAKuI,WACTvD,EAAUC,GAAetC,mBAAS,OAClCyO,EAAmBC,GAAuB1O,mBAAS,MACpDwB,EAAOC,cAEb9F,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEfK,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IA+BEM,oBAAU,KA9BYM,WACpB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,6CACA,CACEiR,eAAgBnN,EAAOmN,gBAEzB,CACEzO,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIpD,GAAIuB,EAAII,KAAKC,QAAS,CACpBE,IAAQF,QAAQL,EAAII,KAAKG,SACzB2Q,EAAoBlR,EAAII,KAAKA,MAC7B,MAAMoF,iBAAEA,KAAqB8C,GAActI,EAAII,KAAKA,KACpD+H,EAAKI,eAAe,IACfD,EACH9C,iBAAkBG,IAAOH,UAG3BjF,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAKhBwQ,IACC,IA+BX,OACEpS,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAACrB,EAAM,KACJoB,IAAAC,cAAA,OACSE,UAAU,cACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,MACP/B,OAAQ,OACRiF,MAAO,SAGTvH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SAzCXpB,UACO,UAApBwB,EAAO0E,UAAwB1E,EAAOqG,gBACtCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhBrG,EAAOgR,eAAiBnN,EAAOmN,eAE/B,IACE,MAAMnR,QAAYC,IAAMC,KACtB,yCACAC,EACA,CACEuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOsL,QAAQC,QAEf7J,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAgBkCzB,UAAU,MAAMgJ,KAAMA,GACpEnJ,IAAAC,cAAA,MAAIE,UAAU,eAAc,eAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEjC1H,IAAAC,cAAA,UAAQyH,MAAM,UAAS,UACvB1H,IAAAC,cAAA,UAAQyH,MAAM,WAAU,WACxB1H,IAAAC,cAAA,UAAQyH,MAAM,UAAS,UACvB1H,IAAAC,cAAA,UAAQyH,MAAM,mBAAkB,oBAChC1H,IAAAC,cAAA,UAAQyH,MAAM,WAAU,WACxB1H,IAAAC,cAAA,UAAQyH,MAAM,aAAY,aAC1B1H,IAAAC,cAAA,UAAQyH,MAAM,OAAM,sCAGpB1H,IAAAC,cAAA,UAAQyH,MAAM,kBAAiB,0BAG/B1H,IAAAC,cAAA,UAAQyH,MAAM,eAAc,gBAC5B1H,IAAAC,cAAA,UAAQyH,MAAM,mBAAkB,4BAGhC1H,IAAAC,cAAA,UAAQyH,MAAM,iBAAgB,kBAC9B1H,IAAAC,cAAA,UAAQyH,MAAM,aAAY,uCAG1B1H,IAAAC,cAAA,UAAQyH,MAAM,eAAc,yBAC5B1H,IAAAC,cAAA,UAAQyH,MAAM,mBAAkB,oBAChC1H,IAAAC,cAAA,UAAQyH,MAAM,iBAAgB,0BAG9B1H,IAAAC,cAAA,UAAQyH,MAAM,2BAA0B,oCAGxC1H,IAAAC,cAAA,UAAQyH,MAAM,iBAAgB,kBAC9B1H,IAAAC,cAAA,UAAQyH,MAAM,mBAAkB,4BAGhC1H,IAAAC,cAAA,UAAQyH,MAAM,oBAAmB,2BAGjC1H,IAAAC,cAAA,UAAQyH,MAAM,QAAO,mCAGrB1H,IAAAC,cAAA,UAAQyH,MAAM,eAAc,gBAC5B1H,IAAAC,cAAA,UAAQyH,MAAM,sBAAqB,oCAGnC1H,IAAAC,cAAA,UAAQyH,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,6BAG7BvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAIR,WAAbwB,GACC7F,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,iBACN3D,KAAK,aACLgG,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLoC,YAAY,8BAKlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,mBACN3D,KAAK,aACLgG,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,kCAIbvB,IAAAC,cAACyF,IAAM,CAACtB,YAAY,2BAClBpE,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,mBACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,cACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,sBAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,eACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,oBAK7B1H,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,mBACN3D,KAAK,kBACLgG,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,kCAIbvB,IAAAC,cAACyF,IAAM,CAACtB,YAAY,2BAClBpE,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,kBACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,aAK7B1H,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,aACN3D,KAAK,YACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,4BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,uBAInCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,YACN3D,KAAK,WACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,2BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAInCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,cACN3D,KAAK,aACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,6BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAKzB,YAAbyB,GACC7F,IAAAC,cAAA,OAAKmC,MAAO,CAAEiC,MAAO,SACnBrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,2BAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,4BAIbvB,IAAAC,cAAC8B,IAAK,CACJC,KAAK,OACLI,MAAO,CAAEiC,MAAO,QAChBD,YAAY,wBAIlBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,gBACL2D,MAAM,iBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,gCAIbvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,2BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,qBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,eACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,mBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,iBACL2D,MAAM,kBACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,0BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,4BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,eACL2D,MAAM,sBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,YACL2D,MAAM,aACNqC,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,4BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,uBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,UACL2D,MAAM,iBACNqC,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,2BAMvCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,OAAQyD,WAAY,QACrC,kBCvbzB,MAAQrC,OAAO4M,IAAI3M,IA+VJ4M,OA7VEA,KACb,MAAOpM,EAAQC,GAAc3C,mBAAS,KAE/BmC,EAAcC,GAAmBpC,mBAAS,KAE1C+O,EAAcC,GAAmBhP,mBAAS,KAC5CiP,EAAWC,GAAelP,mBAAS,KACpCmP,EAAUC,GAAcpP,mBAAS,IACjCuI,EAAUC,GAAcxI,mBAAS,aAE9ByI,EAAM1M,GAAWiE,mBAAS,QAC1B0I,EAAaC,GAAkB3I,sBAC7B4I,EAAUC,GAAc7I,mBAAS,KACjCmB,EAAa2H,GAAiB9I,mBAAS,SACvC+I,EAAeC,GAAmBhJ,mBAAS,KAE3CiB,EAAUwB,GAAczC,mBAAS,QACjCqP,EAAaC,GAAiBtP,mBAAS,IAkD1CuP,EAAcpT,UAClB,MAAMqT,EAAW9M,EACjB,IAAK,IAAI9E,KAAQ4R,EACf,GAAI5R,EAAKoD,MAAQY,EACf,OAAOhE,EAAKsD,SAkCZuO,EAActT,UAClB,MAAMqT,EAAW9M,EACjB,IAAK,IAAI9E,KAAQ4R,EACf,GAAI5R,EAAKoD,MAAQY,EACf,OAAOhE,EAAKqD,WAKlBpF,oBAAU,KA5EcM,WACtB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,kCAAmC,CAC7DC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBqE,EAAgB5E,EAAII,KAAKA,OAEzBG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA8DhBwE,IACC,IAEH/G,oBAAU,KAnGUM,WAClB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,2BAA2B,CACrDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB4E,EAAWnF,EAAII,KAAKA,OAEpBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAqFhBgC,IACC,IAEHvE,oBAAU,KAjEOM,WACf,MAAM+E,EAAU,GAEVwO,EAAkBvN,EACxB,IAAK,IAAIvE,KAAQ8R,EACfxO,EAAQtD,EAAKoD,WAAauO,EAAY3R,EAAKgE,SAE7CoN,EAAgB9N,IA2DhByO,IACC,CAACxN,EAAcO,IAElB7G,oBAAU,KA/BSM,WACjB,MAAMyM,EAAY,GAEZ8G,EAAkBvN,EACxB,IAAK,IAAIvE,KAAQ8R,EACf9G,EAAUhL,EAAKoD,WAAayO,EAAY7R,EAAKgE,SAE/C0N,EAAgB1G,IAyBdgH,IACC,CAACzN,EAAcO,IAEpB7G,oBAAU,KACZ,MAAMsT,EAAU,IAAI,IAAIvF,IAAIlH,EAAQ/C,IAAI/B,GAAMA,EAAKqD,aAEnDiO,EAAcC,IAEV,CAACzM,IAED7G,oBAAU,KACZ,MAAM+M,EAAU,IAAI,IAAIgB,IAAIlH,EAAQ/C,IAAI/B,GAAMA,EAAKuD,gBACnD0H,EAAaD,IACT,CAAClG,IA8BH7G,oBAAU,KA1BSM,WACjB,GAAa,QAATsM,EAAgB,CAClB,MAAMoB,EAAa1H,EAAaxC,IAAK/B,IAAI,CACvC8G,IAAK9G,EAAKoD,IACV8I,QACoB,YAAlBlM,EAAKyE,SAAyBzE,EAAKkH,cAAgBlH,EAAKyE,SAC1Da,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YACAjH,EAAKiH,YAAa,KACjBjH,EAAKkH,+BAAiClH,EAAKkH,gBAAkB,KAAM,KACnElH,EAAKqM,uBAAyBrM,EAAKqM,YAAc,IAAK,KACtDrM,EAAKmH,gCAAkCnH,EAAKmH,gBAAkB,IAAK,KACnEnH,EAAKoH,4BAA8BpH,EAAKoH,cAAgB,IAAK,KAC7DpH,EAAKqH,4BAA8BrH,EAAKqH,cAAgB,IAAK,KAC7DrH,EAAKsH,wBAA0BtH,EAAKsH,YAAc,IAAK,KACvDtH,EAAKuH,kCACiBvH,EAAKuH,iBACxB,IAAK,KACRvH,EAAKwH,8BAAgCxH,EAAKwH,eAAiB,IAAK,KAChExH,EAAKyH,wBAA0BzH,EAAKyH,YAAc,IAAK,KACvDzH,EAAK0H,oBAAsB1H,EAAK0H,UAAY,IAC7CrE,UAAWoO,EAAazR,EAAKoD,QAE/B2H,EAAekB,KAIjBK,IACC,CAAC/H,EAAckN,IAElB,MAgGIlF,EACY,QAAdlJ,EACI,CACE,CAAEmJ,MAAO,2BAA4BC,UAAW,UAAW3F,IAAK,WAChE,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAO,4BACPC,UAAW,cACX3F,IAAK,eAEP,CAAE0F,MAAO,aAAcC,UAAW,YAAa3F,IAAK,cAEtD,CACE,CACE0F,MAAO,2BACPC,UAAW,UACX3F,IAAK,WAEP,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAO,cACPC,UAAW,cACX3F,IAAK,gBAiBnB,OAJE7I,oBAAU,KAnIUyO,EAAC7B,EAAMxH,EAAUuJ,EAAM6E,KACvC,IAAI5E,EACJ,GAAa,UAAThC,GACF,GAAkB,IAAd0G,GAAkC,SAAfhO,EAAuB,CAE5C,MAAMuJ,EAAc,CAAC,UAAU,aAAa,aAAa,UAAU,aACnED,EAAetI,EAAawI,OACzB/M,IAAU8M,EAAYE,SAAShN,EAAKyE,gBAElC,GAAe,IAAZ8M,GAAgC,SAAfhO,EAAsB,CAC/C,MAAMuJ,EAAc,CAAC,UAAU,aAAa,aAAa,UAAU,aACnED,EAAetI,EAAawI,OACzB/M,IACE8M,EAAYE,SAAShN,EAAKyE,WAC3B0G,EAAenL,EAAKoD,OAASG,QAE7B,GAAe,IAAZgO,GAAgC,SAAfhO,EAAsB,CAC9C,MAAMuJ,EAAc,CAAC,UAAU,aAAa,aAAa,UAAU,aACnED,EAAetI,EAAawI,OACzB/M,IACE8M,EAAYE,SAAShN,EAAKyE,WAC3B0M,EAAanR,EAAKoD,OAASmO,QAE3B,GAAe,IAAZA,GAAgC,SAAfhO,EAAuB,CAC/C,MAAMuJ,EAAc,CAAC,UAAU,aAAa,aAAa,UAAU,aACnED,EAAetI,EAAawI,OACzB/M,IACE8M,EAAYE,SAAShN,EAAKyE,WAC3B0M,EAAanR,EAAKoD,OAASmO,GAAapG,EAAenL,EAAKoD,OAAOG,QAGvD,QAATsH,EACS,IAAd0G,GAAkC,SAAfhO,EACrBsJ,EAAetI,EACK,IAAZgN,GAAgC,SAAfhO,EACzBsJ,EAAetI,EAAawI,OACzB/M,GAASmL,EAAenL,EAAKoD,OAASG,GAEtB,IAAZgO,GAAgC,SAAfhO,EACxBsJ,EAAetI,EAAawI,OACzB/M,GAASmR,EAAanR,EAAKoD,OAASmO,GAEpB,IAAZA,GAAgC,SAAfhO,IACxBsJ,EAAetI,EAAawI,OACzB/M,GAASmR,EAAanR,EAAKoD,OAASmO,GAAapG,EAAenL,EAAKoD,OAAOG,IAI/D,IAAdgO,GAAkC,SAAfhO,EACrBsJ,EAAetI,EAAawI,OAAQ/M,GAASA,EAAKyE,WAAaoG,GAC3C,IAAZ0G,GAAgC,SAAfhO,EACzBsJ,EAAetI,EAAawI,OACzB/M,GAASA,EAAKyE,WAAaoG,GAAQM,EAAenL,EAAKoD,OAASG,GAEhD,IAAZgO,GAAgC,SAAfhO,EACxBsJ,EAAetI,EAAawI,OACzB/M,GAASA,EAAKyE,WAAaoG,GAAQsG,EAAanR,EAAKoD,OAASmO,GAE9C,IAAZA,GAAgC,SAAfhO,IACxBsJ,EAAetI,EAAawI,OACzB/M,GAASA,EAAKyE,WAAaoG,GAAQsG,EAAanR,EAAKoD,OAASmO,GAAapG,EAAenL,EAAKoD,OAAOG,IAMjHsJ,EAAaI,KAAK,CAACC,EAAEC,KACnB,MAAMC,EAAM,IAAIjB,KAAKe,EAAE9H,kBACjBiI,EAAM,IAAIlB,KAAKgB,EAAE/H,kBACvB,MAAe,aAARwH,EAAmBS,EAAMD,EAAMA,EAAMC,IAG1C,MAAMpB,EAAaY,EAAa9K,IAAK/B,IAAI,CACvC8G,IAAK9G,EAAKoD,IACV8I,QACoB,YAAlBlM,EAAKyE,SAAyBzE,EAAKkH,cAAgBlH,EAAKyE,SAC1Da,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YACEjH,EAAKiH,YAAa,KACjBjH,EAAKkH,gCAAkClH,EAAKkH,gBAAkB,IAAK,KACnElH,EAAKqM,wBAA0BrM,EAAKqM,YAAc,IAAK,KACvDrM,EAAKmH,gCAAkCnH,EAAKmH,gBAAkB,IAAK,KACnEnH,EAAKoH,4BAA8BpH,EAAKoH,cAAgB,IAAK,KAC7DpH,EAAKqH,4BAA8BrH,EAAKqH,cAAgB,IAAK,KAC7DrH,EAAKsH,wBAA0BtH,EAAKsH,YAAc,IAAK,KACvDtH,EAAKuH,kCACiBvH,EAAKuH,iBACxB,IAAK,KACRvH,EAAKwH,8BAAgCxH,EAAKwH,eAAiB,IAAK,KAChExH,EAAKyH,wBAA0BzH,EAAKyH,YAAc,IAAK,KACvDzH,EAAK0H,oBAAsB1H,EAAK0H,UAAY,IAC/CrE,UAAWoO,EAAazR,EAAKoD,QAE/B2H,EAAekB,IAuCnBS,CAAU7B,EAAKxH,EAAUsH,EAAU8G,IACjC,CAAC5G,EAAKxH,EAAUsH,EAAU8G,IAG5B7S,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAAC0K,EAAO,KAAC,IAAC3K,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,kBAC3HD,IAAAC,cAAA,OAAKE,UAAU,yDAAyDiC,MAAO,CAACiC,MAAM,SACtFrE,IAAAC,cAAA,YAAM,kBACED,IAAAC,cAACyF,IAAM,CAACtB,YAAY,iBAAiBqD,SAlBzBC,IAClBnI,EAAQmI,IAiB0DtF,MAAO,CAACiC,MAAM,UAE1ErE,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SAClB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,QAEtB1H,IAAAC,cAAA,YAAM,mBACLD,IAAAC,cAACyF,IAAM,CAACtB,YAAY,sBAAsBqD,SAxB1BC,IACrBzB,EAAayB,IAuB8DtF,MAAO,CAACiC,MAAM,UACpFrE,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAO,OACnB+K,EAAWtP,IAAK/B,GACjBpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAKvBpB,IAAAC,cAAA,YAAM,cACND,IAAAC,cAACyF,IAAM,CAACtB,YAAY,oBAAoBqD,SAAWC,IAASsE,EAAatE,KACxE1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,cACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,gBAI7B1H,IAAAC,cAAA,UAAQG,QAASA,KAAKP,OAAO6O,SAAUtM,MAAO,CAAC0F,WAAW,MAAM6G,aAAa,OAAOpK,OAAO,YAAa,SACxGvE,IAAAC,cAAC2O,IAAK,CAACjB,QAASA,EAASkB,WAAY3C,EAAa4C,YAAY,OCxVtE,MAAQrJ,OAAO4N,IAAI3N,IAkVJ4N,OAhVIA,KAClB,MAAOvD,EAAUC,GAAexM,mBAAS,KACjCoM,EAAgBC,GAAqBrM,mBAAS,KAE9C+P,EAAcC,GAAmBhQ,mBAAS,KAC5CiQ,EAAcC,GAAkBlQ,mBAAS,KAC1CmQ,EAAYC,GAAgBpQ,mBAAS,QACrCuI,EAAUC,GAAcxI,mBAAS,aAE9ByI,EAAM1M,GAAWiE,mBAAS,QAC1B0I,EAAaC,GAAkB3I,qBAkDhC2L,EAAcxP,UAClB,MAAMkU,EAAc9D,EACpB,IAAK,IAAI3O,KAAQyS,EACf,GAAIzS,EAAKoD,MAAQgL,EACf,OAAOpO,EAAK+N,aAKjB9P,oBAAU,KAtCeM,WACxB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,4CAA6C,CACvEC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBsO,EAAkB7O,EAAII,KAAKA,OAE3BG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAwBd0O,IACC,IAEHjR,oBAAU,KA7DWM,WACrB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,qCAAsC,CAChEC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzByO,EAAYhP,EAAII,KAAKA,OAErBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA+CdkS,IACC,IAEHzU,oBAAU,KA3BUM,WACpB,MAAM4T,EAAe,GAEfQ,EAAoBnE,EAC1B,IAAK,IAAIxO,KAAQ2S,EACfR,EAAanS,EAAKoD,WAAa2K,EAAY/N,EAAKoO,WAElDgE,EAAgBD,IAqBdS,IACC,CAACpE,EAAgBG,IAEpB1Q,oBAAU,KACZ,MAAMwU,EAAY,IAAI,IAAIzG,IAAI2C,EAAS5M,IAAI/B,GAAMA,EAAK+N,eACtDuE,EAAiBG,IACb,CAAC9D,IA4BH1Q,oBAAU,KA1BWM,WACnB,GAAa,QAATsM,EAAgB,CAClB,MAAMoB,EAAauC,EAAezM,IAAK/B,IAAI,CACzC8G,IAAK9G,EAAKoD,IACV8I,QACoB,YAAlBlM,EAAKyE,SAAyBzE,EAAKkH,cAAgBlH,EAAKyE,SAC1Da,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YACAjH,EAAKiH,YAAa,KACjBjH,EAAKkH,+BAAiClH,EAAKkH,gBAAkB,KAAM,KACnElH,EAAKqM,uBAAyBrM,EAAKqM,YAAc,IAAK,KACtDrM,EAAKmH,gCAAkCnH,EAAKmH,gBAAkB,IAAK,KACnEnH,EAAKoH,4BAA8BpH,EAAKoH,cAAgB,IAAK,KAC7DpH,EAAKqH,4BAA8BrH,EAAKqH,cAAgB,IAAK,KAC7DrH,EAAKsH,wBAA0BtH,EAAKsH,YAAc,IAAK,KACvDtH,EAAKuH,kCACiBvH,EAAKuH,iBACxB,IAAK,KACRvH,EAAKwH,8BAAgCxH,EAAKwH,eAAiB,IAAK,KAChExH,EAAKyH,wBAA0BzH,EAAKyH,YAAc,IAAK,KACvDzH,EAAK0H,oBAAsB1H,EAAK0H,UAAY,IAC7CqG,YAAaoE,EAAanS,EAAKoD,QAEjC2H,EAAekB,KAIjBK,IACC,CAACkC,EAAgB2D,IAEpB,MAqHK5F,EACM,YAAT1B,EACI,CACE,CAAE2B,MAAO,iBAAkBC,UAAW,UAAW3F,IAAK,WACtD,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAQ,4BACRC,UAAW,cACX3F,IAAK,eAEP,CAAE0F,MAAO,iBAAkBC,UAAW,cAAe3F,IAAK,gBAE5D,CACE,CACE0F,MAAO,2BACPC,UAAW,UACX3F,IAAK,WAEP,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAM,cACNC,UAAW,cACX3F,IAAK,eAEP,CAAE0F,MAAO,iBAAkBC,UAAW,cAAe3F,IAAK,gBAgBpE,OALA7I,oBAAU,KAxJUyO,EAAC7B,EAAMkD,EAAYnB,KACnC,IAAIC,EACJ,GAAa,UAAThC,EACF,GAAoB,QAAhBkD,EAAuB,CAEzB,MAAMjB,EAAc,CAAC,UACnB,aACA,UACA,SACA,YACA,yBACA,UACA,UACA,SACA,SACA,SACA,SACA,aACA,sBACA,aACA,SACA,kBACA,UACA,aACA,SACA,aACA,cACA,QACA,aACA,eACA,eACA,iBACFD,EAAe2B,EAAezB,OAC3B/M,IAAU8M,EAAYE,SAAShN,EAAKyE,eAElC,CACL,MAAMqI,EAAc,CAAC,UAC7B,aACA,UACA,SACA,YACA,yBACA,UACA,UACA,SACA,SACA,SACA,SACA,aACA,sBACA,aACA,SACA,kBACA,UACA,aACA,SACA,aACA,cACA,QACA,aACA,eACA,eACA,iBACQD,EAAe2B,EAAezB,OAC3B/M,IACE8M,EAAYE,SAAShN,EAAKyE,WAC3B0N,EAAanS,EAAKoD,OAAS2K,QAK/BlB,EAFgB,QAAThC,EACW,QAAhBkD,EACaS,EAEAA,EAAezB,OAC3B/M,GAASmS,EAAanS,EAAKoD,OAAS2K,GAIrB,QAAhBA,EACaS,EAAezB,OAAQ/M,GAASA,EAAKyE,WAAaoG,GAElD2D,EAAezB,OAC3B/M,GAASA,EAAKyE,WAAaoG,GAAQsH,EAAanS,EAAKoD,OAAQ2K,GAKxElB,EAAaI,KAAK,CAACC,EAAEC,KACnB,MAAMC,EAAM,IAAIjB,KAAKe,EAAE9H,kBACjBiI,EAAM,IAAIlB,KAAKgB,EAAE/H,kBACvB,MAAe,aAARwH,EAAmBS,EAAMD,EAAMA,EAAMC,IAG1C,MAAMpB,EAAaY,EAAa9K,IAAK/B,IAAI,CACvC8G,IAAK9G,EAAKoD,IACV8I,QACoB,YAAlBlM,EAAKyE,SAAyBzE,EAAKkH,cAAgBlH,EAAKyE,SAC1Da,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YACEjH,EAAKiH,YAAa,KACjBjH,EAAKkH,gCAAkClH,EAAKkH,gBAAkB,IAAK,KACnElH,EAAKqM,wBAA0BrM,EAAKqM,YAAc,IAAK,KACvDrM,EAAKmH,gCAAkCnH,EAAKmH,gBAAkB,IAAK,KACnEnH,EAAKoH,4BAA8BpH,EAAKoH,cAAgB,IAAK,KAC7DpH,EAAKqH,4BAA8BrH,EAAKqH,cAAgB,IAAK,KAC7DrH,EAAKsH,wBAA0BtH,EAAKsH,YAAc,IAAK,KACvDtH,EAAKuH,kCACiBvH,EAAKuH,iBACxB,IAAK,KACRvH,EAAKwH,8BAAgCxH,EAAKwH,eAAiB,IAAK,KAChExH,EAAKyH,wBAA0BzH,EAAKyH,YAAc,IAAK,KACvDzH,EAAK0H,oBAAsB1H,EAAK0H,UAAY,IAC/CqG,YAAaoE,EAAanS,EAAKoD,QAEjC2H,EAAekB,IAuCnBS,CAAU7B,EAAK0H,EAAY5H,IACzB,CAACE,EAAK0H,EAAY5H,IAIlB/L,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAC0K,EAAO,KACR3K,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,oBACpHD,IAAAC,cAAA,OAAKE,UAAU,yDAAyDiC,MAAO,CAACiC,MAAM,SACtFrE,IAAAC,cAAA,YAAM,kBACGD,IAAAC,cAACyF,IAAM,CAACtB,YAAY,iBAAiBqD,SApB3BC,IAClBnI,EAAQmI,IAmB4DtF,MAAO,CAACiC,MAAM,UAEjF,CAAC,UACF,aACA,UACA,SACA,YACA,yBACA,UACA,UACA,SACA,SACA,SACA,SACA,aACA,sBACA,aACA,SACA,kBACA,UACA,aACA,SACA,aACA,cACA,QACA,aACA,eACA,eACA,gBAAgB,MAAM,SAASlB,IAAK/B,GACtCpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAGZpB,IAAAC,cAAA,YAAM,qBACLD,IAAAC,cAACyF,IAAM,CAACtB,YAAY,sBAAsBqD,SAhD1BC,IACvBkM,EAAelM,IA+C+DtF,MAAO,CAACiC,MAAM,UACrFrE,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAO,OACnB+L,EAActQ,IAAK/B,GACpBpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAIvBpB,IAAAC,cAAA,YAAM,cACND,IAAAC,cAACyF,IAAM,CAACtB,YAAY,oBAAoBqD,SAAWC,IAASsE,EAAatE,KACxE1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,cACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,gBAI7B1H,IAAAC,cAAA,UAAQG,QAASA,KAAKP,OAAO6O,SAAUtM,MAAO,CAAC0F,WAAW,MAAM6G,aAAa,OAAOpK,OAAO,YAAa,SACxGvE,IAAAC,cAAC2O,IAAK,CAACjB,QAASA,EAASkB,WAAY3C,EAAa4C,YAAY,OC1UtE,MAAQrJ,OAAOwO,IAAIvO,IAoZJwO,OAlZGA,KAChB,MAAOC,EAAaC,GAAkB5Q,mBAAS,KACxC6Q,EAAmBC,GAAwB9Q,mBAAS,KAEpD+Q,EAAiBC,GAAsBhR,mBAAS,KAChDiR,EAAkBC,GAAuBlR,mBAAS,KAClDmR,EAAgBC,GAAqBpR,mBAAS,QAC9CuI,EAAWC,GAAgBxI,mBAAS,aAEpCyI,EAAM1M,GAAWiE,mBAAS,QAC1B0I,EAAaC,GAAkB3I,qBAqDhC8N,EAAiB3R,UACrB,MAAMkV,EAAiBV,EACvB,IAAK,IAAI/S,KAAQyT,EACf,GAAIzT,EAAKoD,MAAQwM,EACf,OAAO5P,EAAKwP,UAKlBvR,oBAAU,KAzCmBM,WAC3B,IACE,MAAMqB,QAAYC,IAAMwC,IACtB,8CACA,CACEC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB+S,EAAqBtT,EAAII,KAAKA,OAE9BG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAwBhBkT,IACC,IAEHzV,oBAAU,KAhEgBM,WACxB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,mCAAoC,CAC9DC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB6S,EAAepT,EAAII,KAAKA,OAExBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAkDhBmT,IACC,IAEH1V,oBAAU,KA3BeM,WACvB,MAAM4U,EAAkB,GAElBS,EAAuBX,EAC7B,IAAK,IAAIjT,KAAQ4T,EACfT,EAAgBnT,EAAKoD,WAAa8M,EAAelQ,EAAK4P,cAExDwD,EAAmBD,IAqBnBU,IACC,CAACZ,EAAmBF,IAEvB9U,oBAAU,KACR,MAAMwV,EAAiB,IAClB,IAAIzH,IAAI+G,EAAYhR,IAAK/B,GAASA,EAAKwP,YAE5C8D,EAAoBG,IACnB,CAACV,IAkDJ9U,oBAAU,KAhDWM,WACnB,GAAa,QAATsM,EAAgB,CAClB,MAAMoB,EAAagH,EAAkBlR,IAAK/B,IAAI,CAC5C8G,IAAK9G,EAAKoD,IACV8I,QACoB,YAAlBlM,EAAKyE,SAAyBzE,EAAKkH,cAAgBlH,EAAKyE,SAC1Da,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YACEjH,EAAKiH,YACL,KACCjH,EAAKkH,+BAAiClH,EAAKkH,gBAAkB,KAC9D,KACClH,EAAKqM,uBAAyBrM,EAAKqM,YAAc,IAClD,KACCrM,EAAKmH,gCAAkCnH,EAAKmH,gBAAkB,IAC/D,KACCnH,EAAKoH,4BAA8BpH,EAAKoH,cAAgB,IACzD,KACCpH,EAAKqH,4BAA8BrH,EAAKqH,cAAgB,IACzD,KACCrH,EAAKsH,wBAA0BtH,EAAKsH,YAAc,IACnD,KACCtH,EAAKuH,kCACiBvH,EAAKuH,iBACxB,IACJ,KACCvH,EAAKwH,8BAAgCxH,EAAKwH,eAAiB,IAC5D,KACCxH,EAAKyH,wBAA0BzH,EAAKyH,YAAc,IACnD,KACCzH,EAAK0H,oBAAsB1H,EAAK0H,UAAY,KAE5C1H,EAAKsQ,4BAA8BtQ,EAAKsQ,aAAe,KACxD,KACCtQ,EAAKuQ,2BAA6BvQ,EAAKuQ,aAAe,KACvD,KACCvQ,EAAKwQ,sCACoBxQ,EAAKwQ,kBAC3B,KACJ,KACCxQ,EAAKyQ,uBAAyBzQ,EAAKyQ,WAAa,IACjD,KACCzQ,EAAK0Q,4BAA8B1Q,EAAK0Q,aAAe,IAC1DR,eAAgBiD,EAAgBnT,EAAKoD,QAEvC2H,EAAekB,KAIjBK,IACC,CAAC2G,EAAmBE,IAEvB,MAqIM5G,EACK,YAAT1B,EACI,CACE,CAAE2B,MAAO,iBAAkBC,UAAW,UAAW3F,IAAK,WACtD,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAQ,4BACRC,UAAW,cACX3F,IAAK,eAEP,CACE0F,MAAO,mBACPC,UAAW,iBACX3F,IAAK,mBAGT,CACE,CACE0F,MAAO,2BACPC,UAAW,UACX3F,IAAK,WAEP,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAO,cACPC,UAAW,cACX3F,IAAK,eAEP,CACE0F,MAAO,mBACPC,UAAW,iBACX3F,IAAK,mBAgBf,OAJA7I,oBAAU,KAhLQyO,EAAC7B,EAAMqF,EAAgBtD,KACvC,IAAIC,EACJ,GAAa,UAAThC,EACF,GAAuB,QAAnBqF,EAA0B,CAC5B,MAAMpD,EAAc,CAClB,SACA,UACA,SACA,kBACA,UACA,YACA,MACA,iBACA,cACA,kBACA,gBACA,YACA,cACA,kBACA,gBACA,0BACA,gBACA,kBACA,mBACA,OACA,cACA,sBAEFD,EAAeoG,EAAkBlG,OAC9B/M,IAAU8M,EAAYE,SAAShN,EAAKyE,eAElC,CACL,MAAMqI,EAAc,CAClB,SACA,UACA,SACA,kBACA,UACA,YACA,MACA,iBACA,cACA,kBACA,gBACA,YACA,cACA,kBACA,gBACA,0BACA,gBACA,kBACA,mBACA,OACA,cACA,sBAEFD,EAAeoG,EAAkBlG,OAC9B/M,IACE8M,EAAYE,SAAShN,EAAKyE,WAC3B0O,EAAgBnT,EAAKoD,OAAS8M,QAKlCrD,EAFgB,QAAThC,EACc,QAAnBqF,EACa+C,EAEAA,EAAkBlG,OAC9B/M,GAASmT,EAAgBnT,EAAKoD,OAAS8M,GAIrB,QAAnBA,EACa+C,EAAkBlG,OAC9B/M,GAASA,EAAKyE,WAAaoG,GAGfoI,EAAkBlG,OAC9B/M,GACCA,EAAKyE,WAAaoG,GAClBsI,EAAgBnT,EAAKoD,OAAS8M,GAKtCrD,EAAaI,KAAK,CAACC,EAAGC,KACpB,MAAMC,EAAQ,IAAIjB,KAAKe,EAAE9H,kBACnBiI,EAAQ,IAAIlB,KAAKgB,EAAE/H,kBACzB,MAAiB,aAAVwH,EAAuBS,EAAQD,EAAQA,EAAQC,IAGxD,MAAMpB,EAAaY,EAAa9K,IAAK/B,IAAI,CACvC8G,IAAK9G,EAAKoD,IACV8I,QAA2B,YAAlBlM,EAAKyE,SAAyBzE,EAAKkH,cAAgBlH,EAAKyE,SACjEa,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YACEjH,EAAKiH,YACL,KACCjH,EAAKkH,gCAAkClH,EAAKkH,gBAAkB,IAC/D,KACClH,EAAKqM,wBAA0BrM,EAAKqM,YAAc,IACnD,KACCrM,EAAKmH,gCAAkCnH,EAAKmH,gBAAkB,IAC/D,KACCnH,EAAKoH,4BAA8BpH,EAAKoH,cAAgB,IACzD,KACCpH,EAAKqH,4BAA8BrH,EAAKqH,cAAgB,IACzD,KACCrH,EAAKsH,wBAA0BtH,EAAKsH,YAAc,IACnD,KACCtH,EAAKuH,kCAAoCvH,EAAKuH,iBAAmB,IAClE,KACCvH,EAAKwH,8BAAgCxH,EAAKwH,eAAiB,IAC5D,KACCxH,EAAKyH,wBAA0BzH,EAAKyH,YAAc,IACnD,KACCzH,EAAK0H,oBAAsB1H,EAAK0H,UAAY,KAE5C1H,EAAKsQ,4BAA8BtQ,EAAKsQ,aAAe,KACxD,KACCtQ,EAAKuQ,2BAA6BvQ,EAAKuQ,aAAe,KACvD,KACCvQ,EAAKwQ,sCACoBxQ,EAAKwQ,kBAC3B,KACJ,KACCxQ,EAAKyQ,uBAAyBzQ,EAAKyQ,WAAa,IACjD,KACCzQ,EAAK0Q,4BAA8B1Q,EAAK0Q,aAAe,IAC1DR,eAAgBiD,EAAgBnT,EAAKoD,QAEvC2H,EAAekB,IA+CfS,CAAU7B,EAAM0I,EAAgB5I,IAC/B,CAACE,EAAM0I,EAAgB5I,IAGxB/L,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAC0K,EAAO,KACR3K,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,mBAC7GD,IAAAC,cAAA,OACEE,UAAU,yDACViC,MAAO,CAAEiC,MAAO,SAEhBrE,IAAAC,cAAA,YAAM,kBACND,IAAAC,cAACyF,IAAM,CACLtB,YAAY,iBACZqD,SAxBUC,IAClBnI,EAAQmI,IAwBAtF,MAAO,CAAEiC,MAAO,UAEf,CACC,SACA,UACA,SACA,kBACA,UACA,YACA,MACA,iBACA,cACA,kBACA,gBACA,YACA,cACA,kBACA,gBACA,0BACA,gBACA,kBACA,mBACA,OACA,cACA,qBACA,MACA,SACAlB,IAAK/B,GACLpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAG1BpB,IAAAC,cAAA,YAAM,yBACND,IAAAC,cAACyF,IAAM,CACLtB,YAAY,0BACZqD,SAtDoBC,IAC5BkN,EAAkBlN,IAsDVtF,MAAO,CAAEiC,MAAO,UAEhBrE,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACnB+M,EAAiBtR,IAAK/B,GACrBpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAG1BpB,IAAAC,cAAA,YAAM,cACND,IAAAC,cAACyF,IAAM,CACLtB,YAAY,oBACZqD,SAAWC,IACTsE,EAAatE,KAGf1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,cACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,gBAG7B1H,IAAAC,cAAA,UACEG,QAASA,KACPP,OAAO6O,SAETtM,MAAO,CAAE0F,WAAY,MAAO6G,aAAc,OAAQpK,OAAQ,YAC3D,SAGDvE,IAAAC,cAAC2O,IAAK,CAACjB,QAASA,EAASkB,WAAY3C,EAAa4C,YAAY,OC3YtE,MAAM1N,GAAO,CACX,CACEjD,KAAM,UACNwE,KAAM,YACNC,KAAM,+BAER,CACEzE,KAAM,QACNwE,KAAM,UACNC,KAAM,qBAER,CACEzE,KAAM,MACNwE,KAAM,QACNC,KAAM,wBAER,CACEzE,KAAM,SACNwE,KAAM,WACNC,KAAM,sBAER,CACEzE,KAAM,OACNwE,KAAM,SACNC,KAAM,sBA8CKsS,OA3CKA,KAChB,MAAM/V,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEhBK,oBAAU,KACO,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IACR,MAAME,EAAWC,cACjB,OACEc,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACPoB,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,kBAC7GD,IAAAC,cAAA,WAASE,UAAU,cAChBiB,GAAK+B,IAAK/B,GAEPpB,IAAAC,cAAA,OACEE,UAAU,OACVC,QAASA,KACPnB,EAASmC,EAAKuB,QAGhB3C,IAAAC,cAAA,KAAGmD,MAAOhC,EAAKwB,OAEf5C,IAAAC,cAAA,SAAImB,EAAKjD,YCiJVgX,OA1MSA,KACtB,MAAMhW,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cACXC,EAASC,eACR8P,EAAYC,GAAgBzL,mBAAS,IAE5CnE,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAmCAM,oBAAU,KAfYM,WACpB,MAAMqB,QAAYC,IAAMwC,IAAI,qCAAsC,CAChEC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACX4N,EAAejO,EAAII,KAAKA,MACxBG,IAAQF,QAAQ,qBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAKzB2N,IACC,IA8BP,OACElP,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAACrB,EAAM,KACPoB,IAAAC,cAAA,OAAKE,UAAU,IACTH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SArEXpB,UACf,IACE,MAAMqB,QAAYC,IAAMC,KAAK,kCAAmCC,GAE5DH,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,WAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SACtB1B,OAAOC,SAASC,UAEnB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAwDgCzB,UAAU,OACtDH,IAAAC,cAAA,MAAIE,UAAU,eAAc,kBAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,cACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,0BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,cACN3D,KAAK,SACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,uBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,cAQRgN,GACDA,EAAY7L,IAAK/B,GAEbpB,IAAAC,cAAA,OAAKE,UAAU,sBACbH,IAAAC,cAAA,OACEmC,MAAO,CAAEmC,OAAQ,WACjBpE,UAAU,cACVC,QAASA,KACPnB,yBAAgCmC,EAAKoD,SAExC,gBAECxE,IAAAC,cAAA,SAAG,IAAEmB,EAAK+N,cAGZnP,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,aACFmB,EAAKgO,QAERpP,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,mBACFmB,EAAKuD,cAER3E,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,cACFmB,EAAKwD,SAER5E,IAAAC,cAAA,SACED,IAAAC,cAAA,UACEG,QAASA,KAEMyE,QAAQ,wBAEnB5F,qBAA4BmC,EAAKoD,QAGrCrE,UAAU,mBACX,QAGDH,IAAAC,cAAA,UACEG,QAASA,KA9HFT,WACnB,IAGE,GADakF,QAAQ,yBACT,CACV,MAAM7D,QAAYC,IAAMC,KACtB,qCACA,CAAEP,MACF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,UAElB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAwGFkD,CAAa1D,EAAKoD,MAEpBrE,UAAU,kBACX,iBCtDHiV,OApIQA,KACvB,MAAMpQ,EAASC,cACRhG,EAAWC,eACVoQ,EAAaC,GAAkB/L,mBAAS,MACzCrE,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEfK,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAwBFM,oBAAU,KAtBWM,WACnB,MAAMqB,QAAYC,IAAMC,KACtB,sCACA,CACEsO,UAAWxK,EAAOwK,WAEpB,CACE9L,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXkO,EAAevO,EAAII,KAAKA,MAGxBG,IAAQF,QAAQL,EAAII,KAAKG,UAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,UAMzBkO,IACC,IAwBN,OACEzP,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAACrB,EAAM,KACH0Q,GACDtP,IAAAC,cAAA,OAAKE,UAAU,YACLH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SA3BjBpB,UACjBwB,EAAOqO,UAAYxK,EAAOwK,UAC1B,IACE,MAAMxO,QAAYC,IAAMC,KAAK,mCAAoCC,EAAQ,CACvEuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBtC,EAAS,cAETsC,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BASwCzB,UAAU,MAAMmF,cAAegK,GAC3EtP,IAAAC,cAAA,MAAIE,UAAU,eAAc,gBAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,cACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,0BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,cACN3D,KAAK,SACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,uBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,iBCpHzB,MAAQyD,OAAO4P,IAAI3P,IAmZJ4P,OAjZWA,KACtB,MAAMnW,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,eACZ4Q,EAAgBC,GAAqBrM,mBAAS,KAC9CqC,EAAUC,GAAetC,sBACzBuC,EAAgBC,GAAqBxC,mBAAS,IAC/CwB,EAASC,cACThG,EAAWC,eACXiQ,EAAYW,GAAgBtM,sBAC1B+R,EAAQC,GAAYhS,mBAAS,IAEvCnE,oBAAU,KACQ,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAqBJM,oBAAU,KACR,MAAM6H,EAAIqO,EAAQpO,KAAM/F,GAAOA,EAAKoD,MAAMQ,EAAOwK,WAC7CtI,GACF4I,EAAe5I,EAAIiI,cAEjB,CAACoG,EAAQvQ,EAAOwK,YAErBnQ,oBAAU,KA1BaM,WACtB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,qCAAsC,CAChEC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBiU,EAAWxU,EAAII,KAAKA,OAEpBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAYdkS,IACC,IAmDNzU,oBAAU,KAzBUM,WACjB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,6CACA,CACEsO,UAAWxK,EAAOwK,WAEpB,CACE9L,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBsO,EAAkB7O,EAAII,KAAKA,OAE3BG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAKhB8I,IACC,IA4BH,OACE1K,IAAAC,cAACrB,EAAM,KACLoB,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAIkP,IAChHnP,IAAAC,cAAA,OACEE,UAAU,cACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,OACP/B,OAAQ,OACRiF,MAAO,SAGTvH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SA3FTpB,UAEnBwB,EAAOqO,UAAYxK,EAAOwK,UACF,UAApBrO,EAAO0E,UAAwB1E,EAAOqG,gBACxCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhB,IACE,MAAMxG,QAAYC,IAAMC,KACtB,2CACAC,GAEEH,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAuEoCzB,UAAU,OACxDH,IAAAC,cAAA,MAAIE,UAAU,eAAc,YAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEjC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,kBAAiB,kBAC/B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,YACN3D,KAAK,MACLgG,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,mBAEnCvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,6BAEnCvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAItBrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,MAAOyD,WAAY,MAAMxD,UAAU,SACpD,eASXtE,IAAAC,cAAA,SACIE,UAAU,QACViC,MAAO,CACLiC,MAAO,OACP0D,eAAgB,WAChBzD,UAAW,SAGbtE,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,qBAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,eAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAKfrC,IAAAC,cAAA,aACC2P,GACaA,EAAezM,IAAK/B,GAClBpB,IAAAC,cAAA,MAAIiI,IAAK9G,EAAKoD,KACZxE,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKyE,WAEX7F,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKqU,MAEXzV,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGV,IAAIsF,KAAKnM,EAAKoF,kBAAkBgH,sBAEnCxN,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SAEX3D,MAAO,UAGTrE,IAAAC,cAAA,OAAKmC,MAAO,CAAE+F,UAAW,QAASC,UAAW,SAC1ChH,EAAKiH,aAAe,QAGzBrI,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,KACEE,UAAU,yBACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,2BA7QpBlF,WACnB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,8CACA,CACEP,MAEF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAyPMkD,CAAa1D,EAAKoD,QAIxBxE,IAAAC,cAAA,KACEE,UAAU,iCACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,yBACjB5F,2BAAkCmC,EAAKoD,iBC/XjE,MAAOiB,OAAMiQ,IAAGhQ,IAuNDiQ,OApNcA,KAE3B,MAAOxM,GAAMtI,IAAKuI,WACTvD,EAAUC,GAAetC,mBAAS,OAClC2M,EAAmBC,GAAwB5M,mBAAS,MACrDwB,EAAOC,cACP9F,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEfK,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IA8DR,OAJGM,oBAAU,KA3BaM,WACpB,MAAMqB,QAAYC,IAAMC,KACpB,+CACA,CACEmP,gBAAiBrL,EAAOqL,iBAE1B,CACE3M,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIpD,GAAIuB,EAAII,KAAKC,QAAS,CACpB+O,EAAqBpP,EAAII,KAAKA,MAG9B,MAAMoF,iBAACA,KAAoB8C,GAAWtI,EAAII,KAAKA,KAC/C+H,EAAKI,eAAe,IACbD,EACH9C,iBAAiBA,EAAiBG,IAAOH,GAAkB,OAE/DjF,IAAQF,QAAQL,EAAII,KAAKG,cAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,UAM3B+O,IACC,IAELtQ,IAAAC,cAACrB,EAAM,KACJoB,IAAAC,cAAA,OACOE,UAAU,cACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,MACP/B,OAAQ,OACRiF,MAAO,SAGTvH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SAvEfpB,UACS,UAApBwB,EAAO0E,UAAwB1E,EAAOqG,gBACtCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhBrG,EAAOkP,gBAAkBrL,EAAOqL,gBAEhC,IACE,MAAMrP,QAAYC,IAAMC,KACtB,8CACAC,EACA,CACEuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOsL,QAAQC,QAEf7J,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA8CoCzB,UAAU,MAAMgJ,KAAMA,GACpEnJ,IAAAC,cAAA,MAAIE,UAAU,eAAc,eAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEjC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,kBAAiB,kBAC/B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,YACN3D,KAAK,MACLgG,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,mBAEnCvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,6BAEnCvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAItBrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,OAAQyD,WAAY,QACrC,iBCjBR8N,OAlMOA,KAClB,MAAMzW,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cACbC,EAAWC,eACVoE,EAAWC,GAAgBC,mBAAS,IAEzCnE,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IA+BNM,oBAAU,KAdUM,WAClB,MAAMqB,QAAYC,IAAMwC,IAAI,2BAA4B,CACtDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXkC,EAAavC,EAAII,KAAKA,MACtBG,IAAQF,QAAQ,oBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAIzBqC,IACC,IA6BH,OACE5D,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACLoB,IAAAC,cAAA,OAAKE,UAAU,IACbH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SAhEbpB,UACjB,IACE,MAAMqB,QAAYC,IAAMC,KAAK,wBAAyBC,GAElDH,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAoDoCzB,UAAU,OACtDH,IAAAC,cAAA,MAAIE,UAAU,eAAc,eAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,aACN3D,KAAK,YACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,sBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,cAQRsB,GACCA,EAAUH,IAAK/B,GAEXpB,IAAAC,cAAA,OAAKE,UAAU,sBACbH,IAAAC,cAAA,OACEmC,MAAO,CAAEmC,OAAQ,WACjBpE,UAAU,cACVC,QAASA,KACPnB,sBAA6BmC,EAAKoD,SAErC,cAECxE,IAAAC,cAAA,SAAG,IAAEmB,EAAKqD,YAGZzE,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,aACFmB,EAAKsD,SAER1E,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,kBACFmB,EAAKuD,cAER3E,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,aACFmB,EAAKwD,SAER5E,IAAAC,cAAA,SACED,IAAAC,cAAA,UACEG,QAASA,KAEMyE,QAAQ,wBAEnB5F,mBAA0BmC,EAAKoD,QAGnCrE,UAAU,mBACX,QAGDH,IAAAC,cAAA,UACEG,QAASA,KA7HRT,WACnB,IAGE,GADakF,QAAQ,yBACT,CACV,MAAM7D,QAAYC,IAAMC,KACtB,2BACA,CAAEP,MACF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,UAElB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAuGIkD,CAAa1D,EAAKoD,MAEpBrE,UAAU,kBACX,iBC/CN0V,OAvIMA,KACnB,MAAM1W,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cACXC,EAAWC,cACX8F,EAASC,eACRC,EAAWC,GAAgB3B,mBAAS,MAEzCnE,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAkDN,OALAM,oBAAU,KArBWM,WACnB,MAAMqB,QAAYC,IAAMC,KACtB,wBACA,CACEkE,QAASJ,EAAOI,SAElB,CACE1B,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACX8D,EAAanE,EAAII,KAAKA,MACtBM,QAAQC,IAAIuD,GACZ3D,IAAQF,QAAQL,EAAII,KAAKG,UAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,UAMzB8D,IACC,IAGDrF,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACJsG,GACClF,IAAAC,cAAA,OAAKE,UAAU,YACbH,IAAAC,cAACY,IAAI,CACHC,OAAO,WACPC,SAvDOpB,UACjBwB,EAAOiE,QAAUJ,EAAOI,QACxB,IACE,MAAMpE,QAAYC,IAAMC,KAAK,yBAA0BC,EAAQ,CAC7DuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBtC,EAAS,YAETsC,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAsCNzB,UAAU,MACVmF,cAAeJ,GAEflF,IAAAC,cAAA,MAAIE,UAAU,eAAc,cAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,aACN3D,KAAK,YACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACqC,YAAY,sBAGvBpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,iBCtHnB,MAAQyD,OAAOqQ,IAAIpQ,IAqZJqQ,OAnZSA,KACtB,MAAM5W,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,eACN2G,EAAcC,GAAmBpC,mBAAS,KAC1CqC,EAAUC,GAAetC,sBACzBuC,EAAgBC,GAAqBxC,mBAAS,IAC/CwB,EAASC,cACThG,EAAWC,eACXuF,EAAUwB,GAAczC,sBACzB0C,EAAQC,GAAY3C,mBAAS,IAEtCnE,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAqBAM,oBAAU,KACR,MAAM6H,EAAIhB,EAAQiB,KAAM/F,GAAOA,EAAKoD,MAAMQ,EAAOI,SAC7C8B,GACFjB,EAAaiB,EAAIzC,YAEf,CAACyB,EAAQlB,EAAOI,UAErB/F,oBAAU,KA1BSM,WAClB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,2BAA4B,CACtDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB4E,EAAWnF,EAAII,KAAKA,OAEpBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAYdoU,IACC,IAmDF3W,oBAAU,KAzBUM,WACjB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,mCACA,CACEkE,QAASJ,EAAOI,SAElB,CACE1B,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBqE,EAAgB5E,EAAII,KAAKA,OAEzBG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAKhB8I,IACC,IA4BX,OACE1K,IAAAC,cAACrB,EAAM,KAELoB,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAIwE,IACtHzE,IAAAC,cAAA,OACQE,UAAU,cACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,OACP/B,OAAQ,OACRiF,MAAO,SAGTvH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SA5FHpB,UAEjBwB,EAAOiE,QAAUJ,EAAOI,QACA,UAApBjE,EAAO0E,UAAwB1E,EAAOqG,gBACxCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhB,IACE,MAAMxG,QAAYC,IAAMC,KACtB,iCACAC,GAEEH,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAwE4BzB,UAAU,OACxDH,IAAAC,cAAA,MAAIE,UAAU,eAAc,YAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEjC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,kBAAiB,kBAC/B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,YACN3D,KAAK,MACLgG,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,mBAEnCvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,6BAEnCvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAItBrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,MAAOyD,WAAY,MAAMxD,UAAU,SACpD,eASXtE,IAAAC,cAAA,SACIE,UAAU,QACViC,MAAO,CACLiC,MAAO,OACP0D,eAAgB,WAChBzD,UAAW,SAGbtE,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,qBAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,eAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAKfrC,IAAAC,cAAA,aACC0F,GACaA,EAAaxC,IAAK/B,GAChBpB,IAAAC,cAAA,MAAIiI,IAAK9G,EAAKoD,KACZxE,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKyE,WAEX7F,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKqU,MAEXzV,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGV,IAAIsF,KAAKnM,EAAKoF,kBAAkBgH,sBAEnCxN,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SAEX3D,MAAO,UAGTrE,IAAAC,cAAA,OAAKmC,MAAO,CAAE+F,UAAW,QAASC,UAAW,SAC1ChH,EAAKiH,aAAe,QAGzBrI,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,KACEE,UAAU,yBACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,2BA9QZlF,WACnB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,oCACA,CACEP,MAEF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA0PFkD,CAAa1D,EAAKoD,QAIxBxE,IAAAC,cAAA,KACEE,UAAU,iCACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,yBACjB5F,yBAAgCmC,EAAKoD,iBCjY/D,MAAOiB,OAAMwQ,IAAGvQ,IAuNDwQ,OApNaA,KAC1B,MAAM/W,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,eAEVmK,GAAMtI,IAAKuI,WACTvD,EAAUC,GAAetC,mBAAS,OAClC2S,EAAiBC,GAAsB5S,mBAAS,MACjDwB,EAAOC,cAEX5F,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IA8DR,OAJGM,oBAAU,KA3BWM,WAClB,MAAMqB,QAAYC,IAAMC,KACpB,qCACA,CACEmI,cAAerE,EAAOqE,eAExB,CACE3F,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIpD,GAAIuB,EAAII,KAAKC,QAAS,CACpB+U,EAAmBpV,EAAII,KAAKA,MAG5B,MAAMoF,iBAACA,KAAoB8C,GAAWtI,EAAII,KAAKA,KAC/C+H,EAAKI,eAAe,IACbD,EACH9C,iBAAiBA,EAAiBG,IAAOH,GAAkB,OAE/DjF,IAAQF,QAAQL,EAAII,KAAKG,cAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,UAM3B6E,IACC,IAELpG,IAAAC,cAACrB,EAAM,KACJoB,IAAAC,cAAA,OACOE,UAAU,cACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,MACP/B,OAAQ,OACRiF,MAAO,SAGTvH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SAvEfpB,UACS,UAApBwB,EAAO0E,UAAwB1E,EAAOqG,gBACtCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhBrG,EAAOkI,cAAgBrE,EAAOqE,cAE9B,IACE,MAAMrI,QAAYC,IAAMC,KACtB,oCACAC,EACA,CACEuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOsL,QAAQC,QAEf7J,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA8CoCzB,UAAU,MAAMgJ,KAAMA,GACpEnJ,IAAAC,cAAA,MAAIE,UAAU,eAAc,eAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEjC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,kBAAiB,kBAC/B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,YACN3D,KAAK,MACLgG,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,mBAEnCvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,6BAEnCvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAItBrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,OAAQyD,WAAY,QACrC,iBCZRuO,OAvMIA,KACjB,MAAMlX,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,eACV0K,EAAUC,GAAenG,mBAAS,IACnCvE,EAAWC,cAEjBG,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAkCJM,oBAAU,KAfSM,WACjB,MAAMqB,QAAYC,IAAMwC,IAAI,8BAA+B,CACzDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXsI,EAAY3I,EAAII,KAAKA,MACrBG,IAAQF,QAAQ,iBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAKzB8F,IACC,IA6BH,OACErH,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACPoB,IAAAC,cAAA,MAAIE,UAAU,iBAAgB,QAC5BH,IAAAC,cAAA,OAAKE,UAAU,IACbH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SApEbpB,UACjB,IACE,MAAMqB,QAAYC,IAAMC,KAAK,0BAA2BC,GAEpDH,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAGzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAuDoCzB,UAAU,OACtDH,IAAAC,cAAA,MAAIE,UAAU,aAAY,gBAC1BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,WACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,oBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,aACN3D,KAAK,QACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,sBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,cASV0H,GACCA,EAASvG,IAAK/B,GAEVpB,IAAAC,cAAA,OAAKE,UAAU,sBACbH,IAAAC,cAAA,OACEmC,MAAO,CAAEmC,OAAQ,WACjBpE,UAAU,cACVC,QAASA,KACPnB,oBAA2BmC,EAAKoD,SAEnC,YAECxE,IAAAC,cAAA,SAAG,IAAEmB,EAAKwI,UAGZ5J,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,YACFmB,EAAKyI,OAER7J,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,mBACFmB,EAAKuD,cAER3E,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,cACFmB,EAAKwD,SAER5E,IAAAC,cAAA,SACED,IAAAC,cAAA,UACEG,QAASA,KAEMyE,QAAQ,wBAEnB5F,iBAAwBmC,EAAKoD,QAGjCrE,UAAU,mBACX,QAGDH,IAAAC,cAAA,UACEG,QAASA,KA/HNT,WACnB,IAGE,GADakF,QAAQ,yBACT,CACV,MAAM7D,QAAYC,IAAMC,KACtB,8BACA,CAAEP,MACF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,UAElB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAyGEkD,CAAa1D,EAAKoD,MAEpBrE,UAAU,kBACX,iBCtDHmW,OApIIA,KAClB,MAAMnX,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cACZgG,EAASC,cACRhG,EAAWC,eACV6K,EAASC,GAAcxG,mBAAS,MAErCnE,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAwBFM,oBAAU,KAtBOM,WACf,MAAMqB,QAAYC,IAAMC,KACtB,8BACA,CACG+I,MAAOjF,EAAOiF,OAEjB,CACEvG,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACX2I,EAAWhJ,EAAII,KAAKA,MAGpBG,IAAQF,QAAQL,EAAII,KAAKG,UAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,UAMzB2I,IACC,IAwBN,OACElK,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAACrB,EAAM,KACHmL,GACD/J,IAAAC,cAAA,OAAKE,UAAU,YACLH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SA3BjBpB,UACjBwB,EAAO8I,MAAQjF,EAAOiF,MACtB,IACE,MAAMjJ,QAAYC,IAAMC,KAAK,2BAA4BC,EAAQ,CAC/DuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBtC,EAAS,UAETsC,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BASwCzB,UAAU,MAAMmF,cAAeyE,GAC3E/J,IAAAC,cAAA,MAAIE,UAAU,eAAc,aAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,WACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,0BAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,aACN3D,KAAK,QACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,uBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,iBCnHzB,MAAQyD,OAAO8Q,IAAI7Q,IAmZJ8Q,OAjZQA,KACnB,MAAMrX,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,eACZqL,EAAYC,GAAiB9G,mBAAS,KACtCqC,EAAUC,GAAetC,qBAE1BwB,EAASC,cACThG,EAAWC,eACX0K,EAAQW,GAAY/G,sBAClB0D,EAAIuP,GAAQjT,mBAAS,IAE7BnE,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAqBJM,oBAAU,KACR,MAAMmL,EAAKtD,EAAIC,KAAM/F,GAAOA,EAAKoD,MAAMQ,EAAOiF,OAC1CO,GACFD,EAAWC,EAAKZ,UAEd,CAAC1C,EAAIlC,EAAOiF,QAEjB5K,oBAAU,KA1BaM,WACtB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,+BAAgC,CAC1DC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBkV,EAAOzV,EAAII,KAAKA,OAEhBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAYdkS,IACC,IAmDNzU,oBAAU,KAzBUM,WACjB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,qCACA,CACE+I,MAAOjF,EAAOiF,OAEhB,CACEvG,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB+I,EAActJ,EAAII,KAAKA,OAEvBG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAKhB8I,IACC,IA4BH,OACE1K,IAAAC,cAACrB,EAAM,KACLoB,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAI2J,IAChH5J,IAAAC,cAAA,OACEE,UAAU,cACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,OACP/B,OAAQ,OACRiF,MAAO,SAGTvH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SA3FTpB,UAEnBwB,EAAO8I,MAAQjF,EAAOiF,MACE,UAApB9I,EAAO0E,UAAwB1E,EAAOqG,gBACxCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhB,IACE,MAAMxG,QAAYC,IAAMC,KACtB,mCACAC,GAEEH,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAuEoCzB,UAAU,OACxDH,IAAAC,cAAA,MAAIE,UAAU,eAAc,YAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEjC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,kBAAiB,kBAC/B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,YACN3D,KAAK,MACLgG,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,mBAEnCvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,6BAEnCvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAItBrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,MAAOyD,WAAY,MAAMxD,UAAU,SACpD,eASXtE,IAAAC,cAAA,SACIE,UAAU,QACViC,MAAO,CACLiC,MAAO,OACP0D,eAAgB,WAChBzD,UAAW,SAGbtE,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,qBAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,eAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAKfrC,IAAAC,cAAA,aACCoK,GACaA,EAAWlH,IAAK/B,GACdpB,IAAAC,cAAA,MAAIiI,IAAK9G,EAAKoD,KACZxE,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKyE,WAEX7F,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKqU,MAEXzV,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGV,IAAIsF,KAAKnM,EAAKoF,kBAAkBgH,sBAEnCxN,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SAEX3D,MAAO,UAGTrE,IAAAC,cAAA,OAAKmC,MAAO,CAAE+F,UAAW,QAASC,UAAW,SAC1ChH,EAAKiH,aAAe,QAGzBrI,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,KACEE,UAAU,yBACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,2BA7QpBlF,WACnB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,sCACA,CACEP,MAEF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAyPMkD,CAAa1D,EAAKoD,QAIxBxE,IAAAC,cAAA,KACEE,UAAU,iCACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,yBACjB5F,uBAA8BmC,EAAKoD,iBChY7D,MAAOiB,OAAMiR,IAAGhR,IAsNDiR,OAnNWA,KACxB,MAAMxX,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,eAEVmK,GAAMtI,IAAKuI,WACTvD,EAAUC,GAAetC,mBAAS,OAClCoT,EAAeC,GAAoBrT,mBAAS,MAC7CwB,EAAOC,cACX5F,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IA8DR,OAJGM,oBAAU,KA3BSM,WAChB,MAAMqB,QAAYC,IAAMC,KACpB,uCACA,CACA+J,YAAajG,EAAOiG,aAEpB,CACEvH,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIpD,GAAIuB,EAAII,KAAKC,QAAS,CACpBwV,EAAiB7V,EAAII,KAAKA,MAG1B,MAAMoF,iBAACA,KAAoB8C,GAAWtI,EAAII,KAAKA,KAC/C+H,EAAKI,eAAe,IACbD,EACH9C,iBAAiBA,EAAiBG,IAAOH,GAAkB,OAE/DjF,IAAQF,QAAQL,EAAII,KAAKG,cAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,UAM3BwL,IACC,IAEL/M,IAAAC,cAACrB,EAAM,KACJoB,IAAAC,cAAA,OACOE,UAAU,cACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,MACP/B,OAAQ,OACRiF,MAAO,SAGTvH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SAvEfpB,UACS,UAApBwB,EAAO0E,UAAwB1E,EAAOqG,gBACtCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhBrG,EAAO8J,YAAcjG,EAAOiG,YAE5B,IACE,MAAMjK,QAAYC,IAAMC,KACtB,sCACAC,EACA,CACEuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOsL,QAAQC,QAEf7J,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA8CoCzB,UAAU,MAAMgJ,KAAMA,GACpEnJ,IAAAC,cAAA,MAAIE,UAAU,eAAc,eAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEjC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,kBAAiB,kBAC/B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,YACN3D,KAAK,MACLgG,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,mBAEnCvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,6BAEnCvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAItBrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,OAAQyD,WAAY,QACrC,iBClNvB,MAAQrC,OAAOqR,IAAIpR,IA2MJqR,OAzMQA,KACnB,MAAM5X,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,eACZ6G,EAAUC,GAAetC,mBAAS,OACnCiN,EAAYC,GAAiBlN,mBAAS,IACtCvE,EAAWC,cAEjBG,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAkCJM,oBAAU,KAfWM,WACnB,MAAMqB,QAAYC,IAAMwC,IAAI,mCAAoC,CAC9DC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXqP,EAAc1P,EAAII,KAAKA,MACvBG,IAAQF,QAAQ,mBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAKzBoP,IACC,IA6BH,OACE3Q,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACrB,EAAM,KACLoB,IAAAC,cAAA,OACEE,UAAU,OAGVH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SAtEbpB,UACjB,IACE,MAAMqB,QAAYC,IAAMC,KAAK,gCAAiCC,GAE1DH,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAGzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAyDoCzB,UAAU,OACtDH,IAAAC,cAAA,MAAIE,UAAU,eAAc,cAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,mBACN3D,KAAK,WACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,oBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,cACN3D,KAAK,SACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,sBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,cAQRyO,GACDA,EAAWtN,IAAK/B,GAEZpB,IAAAC,cAAA,OAAKE,UAAU,sBACbH,IAAAC,cAAA,OACEmC,MAAO,CAAEmC,OAAQ,WACjBpE,UAAU,cACVC,QAASA,KACPnB,uBAA8BmC,EAAKoD,SAEtC,oBAECxE,IAAAC,cAAA,SAAG,IAAEmB,EAAKwP,WAGZ5Q,IAAAC,cAAA,OAAKE,UAAU,iBACbH,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,aACFmB,EAAKgO,QAERpP,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,mBACFmB,EAAKuD,cAER3E,IAAAC,cAAA,SACED,IAAAC,cAAA,SAAG,cACFmB,EAAKwD,SAER5E,IAAAC,cAAA,SACED,IAAAC,cAAA,UACEG,QAASA,KAEMyE,QAAQ,wBAEnB5F,oBAA2BmC,EAAKoD,QAGpCrE,UAAU,mBACX,QAGDH,IAAAC,cAAA,UACEG,QAASA,KAhINT,WACnB,IAGE,GADakF,QAAQ,yBACT,CACV,MAAM7D,QAAYC,IAAMC,KACtB,mCACA,CAAEP,MACF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,UAElB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA0GEkD,CAAa1D,EAAKoD,MAEpBrE,UAAU,kBACX,iBCvDJ6W,OAxIOA,KACrB,MAAMhS,EAASC,cACRhG,EAAWC,eACV4R,EAAYC,GAAiBvN,mBAAS,OACtC2F,GAAMtI,IAAKuI,UACZjK,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,cAEfK,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAyBNM,oBAAU,KAvBYM,WACpB,MAAMqB,QAAYC,IAAMC,KACtB,oCACA,CACE8P,aAAchM,EAAOgM,cAEvB,CACEtN,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACX0P,EAAc/P,EAAII,KAAKA,MAGvB+H,EAAKI,eAAevI,EAAII,KAAKA,MAC7BG,IAAQF,QAAQL,EAAII,KAAKG,UAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,UAMzB0P,IACC,IAyBH,OACEjR,IAAAC,cAAAD,IAAAE,SAAA,KACCF,IAAAC,cAACrB,EAAM,KACPoB,IAAAC,cAAA,OACKE,UAAU,MACViC,MAAO,CAAEkF,OAAQ,kBAAmBjD,MAAO,QAAQkD,MAAM,SAEzDvH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SA9BbpB,UACjBwB,EAAO6P,aAAehM,EAAOgM,aAC7B,IACE,MAAMhQ,QAAYC,IAAMC,KAAK,mCAAoCC,EAAQ,CACvEuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBtC,EAAS,aAETsC,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAYoCzB,UAAU,MAAMgJ,KAAMA,GAClEnJ,IAAAC,cAAA,MAAIE,UAAU,eAAc,gBAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,mBACN3D,KAAK,WACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,oBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,cACN3D,KAAK,SACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,sBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,gBACN3D,KAAK,eACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,yBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,eACN3D,KAAK,UACLgG,MAAO,CAAC,CAAElC,UAAU,KAEpBjC,IAAAC,cAAC8B,IAAK,CAACC,KAAK,SAASoC,YAAY,wBAGrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAAA,UACEE,UAAU,kBACViC,MAAO,CAAEiC,MAAO,QAASC,UAAW,QACpCtC,KAAK,UACN,iBCvHjB,MAAQyD,OAAOwR,IAAIvR,IAkZJwR,OAhZUA,KACrB,MAAM/X,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,eACZoS,EAAeC,GAAoB7N,mBAAS,KAC5CqC,EAAUC,GAAetC,sBACzBuC,EAAgBC,GAAqBxC,mBAAS,IAC/CwB,EAASC,cACThG,EAAWC,eACXiY,EAAWC,GAAe5T,sBACxB6T,EAAOC,GAAW9T,mBAAS,IAEhCnE,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAoBPM,oBAAU,KACR,MAAMmL,EAAK6M,EAAOlQ,KAAM/F,GAAOA,EAAKoD,MAAMQ,EAAOgM,cAC7CxG,GACF4M,EAAc5M,EAAKoG,WAEjB,CAACyG,EAAOrS,EAAOgM,eAEpB3R,oBAAU,KA1BaM,WACtB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,oCAAqC,CAC/DC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB+V,EAAUtW,EAAII,KAAKA,OAEnBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAYdkS,IACC,IAmDNzU,oBAAU,KAzBUM,WACjB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,2CACA,CACE8P,aAAchM,EAAOgM,cAEvB,CACEtN,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB8P,EAAiBrQ,EAAII,KAAKA,OAE1BG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAKhB8I,IACC,IA4BH,OACE1K,IAAAC,cAACrB,EAAM,KACLoB,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAIkX,IAChHnX,IAAAC,cAAA,OACEE,UAAU,cACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,OACP/B,OAAQ,OACRiF,MAAO,SAGTvH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SA3FTpB,UAEnBwB,EAAO6P,aAAehM,EAAOgM,aACL,UAApB7P,EAAO0E,UAAwB1E,EAAOqG,gBACxCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhB,IACE,MAAMxG,QAAYC,IAAMC,KACtB,yCACAC,GAEEH,EAAII,KAAKC,QACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,SAChB,MAAO6B,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAuEoCzB,UAAU,OACxDH,IAAAC,cAAA,MAAIE,UAAU,eAAc,YAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEjC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,kBAAiB,kBAC/B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,YACN3D,KAAK,MACLgG,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,mBAEnCvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,6BAEnCvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAItBrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACvBlE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,MAAOyD,WAAY,MAAMxD,UAAU,SACpD,eASXtE,IAAAC,cAAA,SACIE,UAAU,QACViC,MAAO,CACLiC,MAAO,OACP0D,eAAgB,WAChBzD,UAAW,SAGbtE,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,qBAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,eAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAKfrC,IAAAC,cAAA,aACCmR,GACaA,EAAcjO,IAAK/B,GACjBpB,IAAAC,cAAA,MAAIiI,IAAK9G,EAAKoD,KACZxE,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKyE,WAEX7F,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKqU,MAEXzV,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGV,IAAIsF,KAAKnM,EAAKoF,kBAAkBgH,sBAEnCxN,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SAEX3D,MAAO,UAGTrE,IAAAC,cAAA,OAAKmC,MAAO,CAAE+F,UAAW,QAASC,UAAW,SAC1ChH,EAAKiH,aAAe,QAGzBrI,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,KACEE,UAAU,yBACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,2BA7QpBlF,WACnB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,4CACA,CACEP,MAEF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAyPMkD,CAAa1D,EAAKoD,QAIxBxE,IAAAC,cAAA,KACEE,UAAU,iCACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,yBACjB5F,0BAAiCmC,EAAKoD,iBC/XhE,MAAOiB,OAAM8R,IAAG7R,IAuND8R,OApNaA,KAC1B,MAAMrY,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,eAEVmK,GAAMtI,IAAKuI,WACTvD,EAAUC,GAAetC,mBAAS,OAClCiU,EAAkBvF,GAAuB1O,mBAAS,MACnDwB,EAAOC,cAEX5F,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IA8DR,OAJGM,oBAAU,KA3BaM,WACpB,MAAMqB,QAAYC,IAAMC,KACpB,6CACA,CACEiR,eAAgBnN,EAAOmN,gBAEzB,CACEzO,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIpD,GAAIuB,EAAII,KAAKC,QAAS,CACpB6Q,EAAoBlR,EAAII,KAAKA,MAG7B,MAAMoF,iBAACA,KAAoB8C,GAAWtI,EAAII,KAAKA,KAC/C+H,EAAKI,eAAe,IACbD,EACH9C,iBAAiBA,EAAiBG,IAAOH,GAAkB,OAE/DjF,IAAQF,QAAQL,EAAII,KAAKG,cAEzBA,IAAQK,MAAMZ,EAAII,KAAKG,UAM3B+O,IACC,IAELtQ,IAAAC,cAACrB,EAAM,KACJoB,IAAAC,cAAA,OACOE,UAAU,cACViC,MAAO,CACLkF,OAAQ,kBACRjD,MAAO,MACP/B,OAAQ,OACRiF,MAAO,SAGTvH,IAAAC,cAACY,IAAI,CAACC,OAAO,WAAWC,SAvEfpB,UACS,UAApBwB,EAAO0E,UAAwB1E,EAAOqG,gBACtCrG,EAAO0E,SAAW1E,EAAOqG,qBAClBrG,EAAOqG,eAEhBrG,EAAOgR,eAAiBnN,EAAOmN,eAE/B,IACE,MAAMnR,QAAYC,IAAMC,KACtB,4CACAC,EACA,CACEuC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOsL,QAAQC,QAEf7J,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA8CoCzB,UAAU,MAAMgJ,KAAMA,GACpEnJ,IAAAC,cAAA,MAAIE,UAAU,eAAc,eAC5BH,IAAAC,cAAC4D,IAAG,CAACC,OAAQ,IACX9D,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,WACL2D,MAAM,YACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,2BAEnCvB,IAAAC,cAACyF,IAAM,CACLtB,YAAY,mBACZqD,SAAWC,GAAU5B,EAAY4B,IAEjC1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,cAAa,cAC3B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,SACtB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,kBAAiB,kBAC/B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,WAAU,WACxB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,YACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,aAAY,aAC1B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,QAAO,QACrB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACpB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,UAAS,UACvB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,gBAAe,gBAC7B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,eAAc,eAC5B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,iBAAgB,iBAC9B1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,SAAQ,YAId,UAAb7B,GACC7F,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,kBACN3D,KAAK,gBACLgG,MAAO,CACL,CAAElC,UAAU,EAAMV,QAAS,8BAG7BvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAIrCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACRC,MAAM,YACN3D,KAAK,MACLgG,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,mBAEnCvB,IAAAC,cAAC8B,IAAK,CAACC,KAAK,OAAOoC,YAAY,qBAGnCpE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,mBACL2D,MAAM,oBACNqC,MAAO,CACL,CACElC,UAAU,EACVV,QAAS,mCAIbvB,IAAAC,cAAC0H,IAAU,CAACvF,MAAO,CAAEiC,MAAO,YAGhCrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,CACR1D,KAAK,cACL2D,MAAM,cACNqC,MAAO,CAAC,CAAElC,UAAU,EAAMV,QAAS,6BAEnCvB,IAAAC,cAAC8B,IAAM6F,SAAQ,CACbxD,YAAY,oBACZyD,KAAM,EACNzF,MAAO,CAAEiC,MAAO,YAItBrE,IAAAC,cAAC8D,IAAG,CAACC,GAAI,GAAIC,GAAI,IACfjE,IAAAC,cAACY,IAAKgB,KAAI,KACR7B,IAAAC,cAAA,UACE+B,KAAK,SACL7B,UAAU,kBACViC,MAAO,CAAEiC,MAAO,OAAQyD,WAAY,QACrC,iBCvNvB,MAAM1G,GAAO,CACT,CACEjD,KAAM,UACNwE,KAAM,eACNC,KAAM,+BAER,CACEzE,KAAM,QACNwE,KAAM,aACNC,KAAM,qBAER,CACEzE,KAAM,MACNwE,KAAM,WACNC,KAAM,wBAER,CACEzE,KAAM,SACNwE,KAAM,cACNC,KAAM,uBAkCG8U,OA7BIA,KACf,MAAMzY,EAAWC,cACnB,OACEc,IAAAC,cAAAD,IAAAE,SAAA,KACAF,IAAAC,cAAC0K,EAAO,KACR3K,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,0BAC5GD,IAAAC,cAAA,OAAKmC,MAAO,CAACkC,UAAU,SACxBtE,IAAAC,cAAA,WAASE,UAAU,cACdiB,GAAK+B,IAAK/B,GAEPpB,IAAAC,cAAA,OACEE,UAAU,OACVC,QAASA,KACPnB,EAASmC,EAAKuB,QAGhB3C,IAAAC,cAAA,KAAGmD,MAAOhC,EAAKwB,OAEf5C,IAAAC,cAAA,SAAImB,EAAKjD,aC1CzB,MAAQsH,OAAOkS,IAAIjS,IAyQJkS,OAxQOA,KAEjB,MAAO7H,EAAUC,GAAexM,mBAAS,KACjCoM,EAAgBC,GAAqBrM,mBAAS,KAE9C+P,EAAcC,GAAmBhQ,mBAAS,KAC5CiQ,EAAcC,GAAkBlQ,mBAAS,KAC1CmQ,EAAYC,GAAgBpQ,mBAAS,QACrCuI,EAAUC,GAAcxI,mBAAS,aAE9ByI,EAAM1M,GAAWiE,mBAAS,QAC1B0I,EAAaC,GAAkB3I,qBAkDhC2L,EAAcxP,UAClB,MAAMkU,EAAc9D,EACpB,IAAK,IAAI3O,KAAQyS,EACf,GAAIzS,EAAKoD,MAAQgL,EACf,OAAOpO,EAAK+N,aAKf9P,oBAAU,KAtCaM,WACxB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,+CAAgD,CAC1EC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBsO,EAAkB7O,EAAII,KAAKA,OAE3BG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAwBZ0O,IACC,IAEHjR,oBAAU,KA7DSM,WACrB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,qCAAsC,CAChEC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzByO,EAAYhP,EAAII,KAAKA,OAErBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA+CZkS,IACC,IAEHzU,oBAAU,KA3BQM,WACpB,MAAM4T,EAAe,GAEfQ,EAAoBnE,EAC1B,IAAK,IAAIxO,KAAQ2S,EACfR,EAAanS,EAAKoD,WAAa2K,EAAY/N,EAAKoO,WAElDgE,EAAgBD,IAqBZS,IACC,CAACpE,EAAgBG,IAG1B1Q,oBAAU,KACZ,MAAMwU,EAAY,IAAI,IAAIzG,IAAI2C,EAAS5M,IAAI/B,GAAMA,EAAK+N,eACtDuE,EAAiBG,IACb,CAAC9D,IAmBC1Q,oBAAU,KAhBOM,WACf,GAAa,QAATsM,EAAgB,CAClB,MAAMoB,EAAauC,EAAezM,IAAK/B,IAAI,CACzC8G,IAAK9G,EAAKoD,IACV8I,QAAQlM,EAAKyE,SACdgS,SAASzW,EAAKqU,IACb/O,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YAAYjH,EAAKiH,YACjB8G,YAAaoE,EAAanS,EAAKoD,QAKjC2H,EAAekB,KAIjBK,IACC,CAACkC,EAAgB2D,IAGpB,MA+DQ5F,EACU,QAAdgG,EAAoB,CACpB,CACI/F,MAAO,YACPC,UAAW,UACX3F,IAAK,WAEP,CACE0F,MAAM,YACNC,UAAU,WACV3F,IAAI,YAEN,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAM,cACNC,UAAW,cACX3F,IAAK,eACL,CACA0F,MAAM,eACNC,UAAU,cACV3F,IAAI,gBAER,CACA,CACI0F,MAAO,YACPC,UAAW,UACX3F,IAAK,WAEP,CACE0F,MAAM,YACNC,UAAU,WACV3F,IAAI,YAEN,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAM,cACNC,UAAW,cACX3F,IAAK,gBAiBnB,OAJU7I,oBAAU,KAjHIyO,EAAC7B,EAAMkD,EAAYnB,KACjC,IAAIC,EACJ,GAAa,UAAThC,EACF,GAAoB,QAAhBkD,EAAuB,CAEzB,MAAMjB,EAAc,CAAC,aAAc,SAAU,QAAS,SAAU,eAAgB,YAAa,QAAS,QAAS,OAC7H,aAAc,cAAe,eAAgB,WAAY,WAAY,YAAa,eAClF,UAAW,QAAS,SAAU,WAAY,QAAS,gBAAiB,iBAAkB,UACtF,WAAY,cAAe,YAAa,MAAO,OAAQ,MAAO,cAAe,SAAU,eACvF,cAAe,iBAEDD,EAAe2B,EAAezB,OAC3B/M,IAAU8M,EAAYE,SAAShN,EAAKyE,eAElC,CACL,MAAMqI,EAAc,CAC3B,aAAc,SAAU,QAAS,SAAU,eAAgB,YAAa,QAAS,QAAS,OACjG,aAAc,cAAe,eAAgB,WAAY,WAAY,YAAa,eAClF,UAAW,QAAS,SAAU,WAAY,QAAS,gBAAiB,iBAAkB,UACtF,WAAY,cAAe,YAAa,MAAO,OAAQ,MAAO,cAAe,SAAU,eACvF,cAAe,iBAEDD,EAAe2B,EAAezB,OAC3B/M,IACE8M,EAAYE,SAAShN,EAAKyE,WAC3B0N,EAAanS,EAAKoD,OAAS2K,QAK/BlB,EAFgB,QAAThC,EACW,QAAhBkD,EACaS,EAEAA,EAAezB,OAC3B/M,GAASmS,EAAanS,EAAKoD,OAAS2K,GAIrB,QAAhBA,EACaS,EAAezB,OAAQ/M,GAASA,EAAKyE,WAAaoG,GAElD2D,EAAezB,OAC3B/M,GAASA,EAAKyE,WAAaoG,GAAQsH,EAAanS,EAAKoD,OAAQ2K,GAKxElB,EAAaI,KAAK,CAACC,EAAEC,KACnB,MAAMC,EAAM,IAAIjB,KAAKe,EAAE9H,kBACjBiI,EAAM,IAAIlB,KAAKgB,EAAE/H,kBACvB,MAAe,aAARwH,EAAmBS,EAAMD,EAAMA,EAAMC,IAG1C,MAAMpB,EAAaY,EAAa9K,IAAK/B,IAAI,CACrC8G,IAAK9G,EAAKoD,IACV8I,QAAQlM,EAAKyE,SACdgS,SAASzW,EAAKqU,IACb/O,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YAAYjH,EAAKiH,YACjB8G,YAAaoE,EAAanS,EAAKoD,QAEnC2H,EAAekB,IAsDfS,CAAU7B,EAAK0H,EAAY5H,IACzB,CAACE,EAAK0H,EAAY5H,IAG5B/L,IAAAC,cAAC0K,EAAO,KACL3K,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,2BACrHD,IAAAC,cAAA,OAAKE,UAAU,yDAAyDiC,MAAO,CAACiC,MAAM,SACtFrE,IAAAC,cAAA,YAAM,kBACGD,IAAAC,cAACyF,IAAM,CAACtB,YAAY,iBAAiBqD,SAlBjBC,IAClBnI,EAAQmI,IAiBkDtF,MAAO,CAACiC,MAAM,UAEjF,CAAC,MAAM,QAAS,aAAc,SAAU,QAAS,SAAU,eAAgB,YAAa,QAAS,QAAS,OAC3G,aAAc,cAAe,eAAgB,WAAY,WAAY,YAAa,eAClF,UAAW,QAAS,SAAU,WAAY,QAAS,gBAAiB,iBAAkB,UACtF,WAAY,cAAe,YAAa,MAAO,OAAQ,MAAO,cAAe,SAAU,eACvF,cAAe,iBAAiBlB,IAAK/B,GACvCpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAGZpB,IAAAC,cAAA,YAAM,qBACLD,IAAAC,cAACyF,IAAM,CAACtB,YAAY,sBAAsBqD,SAxBhBC,IACvBkM,EAAelM,IAuBqDtF,MAAO,CAACiC,MAAM,UACrFrE,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAO,OACnB+L,EAActQ,IAAK/B,GACpBpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAIvBpB,IAAAC,cAAA,YAAM,cACND,IAAAC,cAACyF,IAAM,CAACtB,YAAY,oBAAoBqD,SAAWC,IAASsE,EAAatE,KACxE1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,cACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,gBAI7B1H,IAAAC,cAAA,UAAQG,QAASA,KAAKP,OAAO6O,SAAUtM,MAAO,CAAC0F,WAAW,MAAM6G,aAAa,OAAOpK,OAAO,YAAa,SACxGvE,IAAAC,cAAC2O,IAAK,CAACjB,QAASA,EAASkB,WAAY3C,EAAa4C,YAAY,MCnQtE,MAAQrJ,OAAOqS,IAAIpS,IAyQJqS,OAxQKA,KAEf,MAAOhI,EAAUC,GAAexM,mBAAS,KACjCoM,EAAgBC,GAAqBrM,mBAAS,KAE9C+P,EAAcC,GAAmBhQ,mBAAS,KAC5CiQ,EAAcC,GAAkBlQ,mBAAS,KAC1CmQ,EAAYC,GAAgBpQ,mBAAS,QACrCuI,EAAUC,GAAcxI,mBAAS,aAE9ByI,EAAM1M,GAAWiE,mBAAS,QAC1B0I,EAAaC,GAAkB3I,qBAkDhC2L,EAAcxP,UAClB,MAAMkU,EAAc9D,EACpB,IAAK,IAAI3O,KAAQyS,EACf,GAAIzS,EAAKoD,MAAQgL,EACf,OAAOpO,EAAKqD,WAKfpF,oBAAU,KAtCaM,WACxB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,qCAAsC,CAChEC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBsO,EAAkB7O,EAAII,KAAKA,OAE3BG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAwBZ0O,IACC,IAEHjR,oBAAU,KA7DSM,WACrB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,2BAA4B,CACtDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzByO,EAAYhP,EAAII,KAAKA,OAErBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA+CZkS,IACC,IAEHzU,oBAAU,KA3BQM,WACpB,MAAM4T,EAAe,GAEfQ,EAAoBnE,EAC1B,IAAK,IAAIxO,KAAQ2S,EACfR,EAAanS,EAAKoD,WAAa2K,EAAY/N,EAAKgE,SAElDoO,EAAgBD,IAqBZS,IACC,CAACpE,EAAgBG,IAG1B1Q,oBAAU,KACZ,MAAMwU,EAAY,IAAI,IAAIzG,IAAI2C,EAAS5M,IAAI/B,GAAMA,EAAKqD,aACtDiP,EAAiBG,IACb,CAAC9D,IAmBC1Q,oBAAU,KAhBOM,WACf,GAAa,QAATsM,EAAgB,CAClB,MAAMoB,EAAauC,EAAezM,IAAK/B,IAAI,CACzC8G,IAAK9G,EAAKoD,IACV8I,QAAQlM,EAAKyE,SACdgS,SAASzW,EAAKqU,IACb/O,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YAAYjH,EAAKiH,YACjB8G,YAAaoE,EAAanS,EAAKoD,QAKjC2H,EAAekB,KAIjBK,IACC,CAACkC,EAAgB2D,IAGpB,MA+DQ5F,EACU,QAAdgG,EAAoB,CACpB,CACI/F,MAAO,YACPC,UAAW,UACX3F,IAAK,WAEP,CACE0F,MAAM,YACNC,UAAU,WACV3F,IAAI,YAEN,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAM,cACNC,UAAW,cACX3F,IAAK,eACL,CACA0F,MAAM,aACNC,UAAU,cACV3F,IAAI,gBAER,CACA,CACI0F,MAAO,YACPC,UAAW,UACX3F,IAAK,WAEP,CACE0F,MAAM,YACNC,UAAU,WACV3F,IAAI,YAEN,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAM,cACNC,UAAW,cACX3F,IAAK,gBAiBnB,OAJU7I,oBAAU,KAjHIyO,EAAC7B,EAAMkD,EAAYnB,KACjC,IAAIC,EACJ,GAAa,UAAThC,EACF,GAAoB,QAAhBkD,EAAuB,CAEzB,MAAMjB,EAAc,CAAC,aAAc,SAAU,QAAS,SAAU,eAAgB,YAAa,QAAS,QAAS,OAC7H,aAAc,cAAe,eAAgB,WAAY,WAAY,YAAa,eAClF,UAAW,QAAS,SAAU,WAAY,QAAS,gBAAiB,iBAAkB,UACtF,WAAY,cAAe,YAAa,MAAO,OAAQ,MAAO,cAAe,SAAU,eACvF,cAAe,iBAEDD,EAAe2B,EAAezB,OAC3B/M,IAAU8M,EAAYE,SAAShN,EAAKyE,eAElC,CACL,MAAMqI,EAAc,CAC3B,aAAc,SAAU,QAAS,SAAU,eAAgB,YAAa,QAAS,QAAS,OACjG,aAAc,cAAe,eAAgB,WAAY,WAAY,YAAa,eAClF,UAAW,QAAS,SAAU,WAAY,QAAS,gBAAiB,iBAAkB,UACtF,WAAY,cAAe,YAAa,MAAO,OAAQ,MAAO,cAAe,SAAU,eACvF,cAAe,iBAEDD,EAAe2B,EAAezB,OAC3B/M,IACE8M,EAAYE,SAAShN,EAAKyE,WAC3B0N,EAAanS,EAAKoD,OAAS2K,QAK/BlB,EAFgB,QAAThC,EACW,QAAhBkD,EACaS,EAEAA,EAAezB,OAC3B/M,GAASmS,EAAanS,EAAKoD,OAAS2K,GAIrB,QAAhBA,EACaS,EAAezB,OAAQ/M,GAASA,EAAKyE,WAAaoG,GAElD2D,EAAezB,OAC3B/M,GAASA,EAAKyE,WAAaoG,GAAQsH,EAAanS,EAAKoD,OAAQ2K,GAKxElB,EAAaI,KAAK,CAACC,EAAEC,KACnB,MAAMC,EAAM,IAAIjB,KAAKe,EAAE9H,kBACjBiI,EAAM,IAAIlB,KAAKgB,EAAE/H,kBACvB,MAAe,aAARwH,EAAmBS,EAAMD,EAAMA,EAAMC,IAG1C,MAAMpB,EAAaY,EAAa9K,IAAK/B,IAAI,CACrC8G,IAAK9G,EAAKoD,IACV8I,QAAQlM,EAAKyE,SACdgS,SAASzW,EAAKqU,IACb/O,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YAAYjH,EAAKiH,YACjB8G,YAAaoE,EAAanS,EAAKoD,QAEnC2H,EAAekB,IAsDfS,CAAU7B,EAAK0H,EAAY5H,IACzB,CAACE,EAAK0H,EAAY5H,IAG5B/L,IAAAC,cAAC0K,EAAO,KACL3K,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,qBACrHD,IAAAC,cAAA,OAAKE,UAAU,yDAAyDiC,MAAO,CAACiC,MAAM,SACtFrE,IAAAC,cAAA,YAAM,kBACGD,IAAAC,cAACyF,IAAM,CAACtB,YAAY,iBAAiBqD,SAlBjBC,IAClBnI,EAAQmI,IAiBkDtF,MAAO,CAACiC,MAAM,UAEjF,CAAC,MAAM,QAAS,aAAc,SAAU,QAAS,SAAU,eAAgB,YAAa,QAAS,QAAS,OAC3G,aAAc,cAAe,eAAgB,WAAY,WAAY,YAAa,eAClF,UAAW,QAAS,SAAU,WAAY,QAAS,gBAAiB,iBAAkB,UACtF,WAAY,cAAe,YAAa,MAAO,OAAQ,MAAO,cAAe,SAAU,eACvF,cAAe,iBAAiBlB,IAAK/B,GACvCpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAGZpB,IAAAC,cAAA,YAAM,mBACLD,IAAAC,cAACyF,IAAM,CAACtB,YAAY,oBAAoBqD,SAxBdC,IACvBkM,EAAelM,IAuBmDtF,MAAO,CAACiC,MAAM,UACnFrE,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAO,OACnB+L,EAActQ,IAAK/B,GACpBpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAIvBpB,IAAAC,cAAA,YAAM,cACND,IAAAC,cAACyF,IAAM,CAACtB,YAAY,oBAAoBqD,SAAWC,IAASsE,EAAatE,KACxE1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,cACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,gBAI7B1H,IAAAC,cAAA,UAAQG,QAASA,KAAKP,OAAO6O,SAAUtM,MAAO,CAAC0F,WAAW,MAAM6G,aAAa,OAAOpK,OAAO,YAAa,SACxGvE,IAAAC,cAAC2O,IAAK,CAACjB,QAASA,EAASkB,WAAY3C,EAAa4C,YAAY,MCnQtE,MAAQrJ,OAAOuS,IAAItS,IAyQJuS,OAxQGA,KAEb,MAAOlI,EAAUC,GAAexM,mBAAS,KACjCoM,EAAgBC,GAAqBrM,mBAAS,KAE9C+P,EAAcC,GAAmBhQ,mBAAS,KAC5CiQ,EAAcC,GAAkBlQ,mBAAS,KAC1CmQ,EAAYC,GAAgBpQ,mBAAS,QACrCuI,EAAUC,GAAcxI,mBAAS,aAE9ByI,EAAM1M,GAAWiE,mBAAS,QAC1B0I,EAAaC,GAAkB3I,qBAkDhC2L,EAAcxP,UAClB,MAAMkU,EAAc9D,EACpB,IAAK,IAAI3O,KAAQyS,EACf,GAAIzS,EAAKoD,MAAQgL,EACf,OAAOpO,EAAKwI,SAKfvK,oBAAU,KAtCaM,WACxB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,iCAAkC,CAC5DC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBsO,EAAkB7O,EAAII,KAAKA,OAE3BG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAwBZ0O,IACC,IAEHjR,oBAAU,KA7DSM,WACrB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,8BAA+B,CACzDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzByO,EAAYhP,EAAII,KAAKA,OAErBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA+CZkS,IACC,IAEHzU,oBAAU,KA3BQM,WACpB,MAAM4T,EAAe,GAEfQ,EAAoBnE,EAC1B,IAAK,IAAIxO,KAAQ2S,EACfR,EAAanS,EAAKoD,WAAa2K,EAAY/N,EAAK6I,OAElDuJ,EAAgBD,IAqBZS,IACC,CAACpE,EAAgBG,IAG1B1Q,oBAAU,KACZ,MAAMwU,EAAY,IAAI,IAAIzG,IAAI2C,EAAS5M,IAAI/B,GAAMA,EAAKwI,WACtD8J,EAAiBG,IACb,CAAC9D,IAmBC1Q,oBAAU,KAhBOM,WACf,GAAa,QAATsM,EAAgB,CAClB,MAAMoB,EAAauC,EAAezM,IAAK/B,IAAI,CACzC8G,IAAK9G,EAAKoD,IACV8I,QAAQlM,EAAKyE,SACdgS,SAASzW,EAAKqU,IACb/O,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YAAYjH,EAAKiH,YACjB8G,YAAaoE,EAAanS,EAAKoD,QAKjC2H,EAAekB,KAIjBK,IACC,CAACkC,EAAgB2D,IAGpB,MA+DQ5F,EACU,QAAdgG,EAAoB,CACpB,CACI/F,MAAO,YACPC,UAAW,UACX3F,IAAK,WAEP,CACE0F,MAAM,YACNC,UAAU,WACV3F,IAAI,YAEN,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAM,cACNC,UAAW,cACX3F,IAAK,eACL,CACA0F,MAAM,WACNC,UAAU,cACV3F,IAAI,gBAER,CACA,CACI0F,MAAO,YACPC,UAAW,UACX3F,IAAK,WAEP,CACE0F,MAAM,YACNC,UAAU,WACV3F,IAAI,YAEN,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAM,cACNC,UAAW,cACX3F,IAAK,gBAiBnB,OAJU7I,oBAAU,KAjHIyO,EAAC7B,EAAMkD,EAAYnB,KACjC,IAAIC,EACJ,GAAa,UAAThC,EACF,GAAoB,QAAhBkD,EAAuB,CAEzB,MAAMjB,EAAc,CAAC,aAAc,SAAU,QAAS,SAAU,eAAgB,YAAa,QAAS,QAAS,OAC7H,aAAc,cAAe,eAAgB,WAAY,WAAY,YAAa,eAClF,UAAW,QAAS,SAAU,WAAY,QAAS,gBAAiB,iBAAkB,UACtF,WAAY,cAAe,YAAa,MAAO,OAAQ,MAAO,cAAe,SAAU,eACvF,cAAe,iBAEDD,EAAe2B,EAAezB,OAC3B/M,IAAU8M,EAAYE,SAAShN,EAAKyE,eAElC,CACL,MAAMqI,EAAc,CAC3B,aAAc,SAAU,QAAS,SAAU,eAAgB,YAAa,QAAS,QAAS,OACjG,aAAc,cAAe,eAAgB,WAAY,WAAY,YAAa,eAClF,UAAW,QAAS,SAAU,WAAY,QAAS,gBAAiB,iBAAkB,UACtF,WAAY,cAAe,YAAa,MAAO,OAAQ,MAAO,cAAe,SAAU,eACvF,cAAe,iBAEDD,EAAe2B,EAAezB,OAC3B/M,IACE8M,EAAYE,SAAShN,EAAKyE,WAC3B0N,EAAanS,EAAKoD,OAAS2K,QAK/BlB,EAFgB,QAAThC,EACW,QAAhBkD,EACaS,EAEAA,EAAezB,OAC3B/M,GAASmS,EAAanS,EAAKoD,OAAS2K,GAIrB,QAAhBA,EACaS,EAAezB,OAAQ/M,GAASA,EAAKyE,WAAaoG,GAElD2D,EAAezB,OAC3B/M,GAASA,EAAKyE,WAAaoG,GAAQsH,EAAanS,EAAKoD,OAAQ2K,GAKxElB,EAAaI,KAAK,CAACC,EAAEC,KACnB,MAAMC,EAAM,IAAIjB,KAAKe,EAAE9H,kBACjBiI,EAAM,IAAIlB,KAAKgB,EAAE/H,kBACvB,MAAe,aAARwH,EAAmBS,EAAMD,EAAMA,EAAMC,IAG1C,MAAMpB,EAAaY,EAAa9K,IAAK/B,IAAI,CACrC8G,IAAK9G,EAAKoD,IACV8I,QAAQlM,EAAKyE,SACdgS,SAASzW,EAAKqU,IACb/O,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YAAYjH,EAAKiH,YACjB8G,YAAaoE,EAAanS,EAAKoD,QAEnC2H,EAAekB,IAsDfS,CAAU7B,EAAK0H,EAAY5H,IACzB,CAACE,EAAK0H,EAAY5H,IAG5B/L,IAAAC,cAAC0K,EAAO,KACL3K,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,kBACrHD,IAAAC,cAAA,OAAKE,UAAU,yDAAyDiC,MAAO,CAACiC,MAAM,SACtFrE,IAAAC,cAAA,YAAM,kBACGD,IAAAC,cAACyF,IAAM,CAACtB,YAAY,iBAAiBqD,SAlBjBC,IAClBnI,EAAQmI,IAiBkDtF,MAAO,CAACiC,MAAM,UAEjF,CAAC,MAAM,QAAS,aAAc,SAAU,QAAS,SAAU,eAAgB,YAAa,QAAS,QAAS,OAC3G,aAAc,cAAe,eAAgB,WAAY,WAAY,YAAa,eAClF,UAAW,QAAS,SAAU,WAAY,QAAS,gBAAiB,iBAAkB,UACtF,WAAY,cAAe,YAAa,MAAO,OAAQ,MAAO,cAAe,SAAU,eACvF,cAAe,iBAAiBlB,IAAK/B,GACvCpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAGZpB,IAAAC,cAAA,YAAM,iBACLD,IAAAC,cAACyF,IAAM,CAACtB,YAAY,kBAAkBqD,SAxBZC,IACvBkM,EAAelM,IAuBiDtF,MAAO,CAACiC,MAAM,UACjFrE,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAO,OACnB+L,EAActQ,IAAK/B,GACpBpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAIvBpB,IAAAC,cAAA,YAAM,cACND,IAAAC,cAACyF,IAAM,CAACtB,YAAY,oBAAoBqD,SAAWC,IAASsE,EAAatE,KACxE1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,cACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,gBAI7B1H,IAAAC,cAAA,UAAQG,QAASA,KAAKP,OAAO6O,SAAUtM,MAAO,CAAC0F,WAAW,MAAM6G,aAAa,OAAOpK,OAAO,YAAa,SACxGvE,IAAAC,cAAC2O,IAAK,CAACjB,QAASA,EAASkB,WAAY3C,EAAa4C,YAAY,MCnQtE,MAAQrJ,OAAOyS,IAAIxS,IAyQJyS,OAxQMA,KAEhB,MAAOpI,EAAUC,GAAexM,mBAAS,KACjCoM,EAAgBC,GAAqBrM,mBAAS,KAE9C+P,EAAcC,GAAmBhQ,mBAAS,KAC5CiQ,EAAcC,GAAkBlQ,mBAAS,KAC1CmQ,EAAYC,GAAgBpQ,mBAAS,QACrCuI,EAAUC,GAAcxI,mBAAS,aAE9ByI,EAAM1M,GAAWiE,mBAAS,QAC1B0I,EAAaC,GAAkB3I,qBAkDhC2L,EAAcxP,UAClB,MAAMkU,EAAc9D,EACpB,IAAK,IAAI3O,KAAQyS,EACf,GAAIzS,EAAKoD,MAAQgL,EACf,OAAOpO,EAAKwP,UAKfvR,oBAAU,KAtCaM,WACxB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,iDAAkD,CAC5EC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBsO,EAAkB7O,EAAII,KAAKA,OAE3BG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAwBZ0O,IACC,IAEHjR,oBAAU,KA7DSM,WACrB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,mCAAoC,CAC9DC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzByO,EAAYhP,EAAII,KAAKA,OAErBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA+CZkS,IACC,IAEHzU,oBAAU,KA3BQM,WACpB,MAAM4T,EAAe,GAEfQ,EAAoBnE,EAC1B,IAAK,IAAIxO,KAAQ2S,EACfR,EAAanS,EAAKoD,WAAa2K,EAAY/N,EAAK4P,cAElDwC,EAAgBD,IAqBZS,IACC,CAACpE,EAAgBG,IAG1B1Q,oBAAU,KACZ,MAAMwU,EAAY,IAAI,IAAIzG,IAAI2C,EAAS5M,IAAI/B,GAAMA,EAAKwP,YACtD8C,EAAiBG,IACb,CAAC9D,IAmBC1Q,oBAAU,KAhBOM,WACf,GAAa,QAATsM,EAAgB,CAClB,MAAMoB,EAAauC,EAAezM,IAAK/B,IAAI,CACzC8G,IAAK9G,EAAKoD,IACV8I,QAAQlM,EAAKyE,SACdgS,SAASzW,EAAKqU,IACb/O,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YAAYjH,EAAKiH,YACjB8G,YAAaoE,EAAanS,EAAKoD,QAKjC2H,EAAekB,KAIjBK,IACC,CAACkC,EAAgB2D,IAGpB,MA+DQ5F,EACU,QAAdgG,EAAoB,CACpB,CACI/F,MAAO,YACPC,UAAW,UACX3F,IAAK,WAEP,CACE0F,MAAM,YACNC,UAAU,WACV3F,IAAI,YAEN,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAM,cACNC,UAAW,cACX3F,IAAK,eACL,CACA0F,MAAM,mBACNC,UAAU,cACV3F,IAAI,gBAER,CACA,CACI0F,MAAO,YACPC,UAAW,UACX3F,IAAK,WAEP,CACE0F,MAAM,YACNC,UAAU,WACV3F,IAAI,YAEN,CAAE0F,MAAO,oBAAqBC,UAAW,OAAQ3F,IAAK,QACtD,CACE0F,MAAM,cACNC,UAAW,cACX3F,IAAK,gBAiBnB,OAJU7I,oBAAU,KAjHIyO,EAAC7B,EAAMkD,EAAYnB,KACjC,IAAIC,EACJ,GAAa,UAAThC,EACF,GAAoB,QAAhBkD,EAAuB,CAEzB,MAAMjB,EAAc,CAAC,aAAc,SAAU,QAAS,SAAU,eAAgB,YAAa,QAAS,QAAS,OAC7H,aAAc,cAAe,eAAgB,WAAY,WAAY,YAAa,eAClF,UAAW,QAAS,SAAU,WAAY,QAAS,gBAAiB,iBAAkB,UACtF,WAAY,cAAe,YAAa,MAAO,OAAQ,MAAO,cAAe,SAAU,eACvF,cAAe,iBAEDD,EAAe2B,EAAezB,OAC3B/M,IAAU8M,EAAYE,SAAShN,EAAKyE,eAElC,CACL,MAAMqI,EAAc,CAC3B,aAAc,SAAU,QAAS,SAAU,eAAgB,YAAa,QAAS,QAAS,OACjG,aAAc,cAAe,eAAgB,WAAY,WAAY,YAAa,eAClF,UAAW,QAAS,SAAU,WAAY,QAAS,gBAAiB,iBAAkB,UACtF,WAAY,cAAe,YAAa,MAAO,OAAQ,MAAO,cAAe,SAAU,eACvF,cAAe,iBAEDD,EAAe2B,EAAezB,OAC3B/M,IACE8M,EAAYE,SAAShN,EAAKyE,WAC3B0N,EAAanS,EAAKoD,OAAS2K,QAK/BlB,EAFgB,QAAThC,EACW,QAAhBkD,EACaS,EAEAA,EAAezB,OAC3B/M,GAASmS,EAAanS,EAAKoD,OAAS2K,GAIrB,QAAhBA,EACaS,EAAezB,OAAQ/M,GAASA,EAAKyE,WAAaoG,GAElD2D,EAAezB,OAC3B/M,GAASA,EAAKyE,WAAaoG,GAAQsH,EAAanS,EAAKoD,OAAQ2K,GAKxElB,EAAaI,KAAK,CAACC,EAAEC,KACnB,MAAMC,EAAM,IAAIjB,KAAKe,EAAE9H,kBACjBiI,EAAM,IAAIlB,KAAKgB,EAAE/H,kBACvB,MAAe,aAARwH,EAAmBS,EAAMD,EAAMA,EAAMC,IAG1C,MAAMpB,EAAaY,EAAa9K,IAAK/B,IAAI,CACrC8G,IAAK9G,EAAKoD,IACV8I,QAAQlM,EAAKyE,SACdgS,SAASzW,EAAKqU,IACb/O,KAAM,IAAI6G,KAAKnM,EAAKoF,kBAAkBgH,qBACtCnF,YAAYjH,EAAKiH,YACjB8G,YAAaoE,EAAanS,EAAKoD,QAEnC2H,EAAekB,IAsDfS,CAAU7B,EAAK0H,EAAY5H,IACzB,CAACE,EAAK0H,EAAY5H,IAG5B/L,IAAAC,cAAC0K,EAAO,KACL3K,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,0BACrHD,IAAAC,cAAA,OAAKE,UAAU,yDAAyDiC,MAAO,CAACiC,MAAM,SACtFrE,IAAAC,cAAA,YAAM,kBACGD,IAAAC,cAACyF,IAAM,CAACtB,YAAY,iBAAiBqD,SAlBjBC,IAClBnI,EAAQmI,IAiBkDtF,MAAO,CAACiC,MAAM,UAEjF,CAAC,MAAM,QAAS,aAAc,SAAU,QAAS,SAAU,eAAgB,YAAa,QAAS,QAAS,OAC3G,aAAc,cAAe,eAAgB,WAAY,WAAY,YAAa,eAClF,UAAW,QAAS,SAAU,WAAY,QAAS,gBAAiB,iBAAkB,UACtF,WAAY,cAAe,YAAa,MAAO,OAAQ,MAAO,cAAe,SAAU,eACvF,cAAe,iBAAiBlB,IAAK/B,GACvCpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAGZpB,IAAAC,cAAA,YAAM,yBACLD,IAAAC,cAACyF,IAAM,CAACtB,YAAY,0BAA0BqD,SAxBpBC,IACvBkM,EAAelM,IAuByDtF,MAAO,CAACiC,MAAM,UACzFrE,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAO,OACnB+L,EAActQ,IAAK/B,GACpBpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAIvBpB,IAAAC,cAAA,YAAM,cACND,IAAAC,cAACyF,IAAM,CAACtB,YAAY,oBAAoBqD,SAAWC,IAASsE,EAAatE,KACxE1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,cACzB1H,IAAAC,cAACwF,GAAM,CAACiC,MAAM,YAAW,gBAI7B1H,IAAAC,cAAA,UAAQG,QAASA,KAAKP,OAAO6O,SAAUtM,MAAO,CAAC0F,WAAW,MAAM6G,aAAa,OAAOpK,OAAO,YAAa,SACxGvE,IAAAC,cAAC2O,IAAK,CAACjB,QAASA,EAASkB,WAAY3C,EAAa4C,YAAY,gBClKvDsJ,OA/FEA,KACf,MAAOC,EAAUC,GAAe9U,mBAAS,IAC1BxE,aACfD,CAASR,EAAQ,UAyBjBc,oBAAU,KAxBOM,WACf,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,2BAA4B,CACtDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,WAC9C8Y,gBAAgB,WACdC,OAAQ,WACdC,QAAS,OAGLzX,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SAEzB+W,EAAYtX,EAAII,KAAKA,OAGrBG,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,yBAKpB8W,IACI,IAEF,MAwBIC,EAAO,CACT,CACI/K,MAAM,YACNC,UAAU,OACV3F,IAAI,QAER,CACI0F,MAAM,QACNC,UAAU,QACV3F,IAAI,SAER,CACI0F,MAAM,OACNC,UAAU,OACV3F,IAAI,QAER,CACI0F,MAAM,UACP1F,IAAI,UACJ0Q,OAAOA,CAACC,EAAEC,IACT9Y,IAAAC,cAAC8Y,KAAM,CACPC,QAAuB,WAAdF,EAAOza,KAChB4a,gBAAgB,SAChBC,kBAAkB,SAClB9Y,QAASA,KAhDMT,OAAMwZ,EAAOC,KACpC,IACA,MAAMpY,QAAUC,IAAMC,KAAK,2BAA2B,CAClDP,GAAGwY,EACH9a,KAAK+a,GACP,CACE1V,QAAQ,CACJC,wBAAwBrE,aAAaG,QAAQ,cAGrDiC,QAAQC,IAAIX,GACTA,EAAII,KAAKC,SACRE,IAAQF,QAAQL,EAAII,KAAKG,SAEzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAE1B,MAAMK,GACHF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA4BIyX,CAAeP,EAAOtU,IAAkB,WAAdsU,EAAOza,KAAgB,SAAS,eAM9E,OAAQ2B,IAAAC,cAACrB,EAAM,KACjBoB,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,UAC/GD,IAAAC,cAAC2O,IAAK,CAACjB,QAASgL,EAAQ9J,WAAYwJ,EAAUvJ,YAAY,MCpF1D,MAAQrJ,OAAO6T,IAAI5T,IAwkBJ6T,OAtkBKA,KAClB,MAAMta,EAASC,cACTC,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,eACVwa,EAAUC,GAAejW,mBAAS,KAClCwL,EAAaC,GAAkBzL,mBAAS,KACxCF,EAAWC,GAAgBC,mBAAS,KACpCkG,EAAUC,GAAenG,mBAAS,KAClCiN,EAAYC,GAAiBlN,mBAAS,KACtCkW,EAAWC,GAAgBnW,mBAAS,KACpCsK,EAAW8L,GAAgBpW,mBAAS,KACpCyI,EAAM1M,GAAWiE,mBAAS,QAC1BqW,EAAYC,GAAiBtW,sBAC7BuW,EAAYC,GAAiBxW,sBAC9ByW,EAAWC,GAAe1W,mBAAS,IAGzCnE,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAoBJM,oBAAU,KAlBaM,WACrB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,mCAAoC,CAC9DC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBkY,EAAYzY,EAAII,KAAKA,OAErBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAIhBuY,IACC,IAiBH9a,oBAAU,KAfYM,WACpB,MAAMqB,QAAYC,IAAMwC,IAAI,qCAAsC,CAChEC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACX4N,EAAejO,EAAII,KAAKA,MACxBG,IAAQF,QAAQ,qBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAKzB2N,IACC,IAgBH7P,oBAAU,KAdUM,WAClB,MAAMqB,QAAYC,IAAMwC,IAAI,2BAA4B,CACtDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXkC,EAAavC,EAAII,KAAKA,MACtBG,IAAQF,QAAQ,oBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAIzBqC,IACC,IAgBHvE,oBAAU,KAfSM,WACjB,MAAMqB,QAAYC,IAAMwC,IAAI,8BAA+B,CACzDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXsI,EAAY3I,EAAII,KAAKA,MACrBG,IAAQF,QAAQ,iBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAKzB8F,IACC,IAgBHhI,oBAAU,KAfWM,WACnB,MAAMqB,QAAYC,IAAMwC,IAAI,mCAAoC,CAC9DC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXqP,EAAc1P,EAAII,KAAKA,MACvBG,IAAQF,QAAQ,mBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAKzBoP,IACC,IAEH,MAUMC,EAAWjR,MAAOya,EAAQC,KAC9B,MAAMtK,EAAWf,EACXxE,EAAOd,EACPxD,EAAU5C,EACV+T,EAAS5G,EACf,GAAiB,YAAb4J,GACF,IAAK,IAAIjZ,KAAQ2O,EACf,GAAI3O,EAAKoD,MAAQ4V,EACf,OAAOhZ,EAAK+N,iBAGX,GAAiB,UAAbkL,GACT,IAAK,IAAIjZ,KAAQ8E,EACf,GAAI9E,EAAKoD,MAAQ4V,EACf,OAAOhZ,EAAKqD,eAGX,GAAiB,QAAb4V,GACT,IAAK,IAAIjZ,KAAQoJ,EACf,GAAIpJ,EAAKoD,MAAQ4V,EACf,OAAOhZ,EAAKwI,aAGX,GAAiB,WAAbyQ,EACT,IAAK,IAAIjZ,KAAQiW,EACf,GAAIjW,EAAKoD,MAAQ4V,EACf,OAAOhZ,EAAKwP,UAKpBvR,oBAAU,KAzCSM,WACjB,MAAM+Z,EAAY,GAEZY,EAAcd,EACpB,IAAK,IAAIpY,KAAQkZ,EACfZ,EAAUtY,EAAKoD,WAAaoM,EAASxP,EAAKgZ,OAAQhZ,EAAKiZ,UAEzDV,EAAaD,IAmCba,IACC,CAACf,EAAUxK,EAAa1L,EAAWoG,EAAU+G,IA2BhDpR,oBAAU,KACR,IAAIgO,EACJ,GAAa,QAATpB,EACFoB,EAAamM,OACR,GAAa,UAATvN,EAAkB,CAC3B,MAAMiC,EAAc,CAClB,aACA,SACA,QACA,SACA,eACA,YACA,QACA,QACA,OACA,aACA,cACA,eACA,WACA,WACA,YACA,eACA,UACA,QACA,SACA,WACA,QACA,gBACA,iBACA,UACA,WACA,cACA,YACA,MACA,OACA,MACA,cACA,SACA,eACA,cACA,iBAEFb,EAAamM,EAASrL,OACnB/M,IAAU8M,EAAYE,SAAShN,EAAKyE,gBAGvCwH,EAAamM,EAASrL,OAAQ/M,GAASA,EAAKyE,WAAaoG,GAE3D2N,EAAavM,GACbyM,EAAczM,EAAWmN,SACxB,CAACvO,EAAMuN,IAOTna,oBAAU,KACT,MAAMwU,EAAY,IAAI,IAAIzG,IAAIoM,EAASrW,IAAI/B,GAAMA,EAAKyE,YACtDqU,EAAcrG,IACV,CAAC2F,IAmCP,OACExZ,IAAAC,cAACrB,EAAM,KACLoB,IAAAC,cAAA,OACEmC,MAAO,CACLU,WAAY,SACZC,eAAgB,SAChBC,QAAS,OACTC,SAAU,OACVC,WAAY,SAGdlD,IAAAC,cAAA,SAAG,4BAELD,IAAAC,cAAA,OACEE,UAAU,yDACViC,MAAO,CAAEiC,MAAO,SAEhBrE,IAAAC,cAAA,YAAM,kBACND,IAAAC,cAACyF,IAAM,CACLtB,YAAY,iBACZqD,SA/DYC,IAClBnI,EAAQmI,IA+DFtF,MAAO,CAAEiC,MAAO,UAEf,CACC,MACA,QACA,aACA,SACA,QACA,SACA,eACA,YACA,QACA,QACA,OACA,aACA,cACA,eACA,WACA,WACA,YACA,eACA,UACA,QACA,SACA,WACA,QACA,gBACA,iBACA,UACA,WACA,cACA,YACA,MACA,OACA,MACA,cACA,SACA,eACA,cACA,iBACAlB,IAAK/B,GACLpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAG1BpB,IAAAC,cAAA,YAAM,qBACND,IAAAC,cAACyF,IAAM,CACLtB,YAAY,iBACZqD,SApGkBC,IACxBsS,EAActS,IAoGRtF,MAAO,CAAEiC,MAAO,UAEdrE,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACtBuS,EAAW9W,IAAK/B,GACdpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAI1BpB,IAAAC,cAAA,UACEmC,MAAO,CACLuM,aAAc,OACdpK,OAAQ,UACRlC,MAAO,QACPoY,gBAAiB,MACjBxS,QAAS,WAEX7H,QAASA,KAAQP,OAAOgF,QAAQ,4BAhHrBlF,WACjB,IAEE,MAAMqB,QAAYC,IAAMC,KACtB,8BACA,CACE+K,KAAM8N,GAER,CACErW,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAKhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAyFkD8Y,KAG7D,WAIH1a,IAAAC,cAAA,OACEmC,MAAO,CACLY,QAAS,OACTF,WAAY,SACZuB,MAAO,OACPsW,SAAU,WACV5X,eAAgB,kBAGlB/C,IAAAC,cAAA,UACEG,QAASA,IAAMP,OAAO6O,QACtBtM,MAAO,CACLuM,aAAc,OACdpK,OAAQ,UACRlC,MAAO,QACPoY,gBAAiB,OACjBxS,QAAS,YACTX,OAAQ,SAEX,SAIDtH,IAAAC,cAAA,QACEmC,MAAO,CACLwY,WAAY,OACZ3X,SAAU,OACV0X,SAAU,WACVE,KAAM,QAET,eACchB,GAGf7Z,IAAAC,cAAA,UACEG,QAASA,KAAMnB,EAAS,kBACxBmD,MAAO,CACLuM,aAAc,OACdpK,OAAQ,UACRlC,MAAO,QACPoY,gBAAiB,QACjBxS,QAAS,YACTX,OAAQ,SAEX,2BAKHtH,IAAAC,cAAA,SACEE,UAAU,QACViC,MAAO,CACLiC,MAAO,OACP0D,eAAgB,WAChBzD,UAAW,SAGbtE,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,wBAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,eAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAKLrC,IAAAC,cAAA,aACG6N,GACCA,EAAU3K,IAAK/B,GACbpB,IAAAC,cAAA,MAAIiI,IAAK9G,EAAKoD,KACZxE,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKyE,WAEX7F,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKqU,MAEXzV,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAIyZ,EAAUtY,EAAKoD,OAErBxE,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGV7G,EAAK0Z,mBACF,IAAIvN,KAAKnM,EAAK0Z,oBAAoBtN,qBAClC,OAENxN,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SAEX3D,MAAO,UAGTrE,IAAAC,cAAA,OAAKmC,MAAO,CAAE+F,UAAW,QAASC,UAAW,SAC1ChH,EAAKiH,aAAe,QAGzBrI,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,KACEE,UAAU,yBACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,2BA9YlBlF,WACnB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,qCACA,CACEP,MAEF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BA0XIkD,CAAa1D,EAAKoD,eC3jB1C,MAAQiB,OAAOsV,IAAIrV,IA4OJsV,OA1OMA,KAChB,MAAM7b,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MACzCU,EAAWC,eAChBic,EAAaC,GAAiB1X,mBAAS,KACxC2X,EAASC,GAAa5X,mBAAS,OAC/B6X,EAAYC,GAAgB9X,mBAAS,GAGnCnE,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAoBFM,oBAAU,KAlBeM,WACvB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,uCAAwC,CAClEC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB2Z,EAAgBla,EAAII,KAAKA,OAEzBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAIhB2Z,IACC,IAEH,MA6EFC,EAAY7b,UAChB2b,EAAe,GACfF,EAAY,OAGd,OACEpb,IAAAC,cAACrB,EAAM,KACHoB,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,oCAChHD,IAAAC,cAAA,OAAKmC,MAAO,CAACY,QAAQ,OAAOD,eAAe,gBAAgBD,WAAW,WAEtE9C,IAAAC,cAAA,UACGG,QAASA,IAAMP,OAAO6O,QACtBtM,MAAO,CACLuM,aAAc,OACdpK,OAAQ,UACRlC,MAAO,QACPoY,gBAAiB,OACjBxS,QAAS,YACTX,OAAQ,SAEX,SAIDtH,IAAAC,cAAA,QAAMmC,MAAO,CAACa,SAAS,SAAS,UAAO,IAAIsK,MAAOC,sBAElDxN,IAAAC,cAAA,UACEG,QAASA,KAAQP,OAAOgF,QAAQ,uCAjDflF,WACf,IACE,MAAMqB,QAAUC,IAAMC,KAAK,8BAA8B,GACzD,CACIwC,QAAS,CACLC,wBAAyBrE,aAAaG,QAAQ,cAIlDuB,EAAII,KAAKC,SACTE,IAAQF,QAAQL,EAAII,KAAKG,SACxB1B,OAAOC,SAASC,UAEjBwB,IAAQK,MAAMZ,EAAII,KAAKgG,SAG9B,MAAMxF,GACHF,QAAQC,IAAIC,GACdL,IAAQK,MAAM,0BA+BuD6Z,IACvErZ,MAAO,CACLuM,aAAc,OACdpK,OAAQ,UACRlC,MAAO,UACPoY,gBAAiB,UACjBxS,QAAS,YACTX,OAAQ,SAEX,gBAQFtH,IAAAC,cAAA,WAEDD,IAAAC,cAAA,SAAOqH,OAAO,IACbnH,UAAU,QACViC,MAAO,CACLiC,MAAO,OACP0D,eAAgB,WAChBzD,UAAW,SAEZtE,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAAA,UAAI,UAAW,MAGnBD,IAAAC,cAAA,aAEKgb,EAAaT,OAAO,EAAIS,EAAa9X,IAAK8I,GACzCjM,IAAAC,cAAA,MAAIiI,IAAK+D,EAAKzH,KACZxE,IAAAC,cAAA,UAAKgM,EAAKzH,KACVxE,IAAAC,cAAA,UAAKgM,EAAKyP,OACV1b,IAAAC,cAAA,UACED,IAAAC,cAAA,UACEG,QAASA,KACFP,OAAOgF,QAAQ,iBAlJblF,WACjB,IACI,MAAMqB,QAAUC,IAAMC,KAAK,kCAAkC,CACzD+K,QACF,CACEvI,QAAS,CACLC,wBAAyBrE,aAAaG,QAAQ,cAIlDuB,EAAII,KAAKC,SACTE,IAAQF,QAAQL,EAAII,KAAKG,SACxB1B,OAAOC,SAASC,UAEjBwB,IAAQK,MAAMZ,EAAII,KAAKgG,SAG9B,MAAMxF,GACHF,QAAQC,IAAIC,GACdL,IAAQK,MAAM,0BAgIAkD,CAAamH,EAAKzH,MAI1BpC,MAAO,CACLuZ,WAAY,OACZrU,OAAQ,OACR/C,OAAQ,UACRtB,SAAU,SAEb,UAIDjD,IAAAC,cAAA,UACEG,QAASA,IAAMgb,EAAYnP,EAAKzH,KAChCpC,MAAO,CAAEuZ,WAAY,OAAQrU,OAAQ,OAAQ/C,OAAQ,UAAWtB,SAAU,OAAQ6E,WAAY,SAC/F,gBAGAqT,IAAWlP,EAAKzH,KACfxE,IAAAC,cAAA,OAAKmC,MAAO,CAACY,QAAQ,OAAOF,WAAW,SAAS8Y,IAAI,SAClD5b,IAAAC,cAAA,SAAO+B,KAAK,SAAS6Z,IAAK,EAAGC,IAAK7P,EAAKyP,MAAOhU,MAAO2T,EAAa5T,SAAWsU,GAAIT,EAAeU,OAAOD,EAAEE,OAAOvU,UAChH1H,IAAAC,cAAA,UAAQG,QAASA,KAnJHT,WACxB,IACI,MAAMqB,QAAUC,IAAMC,KAAK,iCAAiC,CACxD+K,KAAKA,EACLyP,MAAML,GACR,CACE3X,QAAS,CACLC,wBAAyBrE,aAAaG,QAAQ,cAItD,GAAIuB,EAAII,KAAKC,QAAS,CAClBE,IAAQF,QAAQL,EAAII,KAAKG,SACzB,IAAIH,EAAK6Z,EAAa9X,IAAK8I,GACzBA,EAAKzH,MAAM2W,EAAS,IAAIlP,EAAKyP,MAAMzP,EAAKyP,MAAML,GAAapP,GAC3DkC,OAAOlC,GAAMA,EAAKyP,MAAM,GAC1BR,EAAgB9Z,GAChBka,EAAe,GACfF,EAAY,WAGZ7Z,IAAQK,MAAMZ,EAAII,KAAKgG,SAG9B,MAAMxF,GACHF,QAAQC,IAAIC,GACdL,IAAQK,MAAM,uBACd/B,OAAOC,SAASC,WAwHcmc,CAAoBjQ,EAAKzH,MAAOpC,MAAO,CAACkF,OAAO,OAAOqH,aAAa,MAAMtM,MAAM,QAAQoY,gBAAgB,QAAQlW,OAAO,UAAU0D,QAAQ,YAAY,UAC1KjI,IAAAC,cAAA,UAAQG,QAASob,EAAcpZ,MAAO,CAACkF,OAAO,OAAOqH,aAAa,MAAMtM,MAAM,UAAUoY,gBAAgB,UAAUlW,OAAO,UAAU0D,QAAQ,YAAY,YASjKjI,IAAAC,cAAA,UACID,IAAAC,cAAA,MAAIkc,QAAS,EAAG/Z,MAAO,CAAC4F,UAAU,SAAS4S,WAAW,SAAS,2BClO/E,MAAQnV,OAAO2W,IAAI1W,IAugBJ2W,OArgBEA,KACf,MAAMpd,EAASC,cACTC,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MAC1CU,EAAWC,eACVwa,EAAUC,GAAejW,mBAAS,KAClCwL,EAAaC,GAAkBzL,mBAAS,KACxCF,EAAWC,GAAgBC,mBAAS,KACpCkG,EAAUC,GAAenG,mBAAS,KAClCiN,EAAYC,GAAiBlN,mBAAS,KACtCkW,EAAWC,GAAgBnW,mBAAS,KACpCsK,EAAW8L,GAAgBpW,mBAAS,KACpCyI,EAAM1M,GAAWiE,mBAAS,QAC1BqW,EAAYC,GAAiBtW,sBAC7BuW,EAAYC,GAAiBxW,sBAC9ByW,EAAWC,GAAe1W,mBAAS,IAGzCnE,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAoBJM,oBAAU,KAlBaM,WACrB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,uCAAwC,CAClEC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzBkY,EAAYzY,EAAII,KAAKA,OAErBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAIhBuY,IACC,IAiBH9a,oBAAU,KAfYM,WACpB,MAAMqB,QAAYC,IAAMwC,IAAI,qCAAsC,CAChEC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACX4N,EAAejO,EAAII,KAAKA,MACxBG,IAAQF,QAAQ,qBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAKzB2N,IACC,IAgBH7P,oBAAU,KAdUM,WAClB,MAAMqB,QAAYC,IAAMwC,IAAI,2BAA4B,CACtDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXkC,EAAavC,EAAII,KAAKA,MACtBG,IAAQF,QAAQ,oBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAIzBqC,IACC,IAgBHvE,oBAAU,KAfSM,WACjB,MAAMqB,QAAYC,IAAMwC,IAAI,8BAA+B,CACzDC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXsI,EAAY3I,EAAII,KAAKA,MACrBG,IAAQF,QAAQ,iBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAKzB8F,IACC,IAgBHhI,oBAAU,KAfWM,WACnB,MAAMqB,QAAYC,IAAMwC,IAAI,mCAAoC,CAC9DC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAI9CuB,EAAII,KAAKC,SACXqP,EAAc1P,EAAII,KAAKA,MACvBG,IAAQF,QAAQ,mBAEhBE,IAAQK,MAAMZ,EAAII,KAAKG,UAKzBoP,IACC,IAEH,MAUMC,EAAWjR,MAAOya,EAAQC,KAC9B,MAAMtK,EAAWf,EACXxE,EAAOd,EACPxD,EAAU5C,EACV+T,EAAS5G,EACf,GAAiB,YAAb4J,GACF,IAAK,IAAIjZ,KAAQ2O,EACf,GAAI3O,EAAKoD,MAAQ4V,EACf,OAAOhZ,EAAK+N,iBAGX,GAAiB,UAAbkL,GACT,IAAK,IAAIjZ,KAAQ8E,EACf,GAAI9E,EAAKoD,MAAQ4V,EACf,OAAOhZ,EAAKqD,eAGX,GAAiB,QAAb4V,GACT,IAAK,IAAIjZ,KAAQoJ,EACf,GAAIpJ,EAAKoD,MAAQ4V,EACf,OAAOhZ,EAAKwI,aAGX,GAAiB,WAAbyQ,EACT,IAAK,IAAIjZ,KAAQiW,EACf,GAAIjW,EAAKoD,MAAQ4V,EACf,OAAOhZ,EAAKwP,UAKpBvR,oBAAU,KAzCSM,WACjB,MAAM+Z,EAAY,GAEZY,EAAcd,EACpB,IAAK,IAAIpY,KAAQkZ,EACfZ,EAAUtY,EAAKoD,WAAaoM,EAASxP,EAAKgZ,OAAQhZ,EAAKiZ,UAEzDV,EAAaD,IAmCba,IACC,CAACf,EAAUxK,EAAa1L,EAAWoG,EAAU+G,IA2BhDpR,oBAAU,KACR,IAAIgO,EACJ,GAAa,QAATpB,EACFoB,EAAamM,OACR,GAAa,UAATvN,EAAkB,CAC3B,MAAMiC,EAAc,CAClB,YAAa,UAAW,UAAW,aAAc,aACvD,UAAW,SAAU,SAAU,kBAAmB,UAClD,YAAa,MAAO,iBAAkB,cAAe,kBACrD,gBAAiB,YAAa,cAAe,kBAC7C,gBAAiB,0BAA2B,gBAC5C,kBAAmB,mBAAoB,OAAQ,cAC/C,qBAAsB,yBAA0B,UAAW,SAC3D,SAAU,SAAU,aAAc,sBAAuB,aACzD,SAAU,kBAAmB,UAAW,aAAc,SACtD,aAAc,cAAe,QAAS,aAAc,eACpD,eAAgB,iBAEZb,EAAamM,EAASrL,OACnB/M,IAAU8M,EAAYE,SAAShN,EAAKyE,gBAGvCwH,EAAamM,EAASrL,OAAQ/M,GAASA,EAAKyE,WAAaoG,GAE3D2N,EAAavM,GACbyM,EAAczM,EAAWmN,SACxB,CAACvO,EAAMuN,IAOTna,oBAAU,KACT,MAAMwU,EAAY,IAAI,IAAIzG,IAAIoM,EAASrW,IAAI/B,GAAMA,EAAKyE,YACtDqU,EAAcrG,IACV,CAAC2F,IAmCP,OACExZ,IAAAC,cAACrB,EAAM,KACLoB,IAAAC,cAAA,OACEmC,MAAO,CACLU,WAAY,SACZC,eAAgB,SAChBC,QAAS,OACTC,SAAU,OACVC,WAAY,SAGdlD,IAAAC,cAAA,SAAG,wBAELD,IAAAC,cAAA,OACEE,UAAU,yDACViC,MAAO,CAAEiC,MAAO,SAEhBrE,IAAAC,cAAA,YAAM,kBACND,IAAAC,cAACyF,IAAM,CACLtB,YAAY,iBACZqD,SA/DYC,IAClBnI,EAAQmI,IA+DFtF,MAAO,CAAEiC,MAAO,UAEf,CACC,MACA,QACA,YAAa,UAAW,UAAW,aAAc,aACjD,UAAW,SAAU,SAAU,kBAAmB,UAClD,YAAa,MAAO,iBAAkB,cAAe,kBACrD,gBAAiB,YAAa,cAAe,kBAC7C,gBAAiB,0BAA2B,gBAC5C,kBAAmB,mBAAoB,OAAQ,cAC/C,qBAAsB,yBAA0B,UAAW,SAC3D,SAAU,SAAU,aAAc,sBAAuB,aACzD,SAAU,kBAAmB,UAAW,aAAc,SACtD,aAAc,cAAe,QAAS,aAAc,eACpD,eAAgB,iBAChBlB,IAAK/B,GACLpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAG1BpB,IAAAC,cAAA,YAAM,qBACND,IAAAC,cAACyF,IAAM,CACLtB,YAAY,iBACZqD,SA5EkBC,IACxBsS,EAActS,IA4ERtF,MAAO,CAAEiC,MAAO,UAEdrE,IAAAC,cAACwF,GAAM,CAACiC,MAAM,OAAM,OACtBuS,EAAW9W,IAAK/B,GACdpB,IAAAC,cAACwF,GAAM,CAACiC,MAAOtG,GAAOA,KAI1BpB,IAAAC,cAAA,UACEmC,MAAO,CACLuM,aAAc,OACdpK,OAAQ,UACRlC,MAAO,QACPoY,gBAAiB,MACjBxS,QAAS,WAEX7H,QAASA,KAAQP,OAAOgF,QAAQ,4BAxFrBlF,WACjB,IAEE,MAAMqB,QAAYC,IAAMC,KACtB,kCACA,CACE+K,KAAM8N,GAER,CACErW,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAKhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAiEkD8Y,KAG7D,WAIH1a,IAAAC,cAAA,OACEmC,MAAO,CACLY,QAAS,OACTF,WAAY,SACZuB,MAAO,OACPsW,SAAU,WACV5X,eAAgB,kBAGlB/C,IAAAC,cAAA,UACEG,QAASA,IAAMP,OAAO6O,QACtBtM,MAAO,CACLuM,aAAc,OACdpK,OAAQ,UACRlC,MAAO,QACPoY,gBAAiB,OACjBxS,QAAS,YACTX,OAAQ,SAEX,SAIDtH,IAAAC,cAAA,QACEmC,MAAO,CACLwY,WAAY,OACZ3X,SAAU,OACV0X,SAAU,WACVE,KAAM,QAET,eACchB,GAGf7Z,IAAAC,cAAA,UACEG,QAASA,KAAMnB,EAAS,sBACxBmD,MAAO,CACLuM,aAAc,OACdpK,OAAQ,UACRlC,MAAO,QACPoY,gBAAiB,QACjBxS,QAAS,YACTX,OAAQ,SAEX,2BAKHtH,IAAAC,cAAA,SACEE,UAAU,QACViC,MAAO,CACLiC,MAAO,OACP0D,eAAgB,WAChBzD,UAAW,SAGbtE,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAIDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,wBAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,eAGDrC,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,OACT5F,MAAO,QAEV,aAKLrC,IAAAC,cAAA,aACG6N,GACCA,EAAU3K,IAAK/B,GACbpB,IAAAC,cAAA,MAAIiI,IAAK9G,EAAKoD,KACZxE,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAImB,EAAKyE,WAGX7F,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,SAAIyZ,EAAUtY,EAAKoD,OAErBxE,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGV7G,EAAK0Z,mBACF,IAAIvN,KAAKnM,EAAK0Z,oBAAoBtN,qBAClC,OAENxN,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SAEX3D,MAAO,UAGTrE,IAAAC,cAAA,OAAKmC,MAAO,CAAE+F,UAAW,QAASC,UAAW,SAC1ChH,EAAKiH,aAAe,QAGzBrI,IAAAC,cAAA,MACEmC,MAAO,CACLkF,OAAQ,kBACRU,UAAW,SACXC,QAAS,SAGXjI,IAAAC,cAAA,KACEE,UAAU,yBACViC,MAAO,CAAEmC,OAAQ,UAAWjC,OAAQ,QACpClC,QAASA,KACHP,OAAOgF,QAAQ,2BA7UlBlF,WACnB,IACE,MAAMqB,QAAYC,IAAMC,KACtB,yCACA,CACEP,MAEF,CACE+C,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAIhDuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB1B,OAAOC,SAASC,UAEhBwB,IAAQK,MAAMZ,EAAII,KAAKG,SAEzB,MAAOK,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAyTIkD,CAAa1D,EAAKoD,eC1f1C,MAAQiB,OAAO6W,IAAI5W,IA4OJ6W,OA1OUA,KACpB,MAAMpd,EAAQC,YAAasB,GAAUA,EAAMrC,KAAKA,MACzCU,EAAWC,eAChBic,EAAaC,GAAiB1X,mBAAS,KACxC2X,EAASC,GAAa5X,mBAAS,OAC/B6X,EAAYC,GAAgB9X,mBAAS,GAGnCnE,oBAAU,KACM,UAAVF,GAA+B,WAAVA,GACvBG,aAAaC,QAAQ,OAAQJ,IAE9B,CAACA,IAEJE,oBAAU,KACR,MAAMG,EAAYF,aAAaG,QAAQ,QACnCD,GAAaA,IAAcL,GAC7BJ,EAASR,EAAQiB,KAElB,CAACT,IAoBFM,oBAAU,KAlBeM,WACvB,IACE,MAAMqB,QAAYC,IAAMwC,IAAI,2CAA4C,CACtEC,QAAS,CACPC,wBAAyBrE,aAAaG,QAAQ,cAG9CuB,EAAII,KAAKC,SACXE,IAAQF,QAAQL,EAAII,KAAKG,SACzB2Z,EAAgBla,EAAII,KAAKA,OAEzBG,IAAQK,MAAMZ,EAAII,KAAKgG,SAEzB,MAAOxF,GACPF,QAAQC,IAAIC,GACZL,IAAQK,MAAM,0BAIhB2Z,IACC,IAEH,MA6EFC,EAAY7b,UAChB2b,EAAe,GACfF,EAAY,OAGd,OACEpb,IAAAC,cAACrB,EAAM,KACHoB,IAAAC,cAAA,OAAKmC,MAAO,CAACU,WAAW,SAASC,eAAe,SAASC,QAAQ,OAAOC,SAAS,OAAOC,WAAW,SAASlD,IAAAC,cAAA,SAAG,gCAChHD,IAAAC,cAAA,OAAKmC,MAAO,CAACY,QAAQ,OAAOD,eAAe,gBAAgBD,WAAW,WAEtE9C,IAAAC,cAAA,UACGG,QAASA,IAAMP,OAAO6O,QACtBtM,MAAO,CACLuM,aAAc,OACdpK,OAAQ,UACRlC,MAAO,QACPoY,gBAAiB,OACjBxS,QAAS,YACTX,OAAQ,SAEX,SAIDtH,IAAAC,cAAA,QAAMmC,MAAO,CAACa,SAAS,SAAS,UAAO,IAAIsK,MAAOC,sBAElDxN,IAAAC,cAAA,UACEG,QAASA,KAAQP,OAAOgF,QAAQ,uCAjDflF,WACf,IACE,MAAMqB,QAAUC,IAAMC,KAAK,kCAAkC,GAC7D,CACIwC,QAAS,CACLC,wBAAyBrE,aAAaG,QAAQ,cAIlDuB,EAAII,KAAKC,SACTE,IAAQF,QAAQL,EAAII,KAAKG,SACxB1B,OAAOC,SAASC,UAEjBwB,IAAQK,MAAMZ,EAAII,KAAKgG,SAG9B,MAAMxF,GACHF,QAAQC,IAAIC,GACdL,IAAQK,MAAM,0BA+BuD6Z,IACvErZ,MAAO,CACLuM,aAAc,OACdpK,OAAQ,UACRlC,MAAO,UACPoY,gBAAiB,UACjBxS,QAAS,YACTX,OAAQ,SAEX,gBAQFtH,IAAAC,cAAA,WAEDD,IAAAC,cAAA,SAAOqH,OAAO,IACbnH,UAAU,QACViC,MAAO,CACLiC,MAAO,OACP0D,eAAgB,WAChBzD,UAAW,SAEZtE,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAAA,UAAI,UAAW,MAGnBD,IAAAC,cAAA,aAEKgb,EAAaT,OAAO,EAAIS,EAAa9X,IAAK8I,GACzCjM,IAAAC,cAAA,MAAIiI,IAAK+D,EAAKzH,KACZxE,IAAAC,cAAA,UAAKgM,EAAKzH,KACVxE,IAAAC,cAAA,UAAKgM,EAAKyP,OACV1b,IAAAC,cAAA,UACED,IAAAC,cAAA,UACEG,QAASA,KACFP,OAAOgF,QAAQ,iBAlJblF,WACjB,IACI,MAAMqB,QAAUC,IAAMC,KAAK,sCAAsC,CAC7D+K,QACF,CACEvI,QAAS,CACLC,wBAAyBrE,aAAaG,QAAQ,cAIlDuB,EAAII,KAAKC,SACTE,IAAQF,QAAQL,EAAII,KAAKG,SACxB1B,OAAOC,SAASC,UAEjBwB,IAAQK,MAAMZ,EAAII,KAAKgG,SAG9B,MAAMxF,GACHF,QAAQC,IAAIC,GACdL,IAAQK,MAAM,0BAgIAkD,CAAamH,EAAKzH,MAI1BpC,MAAO,CACLuZ,WAAY,OACZrU,OAAQ,OACR/C,OAAQ,UACRtB,SAAU,SAEb,UAIDjD,IAAAC,cAAA,UACEG,QAASA,IAAMgb,EAAYnP,EAAKzH,KAChCpC,MAAO,CAAEuZ,WAAY,OAAQrU,OAAQ,OAAQ/C,OAAQ,UAAWtB,SAAU,OAAQ6E,WAAY,SAC/F,gBAGAqT,IAAWlP,EAAKzH,KACfxE,IAAAC,cAAA,OAAKmC,MAAO,CAACY,QAAQ,OAAOF,WAAW,SAAS8Y,IAAI,SAClD5b,IAAAC,cAAA,SAAO+B,KAAK,SAAS6Z,IAAK,EAAGC,IAAK7P,EAAKyP,MAAOhU,MAAO2T,EAAa5T,SAAWsU,GAAIT,EAAeU,OAAOD,EAAEE,OAAOvU,UAChH1H,IAAAC,cAAA,UAAQG,QAASA,KAnJHT,WACxB,IACI,MAAMqB,QAAUC,IAAMC,KAAK,qCAAqC,CAC5D+K,KAAKA,EACLyP,MAAML,GACR,CACE3X,QAAS,CACLC,wBAAyBrE,aAAaG,QAAQ,cAItD,GAAIuB,EAAII,KAAKC,QAAS,CAClBE,IAAQF,QAAQL,EAAII,KAAKG,SACzB,IAAIH,EAAK6Z,EAAa9X,IAAK8I,GACzBA,EAAKzH,MAAM2W,EAAS,IAAIlP,EAAKyP,MAAMzP,EAAKyP,MAAML,GAAapP,GAC3DkC,OAAOlC,GAAMA,EAAKyP,MAAM,GAC1BR,EAAgB9Z,GAChBka,EAAe,GACfF,EAAY,WAGZ7Z,IAAQK,MAAMZ,EAAII,KAAKgG,SAG9B,MAAMxF,GACHF,QAAQC,IAAIC,GACdL,IAAQK,MAAM,uBACd/B,OAAOC,SAASC,WAwHcmc,CAAoBjQ,EAAKzH,MAAOpC,MAAO,CAACkF,OAAO,OAAOqH,aAAa,MAAMtM,MAAM,QAAQoY,gBAAgB,QAAQlW,OAAO,UAAU0D,QAAQ,YAAY,UAC1KjI,IAAAC,cAAA,UAAQG,QAASob,EAAcpZ,MAAO,CAACkF,OAAO,OAAOqH,aAAa,MAAMtM,MAAM,UAAUoY,gBAAgB,UAAUlW,OAAO,UAAU0D,QAAQ,YAAY,YASjKjI,IAAAC,cAAA,UACID,IAAAC,cAAA,MAAIkc,QAAS,EAAG/Z,MAAO,CAAC4F,UAAU,SAAS4S,WAAW,SAAS,2BC6QhE4B,OA5bf,WACE,MAAMlc,QAAEA,GAAYlB,YAAaZ,GAAUA,EAAMie,QAEjD,OACEzc,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAACyc,IAAa,KACXpc,EACCN,IAAAC,cAACsF,EAAO,MAERvF,IAAAC,cAAC0c,IAAM,KACL3c,IAAAC,cAAC2c,IAAK,CACJja,KAAK,IACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACQ,EAAQ,SAIfT,IAAAC,cAAC2c,IAAK,CACJja,KAAK,SACLka,QACE7c,IAAAC,cAACyC,EAAW,KACV1C,IAAAC,cAACW,EAAK,SAIZZ,IAAAC,cAAC2c,IAAK,CACJja,KAAK,YACLka,QACE7c,IAAAC,cAACyC,EAAW,KACV1C,IAAAC,cAACsC,EAAQ,SAIfvC,IAAAC,cAAC2c,IAAK,CACJja,KAAK,QACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC4C,EAAQ,SAIf7C,IAAAC,cAAC2c,IAAK,CACJja,KAAK,SACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACoD,EAAS,SAIhBrD,IAAAC,cAAC2c,IAAK,CACJja,KAAK,sBACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC8E,EAAS,SAIhB/E,IAAAC,cAAC2c,IAAK,CACJja,KAAK,yBACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC4V,GAAY,SAInB7V,IAAAC,cAAC2c,IAAK,CACJja,KAAK,yBACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACuF,EAAW,SAIlBxF,IAAAC,cAAC2c,IAAK,CACJja,KAAK,4BACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC8V,GAAe,SAItB/V,IAAAC,cAAC2c,IAAK,CACJja,KAAK,kCACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC+I,EAAe,SAItBhJ,IAAAC,cAAC2c,IAAK,CACJja,KAAK,qCACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACiW,GAAkB,SAIzBlW,IAAAC,cAAC2c,IAAK,CACJja,KAAK,OACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACwJ,EAAO,SAIdzJ,IAAAC,cAAC2c,IAAK,CACJja,KAAK,QACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACoW,GAAW,SAIlBrW,IAAAC,cAAC2c,IAAK,CACJja,KAAK,kBACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC6J,EAAO,SAId9J,IAAAC,cAAC2c,IAAK,CACJja,KAAK,qBACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACqW,GAAU,SAIjBtW,IAAAC,cAAC2c,IAAK,CACJja,KAAK,qBACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACmK,EAAS,SAIhBpK,IAAAC,cAAC2c,IAAK,CACJja,KAAK,wBACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACuW,GAAa,SAIpBxW,IAAAC,cAAC2c,IAAK,CACJja,KAAK,WACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC2K,EAAO,SAId5K,IAAAC,cAAC2c,IAAK,CACJja,KAAK,8BACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC6K,EAAa,SAIpB9K,IAAAC,cAAC2c,IAAK,CACJja,KAAK,iCACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC0W,GAAgB,SAIvB3W,IAAAC,cAAC2c,IAAK,CACJja,KAAK,WACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACoL,EAAO,SAIdrL,IAAAC,cAAC2c,IAAK,CACJja,KAAK,UACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACsL,EAAM,SAIbvL,IAAAC,cAAC2c,IAAK,CACJja,KAAK,WACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC8O,EAAW,SAIlB/O,IAAAC,cAAC2c,IAAK,CACJja,KAAK,0BACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACoP,GAAW,SAIlBrP,IAAAC,cAAC2c,IAAK,CACJja,KAAK,6BACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACmV,GAAc,SAIrBpV,IAAAC,cAAC2c,IAAK,CACJja,KAAK,6BACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC0P,GAAa,SAIpB3P,IAAAC,cAAC2c,IAAK,CACJja,KAAK,iCACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACqV,GAAiB,SAIxBtV,IAAAC,cAAC2c,IAAK,CACJja,KAAK,UACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACuQ,GAAU,SAIjBxQ,IAAAC,cAAC2c,IAAK,CACJja,KAAK,WACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC8W,GAAc,SAIrB/W,IAAAC,cAAC2c,IAAK,CACJja,KAAK,sCACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACiQ,GAAiB,SAIxBlQ,IAAAC,cAAC2c,IAAK,CACJja,KAAK,yCACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC0V,GAAoB,SAI3B3V,IAAAC,cAAC2c,IAAK,CACJja,KAAK,4BACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC4Q,GAAU,SAIjB7Q,IAAAC,cAAC2c,IAAK,CACJja,KAAK,+BACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC+W,GAAa,SAIpBhX,IAAAC,cAAC2c,IAAK,CACJja,KAAK,+BACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACkR,GAAY,SAInBnR,IAAAC,cAAC2c,IAAK,CACJja,KAAK,kCACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACiX,GAAe,SAItBlX,IAAAC,cAAC2c,IAAK,CACJja,KAAK,oCACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC+R,GAAgB,SAIvBhS,IAAAC,cAAC2c,IAAK,CACJja,KAAK,uCACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC6c,GAAoB,SAI3B9c,IAAAC,cAAC2c,IAAK,CACJja,KAAK,YACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACqS,GAAQ,SAIftS,IAAAC,cAAC2c,IAAK,CACJja,KAAK,cACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACqT,GAAU,SAIjBtT,IAAAC,cAAC2c,IAAK,CACJja,KAAK,gBACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACyX,GAAU,SAIjB1X,IAAAC,cAAC2c,IAAK,CACJja,KAAK,eACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC2X,GAAa,SAIpB5X,IAAAC,cAAC2c,IAAK,CACJja,KAAK,aACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC8X,GAAW,SAIlB/X,IAAAC,cAAC2c,IAAK,CACJja,KAAK,WACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACgY,GAAS,SAIhBjY,IAAAC,cAAC2c,IAAK,CACJja,KAAK,cACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACkY,GAAY,SAInBnY,IAAAC,cAAC2c,IAAK,CACJja,KAAK,aACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACiU,GAAS,SAIhBlU,IAAAC,cAAC2c,IAAK,CACJja,KAAK,YACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACiV,GAAW,SAIlBlV,IAAAC,cAAC2c,IAAK,CACJja,KAAK,YACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACkV,GAAe,SAItBnV,IAAAC,cAAC2c,IAAK,CACJja,KAAK,UACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAAC2V,GAAa,SAIpB5V,IAAAC,cAAC2c,IAAK,CACJja,KAAK,YACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACmY,GAAQ,SAKfpY,IAAAC,cAAC2c,IAAK,CACJja,KAAK,SACLka,QACE7c,IAAAC,cAACuC,EAAc,KACbxC,IAAAC,cAACsZ,GAAW,SAIlBvZ,IAAAC,cAAC2c,IAAK,CACJja,KAAK,QACLka,QACE7c,IAAAC,cAACuC,EAAc,KACfxC,IAAAC,cAACoc,GAAQ,SAKbrc,IAAAC,cAAC2c,IAAK,CACJja,KAAK,gBACLka,QACE7c,IAAAC,cAACuC,EAAc,KACjBxC,IAAAC,cAAC+a,GAAY,SAKdhb,IAAAC,cAAC2c,IAAK,CACLja,KAAK,oBACLka,QACE7c,IAAAC,cAACuC,EAAc,KACpBxC,IAAAC,cAACsc,GAAgB,aCnebQ,OAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAnB,EAAA,GAAAoB,KAAAD,EAAAE,KAAA,WAAqBD,KAAKte,IAAiD,IAAhDwe,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAS5e,EACpEwe,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCHP,MAAMU,GAAQC,YAAe,CAClCC,QAAS,CACPnB,OAAQpc,EAAWud,QACnBvf,KAAKJ,EAAU2f,WCCNC,IAASC,WAAWC,SAASC,eAAe,SACpDpF,OACH5Y,IAAAC,cAACge,IAAQ,CAACP,MAAOA,IACf1d,IAAAC,cAACD,IAAMke,WAAU,KACfle,IAAAC,cAACuc,GAAG,SAQVO","file":"static/js/main.7ac6841b.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const roleslice=createSlice({\r\nname:\"role\",\r\ninitialState:{\r\nrole:\"null\"\r\n},\r\nreducers:{\r\n    setRole:(state,action)=>{\r\n        state.role=action.payload\r\n    }\r\n}\r\n\r\n});\r\n\r\nexport const{setRole}=roleslice.actions;","import React,{useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/Homepagestyles.css\";\r\n \r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../redux/features/roleslice\";\r\n\r\n\r\nconst Layout = ({ children }) => {\r\n \r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n    const roles=useSelector(state=>state.role.role);\r\n    \r\n         useEffect(() => {\r\n            if (roles === \"admin\" || roles === \"editor\") {\r\n              localStorage.setItem(\"role\", roles);\r\n            }\r\n          }, [roles]);\r\n        \r\n          useEffect(() => {\r\n            const savedRole = localStorage.getItem(\"role\");\r\n            if (savedRole && savedRole !== roles) {\r\n              dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n            }\r\n          }, [dispatch]);\r\n\r\n  const handlelogout = async () => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      localStorage.clear();\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <>\r\n  {roles === \"admin\" ? (\r\n     <div className=\"logout\">\r\n      <button className=\"btn btn-primary\" onClick={() => navigate(\"/\")}>\r\n        HOME\r\n      </button>\r\n      <button className=\"btn btn-primary\" onClick={() => navigate(\"/tech\")}>\r\n        TECHNICAL\r\n      </button>\r\n      <button className=\"btn btn-primary\" onClick={() => navigate(\"/non-tech\")}>\r\n        NON-TECHNICAL\r\n      </button>\r\n      <button className=\"btn btn-primary\" onClick={() => navigate(\"/userlist\")}>\r\n        USER LIST\r\n      </button>\r\n      <button className=\"btn btn-danger\" onClick={handlelogout}>\r\n        LOGOUT\r\n      </button>\r\n      </div>\r\n  \r\n  ) : (\r\n    <div className=\"logout\">\r\n      <button className=\"btn btn-primary\" onClick={() => navigate(\"/\")}>\r\n        HOME\r\n      </button>\r\n      <button className=\"btn btn-primary\" onClick={() => navigate(\"/tech\")}>\r\n        TECHNICAL\r\n      </button>\r\n      <button className=\"btn btn-primary\" onClick={() => navigate(\"/non-tech\")}>\r\n        NON-TECHNICAL\r\n      </button>\r\n      <button className=\"btn btn-danger\" onClick={handlelogout}>\r\n        LOGOUT\r\n      </button>\r\n    </div>\r\n  )}\r\n  \r\n  {children}\r\n</>\r\n\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const alertslice = createSlice({\r\n  name: \"alerts\",\r\n  initialState: {\r\n    loading: false,\r\n  },\r\n  reducers: {\r\n    showloading: (state) => {\r\n      state.loading = true;\r\n    },\r\n    hideloading: (state) => {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { showloading, hideloading } = alertslice.actions;\r\n","import React, { useEffect } from \"react\";\r\nimport \"../styles/Homepagestyles.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Layout from \"../components/Layout\";\r\nimport { showloading, hideloading } from \"../redux/features/alertslice\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { setRole } from \"../redux/features/roleslice\";\r\n\r\nconst Homepage = () => {\r\n    const roles = useSelector((State) => State.role.role);\r\n \r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n    \r\n    useEffect(()=>{\r\nif(roles===\"viewer\"){\r\n  navigate(\"/summary\")\r\n}\r\n    },[roles,navigate])\r\n\r\n\r\n      useEffect(() => {\r\n        if (roles === \"admin\" || roles === \"editor\") {\r\n          localStorage.setItem(\"role\", roles);\r\n        }\r\n      }, [roles]);\r\n    \r\n      useEffect(() => {\r\n        const savedRole = localStorage.getItem(\"role\");\r\n        if (savedRole && savedRole !== roles) {\r\n          dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n        }\r\n      }, [dispatch]);\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div className=\"container\"> \r\n          <div className=\"d-flex\">\r\n            <div\r\n             className=\"box\"\r\n              id=\"technical\"\r\n              onClick={() => {\r\n                \r\n                navigate(\"/tech\");\r\n                 \r\n              }}\r\n            >\r\n              <b>TECHNICAL</b>\r\n            </div>\r\n            <div\r\n             className=\"box\"\r\n              id=\"non-technical\"\r\n              onClick={() => {\r\n                navigate(\"/non-tech\");\r\n              }}\r\n            >\r\n              <b>NON-TECHNICAL</b>\r\n            </div>\r\n            <div\r\n            className=\"box\"\r\n              id=\"summary\"\r\n              onClick={() => {\r\n                \r\n                navigate(\"/summary\");\r\n                 \r\n              }}\r\n            >\r\n              <b>SUMMARY</b>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React,{useEffect}from \"react\";\r\nimport { Form, Input, message } from \"antd\";\r\nimport \"../styles/Registerstyles.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\n//import { useDispatch, useSelector } from \"react-redux\";\r\nimport { showloading, hideloading } from \"../redux/features/alertslice\";\r\nimport {setRole} from \"../redux/features/roleslice\";\r\nimport { red } from \"colors\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  \r\n  const onFinishHandler = async (values) => {\r\n    //console.log(values);\r\n    try {\r\n      dispatch(showloading());\r\n      const res = await axios.post(\"/api/v1/admin/login\", values);\r\n      // window.location.reload();\r\n      dispatch(hideloading());\r\n      if (res.data.success) {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        message.success(res.data.message);\r\n        const userRole=res.data.admin.role;\r\n        dispatch(setRole(userRole));\r\nconsole.log(userRole);\r\nnavigate(\"/\");\r\n        \r\n      \r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(hideloading());\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n \r\n   \r\n  return (\r\n    <>\r\n      <div className=\"form-container\">\r\n        <Form\r\n          layout=\"vertical\"\r\n          onFinish={onFinishHandler}\r\n          className=\"register-form\"\r\n        >\r\n          <h3 className=\"text-center\">LOGIN</h3>\r\n\r\n          <Form.Item label=\"Email\" name=\"email\">\r\n            <Input type=\"email\" required />\r\n          </Form.Item>\r\n          <Form.Item label=\"Password\" name=\"password\">\r\n            <Input type=\"password\" required />\r\n          </Form.Item>\r\n          <Link to=\"/register\" className=\"m-2\">\r\n            Not A User Register Here\r\n          </Link>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Login\r\n          </button>\r\n          <div style={{color:\"#B2BEB5\"}}>\r\n            To see Admin Features,use: \r\n            <p style={{margin:'0px'}}>id:admin@gmail.com </p> \r\n            <p style={{margin:'0px'}}> password:admin </p> \r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Form, Input, message } from \"antd\";\r\nimport \"../styles/Registerstyles.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showloading, hideloading } from \"../redux/features/alertslice\";\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const onFinishHandler = async (values) => {\r\n    //console.log(values);\r\n    try {\r\n      dispatch(showloading());\r\n      const res = await axios.post(\"/api/v1/admin/register\", values);\r\n      dispatch(hideloading());\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        navigate(\"/login\");\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      dispatch(hideloading());\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"form-container\">\r\n        <Form\r\n          layout=\"vertical\"\r\n          onFinish={onFinishHandler}\r\n          className=\"register-form\"\r\n        >\r\n          <h3 className=\"text-center\">REGISTRATION</h3>\r\n          <Form.Item label=\"Name\" name=\"name\">\r\n            <Input type=\"text\" required />\r\n          </Form.Item>\r\n          <Form.Item label=\"Email\" name=\"email\">\r\n            <Input type=\"email\" required />\r\n          </Form.Item>\r\n          <Form.Item label=\"Password\" name=\"password\">\r\n            <Input type=\"password\" required />\r\n          </Form.Item>\r\n          <Link to=\"/login\" className=\"m-2\">\r\n            Already User Login Here\r\n          </Link>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Register\r\n          </button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const ProtectedRoute = ({ children }) => {\r\n  const roles = useSelector(state => state.role.role);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (token) {\r\n    return  children;  \r\n  }else{\r\n    return <Navigate to=\"/login\"/>\r\n  }\r\n\r\n  \r\n\r\n  \r\n};\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nexport const PublicRoute = ({ children }) => {\r\n  if (localStorage.getItem(\"token\")) {\r\n    return <Navigate to=\"/\" />;\r\n  } else {\r\n    return children;\r\n  }\r\n};\r\n","import React,{useEffect}from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Teacher\",\r\n    path: \"/teacher\",\r\n    icon: \"fa-solid fa-chalkboard-user\",\r\n  },\r\n  {\r\n    name: \"Class\",\r\n    path: \"/class\",\r\n    icon: \"fa-solid fa-house\",\r\n  },\r\n  {\r\n    name: \"Lab\",\r\n    path: \"/lab\",\r\n    icon: \"fa-solid fa-computer\",\r\n  },\r\n  {\r\n    name: \"Server\",\r\n    path: \"/server\",\r\n    icon: \"fa-solid fa-server\",\r\n  },\r\n  {\r\n    name: \"Dump\",\r\n    path: \"/dump\",\r\n    icon: \"fa-solid fa-trash\",\r\n  },\r\n];\r\nconst Techpage = () => {\r\n\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    if (roles === \"admin\" || roles === \"editor\") {\r\n      localStorage.setItem(\"role\", roles);\r\n    }\r\n  }, [roles]);\r\n\r\n  useEffect(() => {\r\n    const savedRole = localStorage.getItem(\"role\");\r\n    if (savedRole && savedRole !== roles) {\r\n      dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n    }\r\n  }, [dispatch]);\r\n  \r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n      <Layout>\r\n      <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'34px',fontFamily:'bold'}}><p>TEACHNICAL</p></div>\r\n        <section className=\"container1\">\r\n          {data.map((data) => {\r\n            return (\r\n              <div\r\n                className=\"box1\"\r\n                onClick={() => {\r\n                  navigate(data.path);\r\n                }}\r\n              >\r\n                <i class={data.icon}></i>\r\n\r\n                <b>{data.name}</b>\r\n              </div>\r\n            );\r\n          })}\r\n        </section>\r\n     \r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Techpage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst Classpage = () => {\r\n  const navigate = useNavigate();\r\n  const [classlist, setClasslist] = useState([]);\r\n\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n   useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n\r\n  const handleform = async (values) => {\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/addclass\", values);\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n  const getallclass = async () => {\r\n    const res = await axios.get(\"/api/v1/tech/getallclass\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    if (res.data.success) {\r\n      setClasslist(res.data.data);\r\n      message.success(\"all classes get\");\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getallclass();\r\n  }, []);\r\n\r\n  const handledelete = async (id) => {\r\n    try {\r\n      // eslint-disable-next-line no-restricted-globals\r\n      var result = confirm(\"really want to delete\");\r\n      if (result) {\r\n        const res = await axios.post(\r\n          \"/api/v1/tech/deleteclass\",\r\n          { id },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        if (res.data.success) {\r\n          message.success(res.data.message);\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div className=\"\">\r\n          <Form layout=\"vertical\" onFinish={handleform} className=\"m-2\">\r\n            <h3 className=\"text-center\"> Class Rooms</h3>\r\n            <Row gutter={20}>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Class name\"\r\n                  name=\"classname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type class name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Class number\"\r\n                  name=\"classno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type class number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Building name\"\r\n                  name=\"buildingname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type building name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Floor number\"\r\n                  name=\"floorno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type floor number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={4}>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"180px\", marginTop: \"25px\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n\r\n        {classlist &&\r\n          classlist.map((data) => {\r\n            return (\r\n              <div className=\"card m-2 cardstyle\">\r\n                <div\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className=\"card-header\"\r\n                  onClick={() => {\r\n                    navigate(`/classdetails/${data._id}`);\r\n                  }}\r\n                >\r\n                  Class Name:\r\n                  <b> {data.classname}</b>\r\n                </div>\r\n\r\n                <div className=\"card-body p-2\">\r\n                  <p>\r\n                    <b>Class No:</b>\r\n                    {data.classno}\r\n                  </p>\r\n                  <p>\r\n                    <b>Building Name:</b>\r\n                    {data.buildingname}\r\n                  </p>\r\n                  <p>\r\n                    <b>Floor No:</b>\r\n                    {data.floorno}\r\n                  </p>\r\n                  <p>\r\n                    <button\r\n                      onClick={() => {\r\n                        // eslint-disable-next-line no-restricted-globals\r\n                        let result = confirm(\"really want to edit\");\r\n                        if (result) {\r\n                          navigate(`/classedit/${data._id}`);\r\n                        }\r\n                      }}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        handledelete(data._id);\r\n                      }}\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Classpage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Row, Col, message } from \"antd\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst Classedit = () => {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const [classdata, setClassdata] = useState(null);\r\n\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n   useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n  const handleform = async (values) => {\r\n    values.classid = params.classid;\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/editclass\", values, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        navigate(\"/class\");\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getclassdata = async () => {\r\n    const res = await axios.post(\r\n      \"/api/v1/tech/getclass\",\r\n      {\r\n        classid: params.classid,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      }\r\n    );\r\n    if (res.data.success) {\r\n      setClassdata(res.data.data);\r\n      console.log(classdata);\r\n      message.success(res.data.message);\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    getclassdata();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        {classdata && (\r\n          <div className=\"form-div\">\r\n            <Form\r\n              layout=\"vertical\"\r\n              onFinish={handleform}\r\n              className=\"m-2\"\r\n              initialValues={classdata}\r\n            >\r\n              <h3 className=\"text-center\">Edit Class</h3>\r\n              <Row gutter={20}>\r\n                <Col xs={24} md={24} lg={8}>\r\n                  <Form.Item\r\n                    label=\"Class name\"\r\n                    name=\"classname\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input placeholder=\"type class name\" />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} md={24} lg={8}>\r\n                  <Form.Item\r\n                    label=\"Class number\"\r\n                    name=\"classno\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input type=\"number\" placeholder=\"type class number\" />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} md={24} lg={8}>\r\n                  <Form.Item\r\n                    label=\"Building name\"\r\n                    name=\"buildingname\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input type=\"text\" placeholder=\"type building name\" />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} md={24} lg={8}>\r\n                  <Form.Item\r\n                    label=\"Floor number\"\r\n                    name=\"floorno\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input type=\"number\" placeholder=\"type floor number\" />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} md={24} lg={8}>\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    style={{ width: \"200px\", marginTop: \"20px\" }}\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Classedit;\r\n","import React from \"react\";\r\nimport \"../styles/Spinnerstyle.css\";\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"spinner-container\">\r\n      <div className=\"spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { Form, message, Row, Col, Input, Select, DatePicker } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst Classdetail = () => {\r\n  const navigate = useNavigate();\r\n  const { Option } = Select;\r\n  const params = useParams();\r\n  const [classdetails, setClassdetails] = useState([]);\r\n  const [itemtype, setItemtype] = useState();\r\n  const [formattedDates, setFormattedDates] = useState({});\r\n   const [classname,setClassname]=useState();\r\n    const [classes,setClasses]=useState([]);\r\n  \r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n   useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n\r\n  const getclassdetails = async () => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/getclassdetails\",\r\n        {\r\n          classid: params.classid,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        setClassdetails(res.data.data);\r\n        message.success(res.data.message);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n  const processdates = async () => {\r\n    const dates = {};\r\n    const details = classdetails;\r\n    for (let data of details) {\r\n      dates[data._id] = await freshdate(data.installationdate);\r\n    }\r\n    setFormattedDates(dates);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getclassdetails();\r\n  }, []);\r\n  useEffect(() => {\r\n    processdates();\r\n  }, [classdetails]);\r\n\r\n  const freshdate = async (isodate) => {\r\n    const date = moment(isodate);\r\n    const day = date.date();\r\n    let suffix = \"\";\r\n    const j = day % 10;\r\n    const k = day % 100;\r\n\r\n    if (j === 1 && k !== 11) {\r\n      suffix = \"st\";\r\n    } else if (j === 2 && k !== 12) {\r\n      suffix = \"nd\";\r\n    } else if (j === 3 && k !== 13) {\r\n      suffix = \"rd\";\r\n    } else {\r\n      suffix = \"th\";\r\n    }\r\n\r\n    const freshdate = `${day}${suffix} ${date.format(\"MMMM-YYYY\")} `;\r\n    return freshdate;\r\n  };\r\n  const handlefinish = async (values) => {\r\n    values.classid = params.classid;\r\n    if (values.itemtype === \"other\" && values.otheritemtype) {\r\n      values.itemtype = values.otheritemtype;\r\n      delete values.otheritemtype;\r\n    }\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/addclassdetail\", values);\r\n      if (res.data.success) {\r\n      //  message.success(res.data.message);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getalllabs = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tech/getallclass\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n       // message.success(res.data.message);\r\n        setClasses(res.data.data);\r\n      } else {\r\n        message.error(res.data.messgae);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\nuseEffect(()=>{\r\n    const lab=classes.find((data)=>data._id===params.classid);\r\n     if(lab){\r\n      setClassname(lab.classname);\r\n     }\r\n      },[classes,params.classid]);\r\n\r\n   useEffect(() => {\r\n      getalllabs();\r\n    }, []);\r\n\r\n\r\n\r\n  const handledelete = async (id) => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/deleteclassdetail\",\r\n        { id },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n       // message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n     \r\n    } catch (error) {\r\n      message.error(\"somethig went wrong\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n    <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'34px',fontFamily:'bold'}}><p>{classname}</p></div>\r\n           <div\r\n             className=\"form-div\"\r\n             style={{\r\n               border: \"1px solid black\",\r\n               width: \"100%\",\r\n               float: \"left\",\r\n               margin: \"2px\",\r\n             }}\r\n           >\r\n             <Form layout=\"vertical\" onFinish={handlefinish}>\r\n               <h5 className=\"text-center\">Add Item</h5>\r\n               <Row gutter={20}>\r\n                 <Col xs={24} md={24} lg={5}>\r\n                   <Form.Item\r\n                     name=\"itemtype\"\r\n                     label=\"Item Type\"\r\n                     rules={[{ required: true, message: \"Item type is required\" }]}\r\n                   >\r\n                     <Select\r\n                       placeholder=\"select item type\"\r\n                       onChange={(value) => setItemtype(value)}\r\n                     >\r\n                       <Option value=\"speaker\">Speaker</Option>\r\n                       <Option value=\"microphone\">Microphone</Option>\r\n                       <Option value=\"desktop\">Desktop Computer</Option>\r\n                       <Option value=\"other\">Other</Option>\r\n                     </Select>\r\n                   </Form.Item>\r\n                 </Col>\r\n                 {itemtype === \"other\" && (\r\n                   <Col xs={24} md={24}  lg={5}>\r\n                     <Form.Item\r\n                       label=\"other item name\"\r\n                       name=\"otheritemtype\"\r\n                       rules={[\r\n                         { required: true, message: \"other item name required\" },\r\n                       ]}\r\n                     >\r\n                       <Input type=\"text\" placeholder=\"type item name\" />\r\n                     </Form.Item>\r\n                   </Col>\r\n                 )}\r\n                 <Col xs={24} md={24}  lg={5}>\r\n                   <Form.Item\r\n                     name=\"installationdate\"\r\n                     label=\"Installation Date\"\r\n                     rules={[\r\n                       {\r\n                         required: true,\r\n                         message: \"Installation date is required\",\r\n                       },\r\n                     ]} \r\n                   >\r\n                     <DatePicker style={{ width: \"100%\" }} />\r\n                   </Form.Item>\r\n                 </Col>\r\n                 <Col xs={24} md={24}  lg={5}>\r\n                   <Form.Item\r\n                     name=\"description\"\r\n                     label=\"Description\"\r\n                     rules={[\r\n                       { required: true, message: \"Description is required\" },\r\n                     ]}\r\n                   >\r\n                     <Input.TextArea\r\n                       placeholder=\"enter description\"\r\n                       rows={1}\r\n                       style={{ width: \"100%\" }}\r\n                     />\r\n                   </Form.Item>\r\n                 </Col>\r\n   \r\n                 {itemtype === \"desktop\" && (\r\n                   <div style={{ width: \"100%\" }}>\r\n                     <Row gutter={20}>\r\n                     <Col xs={24} md={24}  lg={5}>\r\n                       <Form.Item\r\n                         name=\"desktopnumber\"\r\n                         label=\"Desktop Number\"\r\n                         rules={[\r\n                           {\r\n                             required: true,\r\n                             message: \"Desktop number is required\",\r\n                           },\r\n                         ]}\r\n                       >\r\n                         <Input\r\n                           type=\"text\"\r\n                           style={{ width: \"100%\" }}\r\n                           placeholder=\"enter desktop number\"\r\n                         />\r\n                       </Form.Item>\r\n                     </Col>\r\n                     <Col xs={24} md={24}  lg={5}>\r\n                       <Form.Item\r\n                         name=\"ipaddress\"\r\n                         label=\"IP Address\"\r\n                         rules={[\r\n                           {\r\n                             required: true,\r\n                             message: \"Ip address is required\",\r\n                           },\r\n                         ]}\r\n                       >\r\n                         <Input\r\n                           type=\"text\"\r\n                           style={{ width: \"100%\" }}\r\n                           placeholder=\"enter ip address\"\r\n                         />\r\n                       </Form.Item>\r\n                     </Col>\r\n                     <Col xs={24} md={24}  lg={5}>\r\n                       <Form.Item\r\n                         name=\"monitornumber\"\r\n                         label=\"Monitor Number\"\r\n                         rules={[\r\n                           {\r\n                             required: true,\r\n                             message: \"Monitor number is required\",\r\n                           },\r\n                         ]}\r\n                       >\r\n                         <Input type=\"text\" placeholder=\"enter monitor number\" />\r\n                       </Form.Item>\r\n                     </Col>\r\n                     <Col xs={24} md={24}  lg={5}>\r\n                       <Form.Item\r\n                         name=\"monitorname\"\r\n                         label=\"Monitor Attributes\"\r\n                         rules={[{ required: true }]}\r\n                       >\r\n                         <Input type=\"text\" placeholder=\"Brand, Model, Size\" />\r\n                       </Form.Item>\r\n                     </Col>\r\n                     <Col xs={24} md={24}  lg={5}>\r\n                       <Form.Item\r\n                         name=\"mousenumber\"\r\n                         label=\"Mouse Number\"\r\n                         rules={[\r\n                           { required: true, message: \"Mouse number is required\" },\r\n                         ]}\r\n                       >\r\n                         <Input type=\"text\" placeholder=\"enter mouse number\" />\r\n                       </Form.Item>\r\n                     </Col>\r\n                     <Col xs={24} md={24}  lg={5}>\r\n                       <Form.Item\r\n                         name=\"mousename\"\r\n                         label=\"Mouse Attributes\"\r\n                         rules={[{ required: true }]}\r\n                       >\r\n                         <Input type=\"text\" placeholder=\"Brand and Model\" />\r\n                       </Form.Item>\r\n                     </Col>\r\n                     <Col xs={24} md={24}  lg={5}>\r\n                       <Form.Item\r\n                         name=\"keyboardnumber\"\r\n                         label=\"Keyboard Number\"\r\n                         rules={[\r\n                           { required: true, message: \"keyboard no required\" },\r\n                         ]}\r\n                       >\r\n                         <Input type=\"text\" placeholder=\"enter keyboard number\" />\r\n                       </Form.Item>\r\n                     </Col>\r\n                     <Col xs={24} md={24}  lg={5}>\r\n                       <Form.Item\r\n                         name=\"keyboardname\"\r\n                         label=\"Keyboard Attributes\"\r\n                         rules={[{ required: true }]}\r\n                       >\r\n                         <Input type=\"text\" placeholder=\"Brand and model\" />\r\n                       </Form.Item>\r\n                     </Col>\r\n                     <Col xs={24} md={24}  lg={5}>\r\n                       <Form.Item\r\n                         name=\"cpunumber\"\r\n                         label=\"CPU Number\"\r\n                         rules={[\r\n                           { required: true, message: \"CPU number is required\" },\r\n                         ]}\r\n                       >\r\n                         <Input type=\"text\" placeholder=\"enter cpu number\" />\r\n                       </Form.Item>\r\n                     </Col>\r\n                     <Col xs={24} md={24}  lg={5}>\r\n                       <Form.Item\r\n                         name=\"cpuname\"\r\n                         label=\"CPU Attributes\"\r\n                         rules={[{ required: true }]}\r\n                       >\r\n                         <Input type=\"text\" placeholder=\"Brand, Model, Speed\" />\r\n                       </Form.Item>\r\n                     </Col>\r\n                     </Row>\r\n                   </div>\r\n                 )}\r\n   \r\n                 <Col xs={24} md={24}  lg={5}>\r\n                   <Form.Item>\r\n                     <button\r\n                       type=\"submit\"\r\n                       className=\"btn btn-primary\"\r\n                       style={{ width: \"100%\", marginLeft: \"0px\",marginTop:'30px' }}\r\n                     >\r\n                       Submit\r\n                     </button>\r\n                   </Form.Item>\r\n                 </Col>\r\n               </Row>\r\n             </Form>\r\n           </div>\r\n   \r\n           <table\r\n     className=\"table\"\r\n     style={{\r\n       width: \"100%\",\r\n       borderCollapse: \"collapse\",\r\n       marginTop: \"10px\",\r\n     }}\r\n   >\r\n     <thead>\r\n       <tr>\r\n         <th\r\n           style={{\r\n             border: \"2px solid black\",\r\n             textAlign: \"center\",\r\n             padding: \"10px\",\r\n             color: \"red\",\r\n           }}\r\n         >\r\n           Item Type\r\n         </th>\r\n         <th\r\n           style={{\r\n             border: \"2px solid black\",\r\n             textAlign: \"center\",\r\n             padding: \"10px\",\r\n             color: \"red\",\r\n           }}\r\n         >\r\n           Installation Date\r\n         </th>\r\n         <th\r\n           style={{\r\n             border: \"2px solid black\",\r\n             textAlign: \"center\",\r\n             padding: \"10px\",\r\n             color: \"red\",\r\n           }}\r\n         >\r\n           Description\r\n         </th>\r\n         <th\r\n           style={{\r\n             border: \"2px solid black\",\r\n             textAlign: \"center\",\r\n             padding: \"10px\",\r\n             color: \"red\",\r\n           }}\r\n         >\r\n           Desktop Info\r\n         </th>\r\n         <th\r\n           style={{\r\n             border: \"2px solid black\",\r\n             textAlign: \"center\",\r\n             padding: \"10px\",\r\n             color: \"red\",\r\n           }}\r\n         >\r\n           Actions\r\n         </th>\r\n       </tr>\r\n     </thead>\r\n     <tbody>\r\n       {classdetails &&\r\n         classdetails.map((data) => (\r\n           <tr key={data._id}>\r\n             <td\r\n               style={{\r\n                 border: \"2px solid black\",\r\n                 textAlign: \"center\",\r\n                 padding: \"10px\",\r\n               }}\r\n             >\r\n               <b>{data.itemtype}</b>\r\n             </td>\r\n             <td\r\n               style={{\r\n                 border: \"2px solid black\",\r\n                 textAlign: \"center\",\r\n                 padding: \"10px\",\r\n               }}\r\n             >\r\n               <span>{formattedDates[data._id] || \"Loading...\"}</span>\r\n             </td>\r\n             <td\r\n               style={{\r\n                 border: \"2px solid black\",\r\n                 textAlign: \"center\",\r\n                 width: \"350px\",\r\n               }}\r\n             >\r\n               <div style={{ maxHeight: \"150px\", overflowY: \"auto\" }}>\r\n                 {data.description || \"N/A\"}\r\n               </div>\r\n             </td>\r\n             <td\r\n               style={{\r\n                 border: \"2px solid black\",\r\n                 textAlign: \"center\",\r\n               }}\r\n             >\r\n               {data.itemtype === \"desktop\" && (\r\n                 <div\r\n                   style={{\r\n                     maxHeight: \"150px\",\r\n                     overflowY: \"auto\",\r\n                   }}\r\n                 >\r\n                   <p>\r\n                     <b>Desktop Number:</b> {data.desktopnumber}\r\n                   </p>\r\n                   <p>\r\n                     <b>Monitor Number:</b> {data.monitornumber}\r\n                   </p>\r\n                   <p>\r\n                     <b>Monitor Name:</b> {data.monitorname}\r\n                   </p>\r\n                   <p>\r\n                     <b>Mouse Number:</b> {data.mousenumber}\r\n                   </p>\r\n                   <p>\r\n                     <b>Mouse Name:</b> {data.mousename}\r\n                   </p>\r\n                   <p>\r\n                     <b>Keyboard Number:</b> {data.keyboardnumber}\r\n                   </p>\r\n                   <p>\r\n                     <b>Keyboard Name:</b> {data.keyboardname}\r\n                   </p>\r\n                   <p>\r\n                     <b>CPU Number:</b> {data.cpunumber}\r\n                   </p>\r\n                   <p>\r\n                     <b>CPU Name:</b> {data.cpuname}\r\n                   </p>\r\n                 </div>\r\n               )}\r\n             </td>\r\n             <td\r\n               style={{\r\n                 border: \"2px solid black\",\r\n                 textAlign: \"center\",\r\n                 padding: \"10px\",\r\n               }}\r\n             >\r\n               <i\r\n                 className=\"fa-solid fa-trash icon\"\r\n                 style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                 onClick={() => {\r\n                   if (window.confirm(\"Do you want to delete?\")) {\r\n                     handledelete(data._id);\r\n                   }\r\n                 }}\r\n               ></i>\r\n               <i\r\n                 className=\"fa-solid fa-pen-to-square edit\"\r\n                 style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                 onClick={() => {\r\n                   if (window.confirm(\"Do you want to edit?\")) {\r\n                     navigate(`/classdetailedit/${data._id}`);\r\n                   }\r\n                 }}\r\n               ></i>\r\n             </td>\r\n           </tr>\r\n         ))}\r\n     </tbody>\r\n   </table>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Classdetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { Form, message, Row, Col, Input, Select, DatePicker } from \"antd\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\nconst {Option}=Select;\r\n\r\nconst Classdetailedit = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [classdetaill, setClassdetaill] = useState(null);\r\n  const [itemtype, setItemtype] = useState(null);\r\n  const [form] = Form.useForm();\r\n  \r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n   useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n\r\n  const getclassdata = async () => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/getclassdetailedit\",\r\n        {\r\n          classdetailid: params.classdetailid,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        setClassdetaill(res.data.data);\r\n        const { installationdate, ...otherdata } = res.data.data;\r\n        form.setFieldsValue({\r\n          ...otherdata,\r\n          installationdate: moment(installationdate),\r\n        });\r\n        message.success(res.data.message);\r\n      } else {\r\n        message.error(res.data.message);\r\n        // navigate(\"/\"); // Redirect to home if data fetch fails\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching class data:\", error);\r\n      message.error(\"An unexpected error occurred\");\r\n      //navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getclassdata();\r\n  }, []);\r\n\r\n  const handlesubmit = async (values) => {\r\n    if (values.itemtype === \"other\" && values.otheritemtype) {\r\n      values.itemtype = values.otheritemtype;\r\n      delete values.otheritemtype;\r\n    }\r\n    values.productid = params.classdetailid;\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/editclassdetail\", values, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        navigate(`/classdetails/${res.data.data.classid}`);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n        <div\r\n                 className=\"form-div\"\r\n                 style={{\r\n                   border: \"1px solid black\",\r\n                   width: \"300px\",\r\n                   float: \"left\",\r\n                   marginTop: \"10px\",\r\n                 }}\r\n               >\r\n                 <Form\r\n                   layout=\"vertical\"\r\n                   onFinish={handlesubmit}\r\n                   className=\"m-2\"\r\n                   form={form}\r\n                 >\r\n                   <h3 className=\"text-center\">Edit Detail</h3>\r\n                   <Row gutter={20}>\r\n                     <Col xs={24} md={24}>\r\n                       <Form.Item\r\n                         name=\"itemtype\"\r\n                         label=\"Item Type\"\r\n                         rules={[{ required: true, message: \"Item type is required\" }]}\r\n                       >\r\n                         <Select\r\n                           placeholder=\"select item type\"\r\n                           onChange={(value) => setItemtype(value)}\r\n                         >\r\n                           <Option value=\"speaker\">Speaker</Option>\r\n                           <Option value=\"mic\">Microphone</Option>\r\n                           <Option value=\"desktop\">Desktop Computer</Option>\r\n                           <Option value=\"other\">Other</Option>\r\n                         </Select>\r\n                       </Form.Item>\r\n                     </Col>\r\n                     {itemtype === \"other\" && (\r\n                       <Col xs={24} md={24}>\r\n                         <Form.Item\r\n                           label=\"other item name\"\r\n                           name=\"otheritemtype\"\r\n                           rules={[\r\n                             { required: true, message: \"other item name required\" },\r\n                           ]}\r\n                         >\r\n                           <Input type=\"text\" placeholder=\"type item name\" />\r\n                         </Form.Item>\r\n                       </Col>\r\n                     )}\r\n                     <Col xs={24} md={24}>\r\n                       <Form.Item\r\n                         name=\"installationdate\"\r\n                         label=\"Installation Date\"\r\n                         rules={[\r\n                           {\r\n                             required: true,\r\n                             message: \"Installation date is required\",\r\n                           },\r\n                         ]}\r\n                       >\r\n                         <DatePicker style={{ width: \"100%\" }} />\r\n                       </Form.Item>\r\n                     </Col>\r\n                     <Col xs={24} md={24}>\r\n                       <Form.Item\r\n                         name=\"description\"\r\n                         label=\"Description\"\r\n                         rules={[\r\n                           { required: true, message: \"Description is required\" },\r\n                         ]}\r\n                       >\r\n                         <Input.TextArea\r\n                           placeholder=\"enter description\"\r\n                           rows={4}\r\n                           style={{ width: \"100%\" }}\r\n                         />\r\n                       </Form.Item>\r\n                     </Col>\r\n       \r\n                     {classdetaill?.itemtype === \"desktop\" && (\r\n                       <div style={{ width: \"100%\" }}>\r\n                         <Col xs={24} md={24}>\r\n                           <Form.Item\r\n                             name=\"desktopnumber\"\r\n                             label=\"Desktop Number\"\r\n                             rules={[\r\n                               {\r\n                                 required: true,\r\n                                 message: \"Desktop number is required\",\r\n                               },\r\n                             ]}\r\n                           >\r\n                             <Input\r\n                               type=\"text\"\r\n                               style={{ width: \"100%\" }}\r\n                               placeholder=\"enter desktop number\"\r\n                             />\r\n                           </Form.Item>\r\n                         </Col>\r\n                         <Col xs={24} md={24}>\r\n                           <Form.Item\r\n                             name=\"ipaddress\"\r\n                             label=\"IP Address\"\r\n                             rules={[\r\n                               {\r\n                                 required: true,\r\n                                 message: \"Ip address is required\",\r\n                               },\r\n                             ]}\r\n                           >\r\n                             <Input\r\n                               type=\"text\"\r\n                               style={{ width: \"100%\" }}\r\n                               placeholder=\"enter ip address\"\r\n                             />\r\n                           </Form.Item>\r\n                         </Col>\r\n                         <Col xs={24} md={24}>\r\n                           <Form.Item\r\n                             name=\"monitornumber\"\r\n                             label=\"Monitor Number\"\r\n                             rules={[\r\n                               {\r\n                                 required: true,\r\n                                 message: \"Monitor number is required\",\r\n                               },\r\n                             ]}\r\n                           >\r\n                             <Input type=\"text\" placeholder=\"enter monitor number\" />\r\n                           </Form.Item>\r\n                         </Col>\r\n                         <Col xs={24} md={24}>\r\n                           <Form.Item\r\n                             name=\"monitorname\"\r\n                             label=\"Monitor Attributes\"\r\n                             rules={[{ required: true }]}\r\n                           >\r\n                             <Input type=\"text\" placeholder=\"Brand, Model, Size\" />\r\n                           </Form.Item>\r\n                         </Col>\r\n                         <Col xs={24} md={24}>\r\n                           <Form.Item\r\n                             name=\"mousenumber\"\r\n                             label=\"Mouse Number\"\r\n                             rules={[\r\n                               { required: true, message: \"Mouse number is required\" },\r\n                             ]}\r\n                           >\r\n                             <Input type=\"text\" placeholder=\"enter mouse number\" />\r\n                           </Form.Item>\r\n                         </Col>\r\n                         <Col xs={24} md={24}>\r\n                           <Form.Item\r\n                             name=\"mousename\"\r\n                             label=\"Mouse Attributes\"\r\n                             rules={[{ required: true }]}\r\n                           >\r\n                             <Input type=\"text\" placeholder=\"Brand and Model\" />\r\n                           </Form.Item>\r\n                         </Col>\r\n                         <Col xs={24} md={24}>\r\n                           <Form.Item\r\n                             name=\"keyboardnumber\"\r\n                             label=\"Keyboard Number\"\r\n                             rules={[\r\n                               { required: true, message: \"keyboard no required\" },\r\n                             ]}\r\n                           >\r\n                             <Input type=\"text\" placeholder=\"enter keyboard number\" />\r\n                           </Form.Item>\r\n                         </Col>\r\n                         <Col xs={24} md={24}>\r\n                           <Form.Item\r\n                             name=\"keyboardname\"\r\n                             label=\"Keyboard Attributes\"\r\n                             rules={[{ required: true }]}\r\n                           >\r\n                             <Input type=\"text\" placeholder=\"Brand and model\" />\r\n                           </Form.Item>\r\n                         </Col>\r\n                         <Col xs={24} md={24}>\r\n                           <Form.Item\r\n                             name=\"cpunumber\"\r\n                             label=\"CPU Number\"\r\n                             rules={[\r\n                               { required: true, message: \"CPU number is required\" },\r\n                             ]}\r\n                           >\r\n                             <Input type=\"text\" placeholder=\"enter cpu number\" />\r\n                           </Form.Item>\r\n                         </Col>\r\n                         <Col xs={24} md={24}>\r\n                           <Form.Item\r\n                             name=\"cpuname\"\r\n                             label=\"CPU Attributes\"\r\n                             rules={[{ required: true }]}\r\n                           >\r\n                             <Input type=\"text\" placeholder=\"Brand, Model, Speed\" />\r\n                           </Form.Item>\r\n                         </Col>\r\n                       </div>\r\n                     )}\r\n       \r\n                     <Col xs={24} md={24}>\r\n                       <Form.Item>\r\n                         <button\r\n                           type=\"submit\"\r\n                           className=\"btn btn-primary\"\r\n                           style={{ width: \"100%\", marginLeft: \"0px\" }}\r\n                         >\r\n                           Submit\r\n                         </button>\r\n                       </Form.Item>\r\n                     </Col>\r\n                   </Row>\r\n                 </Form>\r\n               </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Classdetailedit;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst Labpage = () => {\r\n  const [labslist, setLabslist] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n    useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n  const handleform = async (values) => {\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/lab/addlab\", values);\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n        // window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getalllabs = async () => {\r\n    const res = await axios.get(\"/api/v1/tech/lab/getalllabs\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    if (res.data.success) {\r\n      setLabslist(res.data.data);\r\n      message.success(\"all labs get\");\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getalllabs();\r\n  }, []);\r\n\r\n  const handledelete = async (id) => {\r\n    try {\r\n      // eslint-disable-next-line no-restricted-globals\r\n      var result = confirm(\"really want to delete\");\r\n      if (result) {\r\n        const res = await axios.post(\r\n          \"/api/v1/tech//lab/deletelab\",\r\n          { id },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        if (res.data.success) {\r\n          message.success(res.data.message);\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n      <h3 className=\"text-center b\">LABS</h3>\r\n        <div className=\"\">\r\n          <Form layout=\"vertical\" onFinish={handleform} className=\"m-2\">\r\n            <h6 className=\"text-left\">Add  New Lab</h6>\r\n            <Row gutter={20}>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Lab name\"\r\n                  name=\"labname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type lab name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Lab number\"\r\n                  name=\"labno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type lab number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Building name\"\r\n                  name=\"buildingname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type building name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Floor number\"\r\n                  name=\"floorno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type floor number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={4}>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"180px\", marginTop: \"25px\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n  \r\n\r\n      {labslist &&\r\n        labslist.map((data) => {\r\n          return (\r\n            <div className=\"card m-2 cardstyle\">\r\n              <div\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"card-header\"\r\n                onClick={() => {\r\n                  navigate(`/labdetails/${data._id}`);\r\n                }}\r\n              >\r\n                Lab Name:\r\n                <b> {data.labname}</b>\r\n              </div>\r\n\r\n              <div className=\"card-body p-2\">\r\n                <p>\r\n                  <b>Lab No: </b>\r\n                  {data.labno}\r\n                </p>\r\n                <p>\r\n                  <b>Building Name: </b>\r\n                  {data.buildingname}\r\n                </p>\r\n                <p>\r\n                  <b>Floor No: </b>\r\n                  {data.floorno}\r\n                </p>\r\n                <p>\r\n                  <button\r\n                    onClick={() => {\r\n                      // eslint-disable-next-line no-restricted-globals\r\n                      let result = confirm(\"really want to edit\");\r\n                      if (result) {\r\n                        navigate(`/labedit/${data._id}`);\r\n                      }\r\n                    }}\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      handledelete(data._id);\r\n                    }}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n            </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Labpage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Row, Col, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Layout from \"./../../components/Layout\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst Labedit = () => {\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [labinfo, setLabinfo] = useState(null);\r\n\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n    useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n  const getlabdata = async () => {\r\n    const res = await axios.post(\r\n      \"/api/v1/tech/lab/getlabdata\",\r\n      {\r\n        labid: params.labid,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      }\r\n    );\r\n    if (res.data.success) {\r\n      setLabinfo(res.data.data);\r\n      //   Form.setFieldsValue(res.data.data);\r\n      //console.log(labdata);\r\n      message.success(res.data.message);\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    getlabdata();\r\n  }, []);\r\n\r\n  const handleform = async (values) => {\r\n    values.labid = params.labid;\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/lab/editlab\", values, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        navigate(\"/lab\");\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        {labinfo && (\r\n          <div className=\"form-div\">\r\n            <Form\r\n              layout=\"vertical\"\r\n              className=\"m-2\"\r\n              onFinish={handleform}\r\n              initialValues={labinfo}\r\n            >\r\n              <h3 className=\"text-center\">Edit Lab</h3>\r\n              <Row gutter={20}>\r\n                <Col xs={24} md={24} lg={5}>\r\n                  <Form.Item\r\n                    label=\"Lab name\"\r\n                    name=\"labname\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input type=\"text\" placeholder=\"type lab name\" />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} md={24} lg={5}>\r\n                  <Form.Item\r\n                    label=\"Lab number\"\r\n                    name=\"labno\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input type=\"number\" placeholder=\"type lab number\" />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} md={24} lg={5}>\r\n                  <Form.Item\r\n                    label=\"Building name\"\r\n                    name=\"buildingname\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input type=\"text\" placeholder=\"type building name\" />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} md={24} lg={5}>\r\n                  <Form.Item\r\n                    label=\"Floor number\"\r\n                    name=\"floorno\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input type=\"number\" placeholder=\"type floor number\" />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} md={24} lg={4}>\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    style={{ width: \"180px\", marginTop: \"25px\" }}\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Labedit;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  message,\r\n  Select,\r\n  DatePicker,\r\n  Divider,\r\n  Button,\r\n} from \"antd\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Labdetail = () => {\r\n  const [labdetails, setLabdetails] = useState([]);\r\n \r\n  const [itemtype, setItemtype] = useState();\r\n  const [formattedDates, setFormattedDates] = useState({});\r\n  const params = useParams();\r\n  const [labname,setLabname]=useState();\r\n  const [labs,setLabs]=useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n   useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n\r\n  const handlefinish = async (values) => {\r\n    // console.log(\"Received values:\", values);\r\n    values.labid = params.labid;\r\n    if (values.itemtype === \"other\" && values.otheritemtype) {\r\n      values.itemtype = values.otheritemtype;\r\n      delete values.otheritemtype;\r\n    }\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/lab/addlabdetail\", values);\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const processdates = async () => {\r\n    const dates = {};\r\n    const details = labdetails;\r\n    for (let data of details) {\r\n      dates[data._id] = await freshdate(data.installationdate);\r\n    }\r\n    setFormattedDates(dates);\r\n  };\r\n\r\n  const getdetails = async () => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/lab/getdetailoflab\",\r\n        {\r\n          labid: params.labid,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setLabdetails(res.data.data);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n  const freshdate = async (isodate) => {\r\n    const date = moment(isodate);\r\n    const day = date.date();\r\n    let suffix = \"\";\r\n    const j = day % 10;\r\n    const k = day % 100;\r\n\r\n    if (j === 1 && k !== 11) {\r\n      suffix = \"st\";\r\n    } else if (j === 2 && k !== 12) {\r\n      suffix = \"nd\";\r\n    } else if (j === 3 && k !== 13) {\r\n      suffix = \"rd\";\r\n    } else {\r\n      suffix = \"th\";\r\n    }\r\n\r\n    const freshdate = `${day}${suffix} ${date.format(\"MMMM-YYYY\")} `;\r\n    return freshdate;\r\n  };\r\n\r\n \r\n  const getalllabs = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tech/lab/alllabs\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setLabs(res.data.data);\r\n      } else {\r\n        message.error(res.data.messgae);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    const lab=labs.find((data)=>data._id===params.labid);\r\n     if(lab){\r\n      setLabname(lab.labname);\r\n     }\r\n      },[labs,params.labid]);\r\n\r\n   useEffect(() => {\r\n      getalllabs();\r\n    }, []);\r\n\r\n  useEffect(() => {\r\n    getdetails();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    processdates();\r\n  }, [labdetails]);\r\n\r\n  const handledelete = async (id) => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/lab/deletelabdetail\",\r\n        {\r\n          id,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n      <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'34px',fontFamily:'bold'}}><p>{labname}</p></div>\r\n        <div\r\n          className=\"form-div\"\r\n          style={{\r\n            border: \"1px solid black\",\r\n            width: \"100%\",\r\n            float: \"left\",\r\n            margin: \"2px\",\r\n          }}\r\n        >\r\n          <Form layout=\"vertical\" onFinish={handlefinish}>\r\n            <h5 className=\"text-center\">Add Item</h5>\r\n            <Row gutter={20}>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  name=\"itemtype\"\r\n                  label=\"Item Type\"\r\n                  rules={[{ required: true, message: \"Item type is required\" }]}\r\n                >\r\n                  <Select\r\n                    placeholder=\"select item type\"\r\n                    onChange={(value) => setItemtype(value)}\r\n                  >\r\n                    <Option value=\"speaker\">Speaker</Option>\r\n                    <Option value=\"microphone\">Microphone</Option>\r\n                    <Option value=\"desktop\">Desktop Computer</Option>\r\n                    <Option value=\"other\">Other</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              {itemtype === \"other\" && (\r\n                <Col xs={24} md={24}  lg={5}>\r\n                  <Form.Item\r\n                    label=\"other item name\"\r\n                    name=\"otheritemtype\"\r\n                    rules={[\r\n                      { required: true, message: \"other item name required\" },\r\n                    ]}\r\n                  >\r\n                    <Input type=\"text\" placeholder=\"type item name\" />\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              <Col xs={24} md={24}  lg={5}>\r\n                <Form.Item\r\n                  name=\"installationdate\"\r\n                  label=\"Installation Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Installation date is required\",\r\n                    },\r\n                  ]} \r\n                >\r\n                  <DatePicker style={{ width: \"100%\" }} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24}  lg={5}>\r\n                <Form.Item\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  rules={[\r\n                    { required: true, message: \"Description is required\" },\r\n                  ]}\r\n                >\r\n                  <Input.TextArea\r\n                    placeholder=\"enter description\"\r\n                    rows={1}\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              {itemtype === \"desktop\" && (\r\n                <div style={{ width: \"100%\" }}>\r\n                  <Row gutter={20}>\r\n                  <Col xs={24} md={24}  lg={5}>\r\n                    <Form.Item\r\n                      name=\"desktopnumber\"\r\n                      label=\"Desktop Number\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Desktop number is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"text\"\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"enter desktop number\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}  lg={5}>\r\n                    <Form.Item\r\n                      name=\"ipaddress\"\r\n                      label=\"IP Address\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Ip address is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"text\"\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"enter ip address\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}  lg={5}>\r\n                    <Form.Item\r\n                      name=\"monitornumber\"\r\n                      label=\"Monitor Number\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Monitor number is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"enter monitor number\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}  lg={5}>\r\n                    <Form.Item\r\n                      name=\"monitorname\"\r\n                      label=\"Monitor Attributes\"\r\n                      rules={[{ required: true }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Brand, Model, Size\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}  lg={5}>\r\n                    <Form.Item\r\n                      name=\"mousenumber\"\r\n                      label=\"Mouse Number\"\r\n                      rules={[\r\n                        { required: true, message: \"Mouse number is required\" },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"enter mouse number\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}  lg={5}>\r\n                    <Form.Item\r\n                      name=\"mousename\"\r\n                      label=\"Mouse Attributes\"\r\n                      rules={[{ required: true }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Brand and Model\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}  lg={5}>\r\n                    <Form.Item\r\n                      name=\"keyboardnumber\"\r\n                      label=\"Keyboard Number\"\r\n                      rules={[\r\n                        { required: true, message: \"keyboard no required\" },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"enter keyboard number\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}  lg={5}>\r\n                    <Form.Item\r\n                      name=\"keyboardname\"\r\n                      label=\"Keyboard Attributes\"\r\n                      rules={[{ required: true }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Brand and model\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}  lg={5}>\r\n                    <Form.Item\r\n                      name=\"cpunumber\"\r\n                      label=\"CPU Number\"\r\n                      rules={[\r\n                        { required: true, message: \"CPU number is required\" },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"enter cpu number\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}  lg={5}>\r\n                    <Form.Item\r\n                      name=\"cpuname\"\r\n                      label=\"CPU Attributes\"\r\n                      rules={[{ required: true }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Brand, Model, Speed\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  </Row>\r\n                </div>\r\n              )}\r\n\r\n              <Col xs={24} md={24}  lg={5}>\r\n                <Form.Item>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ width: \"100%\", marginLeft: \"0px\",marginTop:'30px' }}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n\r\n        <table\r\n  className=\"table\"\r\n  style={{\r\n    width: \"100%\",\r\n    borderCollapse: \"collapse\",\r\n    marginTop: \"10px\",\r\n  }}\r\n>\r\n  <thead>\r\n    <tr>\r\n      <th\r\n        style={{\r\n          border: \"2px solid black\",\r\n          textAlign: \"center\",\r\n          padding: \"10px\",\r\n          color: \"red\",\r\n        }}\r\n      >\r\n        Item Type\r\n      </th>\r\n      <th\r\n        style={{\r\n          border: \"2px solid black\",\r\n          textAlign: \"center\",\r\n          padding: \"10px\",\r\n          color: \"red\",\r\n        }}\r\n      >\r\n        Installation Date\r\n      </th>\r\n      <th\r\n        style={{\r\n          border: \"2px solid black\",\r\n          textAlign: \"center\",\r\n          padding: \"10px\",\r\n          color: \"red\",\r\n        }}\r\n      >\r\n        Description\r\n      </th>\r\n      <th\r\n        style={{\r\n          border: \"2px solid black\",\r\n          textAlign: \"center\",\r\n          padding: \"10px\",\r\n          color: \"red\",\r\n        }}\r\n      >\r\n        Desktop Info\r\n      </th>\r\n      <th\r\n        style={{\r\n          border: \"2px solid black\",\r\n          textAlign: \"center\",\r\n          padding: \"10px\",\r\n          color: \"red\",\r\n        }}\r\n      >\r\n        Actions\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {labdetails &&\r\n      labdetails.map((data) => (\r\n        <tr key={data._id}>\r\n          <td\r\n            style={{\r\n              border: \"2px solid black\",\r\n              textAlign: \"center\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <b>{data.itemtype}</b>\r\n          </td>\r\n          <td\r\n            style={{\r\n              border: \"2px solid black\",\r\n              textAlign: \"center\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <span>{formattedDates[data._id] || \"Loading...\"}</span>\r\n          </td>\r\n          <td\r\n            style={{\r\n              border: \"2px solid black\",\r\n              textAlign: \"center\",\r\n              width: \"350px\",\r\n            }}\r\n          >\r\n            <div style={{ maxHeight: \"150px\", overflowY: \"auto\" }}>\r\n              {data.description || \"N/A\"}\r\n            </div>\r\n          </td>\r\n          <td\r\n            style={{\r\n              border: \"2px solid black\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {data.itemtype === \"desktop\" && (\r\n              <div\r\n                style={{\r\n                  maxHeight: \"150px\",\r\n                  overflowY: \"auto\",\r\n                }}\r\n              >\r\n                <p>\r\n                  <b>Desktop Number:</b> {data.desktopnumber}\r\n                </p>\r\n                <p>\r\n                  <b>Monitor Number:</b> {data.monitornumber}\r\n                </p>\r\n                <p>\r\n                  <b>Monitor Name:</b> {data.monitorname}\r\n                </p>\r\n                <p>\r\n                  <b>Mouse Number:</b> {data.mousenumber}\r\n                </p>\r\n                <p>\r\n                  <b>Mouse Name:</b> {data.mousename}\r\n                </p>\r\n                <p>\r\n                  <b>Keyboard Number:</b> {data.keyboardnumber}\r\n                </p>\r\n                <p>\r\n                  <b>Keyboard Name:</b> {data.keyboardname}\r\n                </p>\r\n                <p>\r\n                  <b>CPU Number:</b> {data.cpunumber}\r\n                </p>\r\n                <p>\r\n                  <b>CPU Name:</b> {data.cpuname}\r\n                </p>\r\n              </div>\r\n            )}\r\n          </td>\r\n          <td\r\n            style={{\r\n              border: \"2px solid black\",\r\n              textAlign: \"center\",\r\n              padding: \"10px\",\r\n            }}\r\n          >\r\n            <i\r\n              className=\"fa-solid fa-trash icon\"\r\n              style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n              onClick={() => {\r\n                if (window.confirm(\"Do you want to delete?\")) {\r\n                  handledelete(data._id);\r\n                }\r\n              }}\r\n            ></i>\r\n            <i\r\n              className=\"fa-solid fa-pen-to-square edit\"\r\n              style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n              onClick={() => {\r\n                if (window.confirm(\"Do you want to edit?\")) {\r\n                  navigate(`/labdetailedit/${data._id}`);\r\n                }\r\n              }}\r\n            ></i>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n  </tbody>\r\n</table>\r\n\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Labdetail;\r\n","import React,{useEffect} from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/Homepagestyles.css\";\r\n \r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../redux/features/roleslice\";\r\n\r\nconst Layout2 = ({ children }) => {\r\n  const roles=useSelector(state=>state.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n       useEffect(() => {\r\n          if (roles === \"admin\" || roles === \"editor\") {\r\n            localStorage.setItem(\"role\", roles);\r\n          }else if(roles===\"viewer\"){\r\n            localStorage.setItem(\"role\", roles);\r\n          }\r\n        }, [roles]);\r\n      \r\n        useEffect(() => {\r\n          const savedRole = localStorage.getItem(\"role\");\r\n          if (savedRole && savedRole !== roles) {\r\n            dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n          }\r\n        }, [dispatch]);\r\n  \r\n  const navigate = useNavigate();\r\n  const handlelogout = async () => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      localStorage.clear();\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n\r\n \r\n  return (\r\n    <>\r\n    {roles===\"viewer\"?(\r\n       <div className=\"logout\">\r\n          <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => {\r\n            navigate(\"/techsum\");\r\n          }}\r\n        >\r\n          TECHNICAL SUMMARY\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => {\r\n            navigate(\"/non-tech-sum\");\r\n          }}\r\n        >\r\n          NON-TECHNICAL SUMMARY\r\n        </button>\r\n        <button className=\"btn btn-danger\" onClick={handlelogout}>\r\n          LOGOUT\r\n        </button>\r\n       </div>\r\n    ):(\r\n<div className=\"logout\">\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => {\r\n            navigate(\"/\");\r\n          }}\r\n        >\r\n          HOME\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => {\r\n            navigate(\"/techsum\");\r\n          }}\r\n        >\r\n          TECHNICAL SUMMARY\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => {\r\n            navigate(\"/non-tech-sum\");\r\n          }}\r\n        >\r\n          NON-TECHNICAL SUMMARY\r\n        </button>\r\n        <button className=\"btn btn-danger\" onClick={handlelogout}>\r\n          LOGOUT\r\n        </button>\r\n      </div>\r\n    )}\r\n      \r\n      {children}\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout2\r\n","import React,{useEffect} from 'react'\r\nimport \"../styles/Homepagestyles.css\";\r\nimport { useNavigate } from \"react-router-dom\"; \r\nimport Layout2 from '../components/Layout2';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from '../redux/features/roleslice';\r\n\r\nconst Summary = () => {\r\n  const navigate = useNavigate();\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n  return (\r\n    <>\r\n    <Layout2> \r\n     <div class=\"container\">\r\n          <div class=\"d-flex\">\r\n            <div\r\n              class=\"box\"\r\n              id=\"technical\"\r\n              onClick={() => {\r\n                \r\n                navigate(\"/techsum\");\r\n                 \r\n              }}\r\n            >\r\n              <b>TECHNICAL SUMMARY</b>\r\n            </div>\r\n            <div\r\n              class=\"box\"\r\n              id=\"non-technical\"\r\n              onClick={() => {\r\n                navigate(\"/non-tech-sum\");\r\n              }}\r\n            >\r\n              <b>NON-TECHNICAL SUMMARY</b>\r\n            </div>\r\n\r\n            </div>\r\n            </div>\r\n     \r\n            </Layout2>\r\n       \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Summary\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  message,\r\n  Select,\r\n  DatePicker,\r\n  Divider,\r\n  Button,\r\n} from \"antd\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Labdetailedit = () => {\r\n  const [form] = Form.useForm();\r\n  const [labdetail, setLabdetail] = useState(null);\r\n  const [itemtype, setItemtype] = useState(null);\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n   useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n\r\n  const getlabdetail = async () => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/lab/getlabdetailforedit\",\r\n        {\r\n          labdetailid: params.labdetailid,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setLabdetail(res.data.data);\r\n        const { installationdate, ...otherdata } = res.data.data;\r\n        form.setFieldsValue({\r\n          ...otherdata,\r\n          installationdate: moment(installationdate),\r\n        });\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getlabdetail();\r\n  }, []);\r\n\r\n  const handlefinish = async (values) => {\r\n    if (values.itemtype === \"other\" && values.otheritemtype) {\r\n      values.itemtype = values.otheritemtype;\r\n      delete values.otheritemtype;\r\n    }\r\n    values.labdetailid = params.labdetailid;\r\n\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/lab/updatedetail\", values, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.history.back();\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"spmething went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div\r\n          className=\"form-div\"\r\n          style={{\r\n            border: \"1px solid black\",\r\n            width: \"300px\",\r\n            float: \"left\",\r\n            marginTop: \"10px\",\r\n          }}\r\n        >\r\n          <Form\r\n            layout=\"vertical\"\r\n            onFinish={handlefinish}\r\n            className=\"m-2\"\r\n            form={form}\r\n          >\r\n            <h3 className=\"text-center\">Edit Detail</h3>\r\n            <Row gutter={20}>\r\n              <Col xs={24} md={24}>\r\n                <Form.Item\r\n                  name=\"itemtype\"\r\n                  label=\"Item Type\"\r\n                  rules={[{ required: true, message: \"Item type is required\" }]}\r\n                >\r\n                  <Select\r\n                    placeholder=\"select item type\"\r\n                    onChange={(value) => setItemtype(value)}\r\n                  >\r\n                    <Option value=\"speaker\">Speaker</Option>\r\n                    <Option value=\"mic\">Microphone</Option>\r\n                    <Option value=\"desktop\">Desktop Computer</Option>\r\n                    <Option value=\"other\">Other</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              {itemtype === \"other\" && (\r\n                <Col xs={24} md={24}>\r\n                  <Form.Item\r\n                    label=\"other item name\"\r\n                    name=\"otheritemtype\"\r\n                    rules={[\r\n                      { required: true, message: \"other item name required\" },\r\n                    ]}\r\n                  >\r\n                    <Input type=\"text\" placeholder=\"type item name\" />\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              <Col xs={24} md={24}>\r\n                <Form.Item\r\n                  name=\"installationdate\"\r\n                  label=\"Installation Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Installation date is required\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker style={{ width: \"100%\" }} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24}>\r\n                <Form.Item\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  rules={[\r\n                    { required: true, message: \"Description is required\" },\r\n                  ]}\r\n                >\r\n                  <Input.TextArea\r\n                    placeholder=\"enter description\"\r\n                    rows={4}\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              {labdetail?.itemtype === \"desktop\" && (\r\n                <div style={{ width: \"100%\" }}>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"desktopnumber\"\r\n                      label=\"Desktop Number\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Desktop number is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"text\"\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"enter desktop number\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"ipaddress\"\r\n                      label=\"IP Address\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Ip address is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"text\"\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"enter ip address\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"monitornumber\"\r\n                      label=\"Monitor Number\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Monitor number is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"enter monitor number\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"monitorname\"\r\n                      label=\"Monitor Attributes\"\r\n                      rules={[{ required: true }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Brand, Model, Size\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"mousenumber\"\r\n                      label=\"Mouse Number\"\r\n                      rules={[\r\n                        { required: true, message: \"Mouse number is required\" },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"enter mouse number\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"mousename\"\r\n                      label=\"Mouse Attributes\"\r\n                      rules={[{ required: true }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Brand and Model\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"keyboardnumber\"\r\n                      label=\"Keyboard Number\"\r\n                      rules={[\r\n                        { required: true, message: \"keyboard no required\" },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"enter keyboard number\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"keyboardname\"\r\n                      label=\"Keyboard Attributes\"\r\n                      rules={[{ required: true }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Brand and model\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"cpunumber\"\r\n                      label=\"CPU Number\"\r\n                      rules={[\r\n                        { required: true, message: \"CPU number is required\" },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"enter cpu number\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"cpuname\"\r\n                      label=\"CPU Attributes\"\r\n                      rules={[{ required: true }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Brand, Model, Speed\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </div>\r\n              )}\r\n\r\n              <Col xs={24} md={24}>\r\n                <Form.Item>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ width: \"100%\", marginLeft: \"0px\" }}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Labdetailedit;\r\n","import React from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport Layout2 from \"../../components/Layout2\";\r\n\r\nconst data = [\r\n    {\r\n      name: \"Teacher\",\r\n      path: \"/teachersum\",\r\n      icon: \"fa-solid fa-chalkboard-user\",\r\n    },\r\n    {\r\n      name: \"Class\",\r\n      path: \"/classsum\",\r\n      icon: \"fa-solid fa-house\",\r\n    },\r\n    {\r\n      name: \"Lab\",\r\n      path: \"/labsum\",\r\n      icon: \"fa-solid fa-computer\",\r\n    },\r\n    {\r\n      name: \"Server\",\r\n      path: \"/serversum\",\r\n      icon: \"fa-solid fa-server\",\r\n    }\r\n     \r\n  ];\r\n\r\nconst Techsum = () => {\r\n    const navigate = useNavigate();\r\n  return (\r\n    <>\r\n    <Layout2> \r\n    <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'24px',fontFamily:'bold'}}><p>TECHNICAL SUMMARY</p></div>\r\n       <div style={{marginTop:\"8rem\"}}> \r\n      <section className=\"container1\">\r\n          {data.map((data) => {\r\n            return (\r\n              <div\r\n                className=\"box1\"\r\n                onClick={() => {\r\n                  navigate(data.path);\r\n                }}\r\n              >\r\n                <i class={data.icon}></i>\r\n\r\n                <b>{data.name}</b>\r\n              </div>\r\n            );\r\n          })}\r\n        </section>\r\n        </div>\r\n        </Layout2>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Techsum\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout2 from \"../../components/Layout2\";\r\nimport { message, Select, Table } from \"antd\";\r\nimport axios, { all } from \"axios\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Labsum = () => {\r\n  const [labs, setLabs] = useState([]);\r\n  const [labdetails, setlabdetails] = useState([]);\r\n\r\n  const [labnumbers, setLabnumbers] = useState({});\r\nconst [totallabs,setTotallabs]=useState([]);\r\nconst[labnums,setLabnums]=useState(0);\r\nconst[sortorder,setSortorder]=useState('oldtonew')\r\n\r\n  const [item, setItem] = useState(\"all\");\r\n  const [displaydata, setDisplaydata] = useState();\r\n  const [buildings,setBuildings]=useState([]);\r\n  const [buildingname,setBuildingname]=useState('none');\r\n  const [buildingobject,setBuildingobject]=useState({});\r\n\r\n  const[labname,setLabname]=useState('all');\r\n  const[alllabname,setAlllabname]=useState({});\r\n\r\n  \r\n  \r\n\r\n  const getalllabs = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tech/lab/alllabs\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setLabs(res.data.data);\r\n      } else {\r\n        message.error(res.data.messgae);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getlabdetails = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tech/lab/labdetails\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setlabdetails(res.data.data);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const labnos = async () => {\r\n    const labno = {};\r\n \r\n    const alllabdetails = labdetails;\r\n    for (let data of alllabdetails) {\r\n      labno[data._id] = await labnumber(data.labid);\r\n    }\r\n    setLabnumbers(labno);\r\n  };\r\n\r\n  const labnumber = async (labid) => {\r\n    const alllabs = labs;\r\n    for (let data of alllabs) {\r\n      if (data._id === labid) {\r\n        return data.labno;\r\n      }\r\n    }\r\n  };\r\n\r\n  const buildingnames = async () => {\r\n    const buildings = {};\r\n \r\n    const alllabdetails = labdetails;\r\n    for (let data of alllabdetails) {\r\n      buildings[data._id] = await b_names(data.labid);\r\n    }\r\n    setBuildingobject(buildings);\r\n  };\r\n\r\n  const b_names = async (labid) => {\r\n    const alllabs = labs;\r\n    for (let data of alllabs) {\r\n      if (data._id === labid) {\r\n        return data.buildingname;\r\n      }\r\n    }\r\n  };\r\n\r\n  const labnames = async () => {\r\n    const buildings = {};\r\n \r\n    const alllabdetails = labdetails;\r\n    for (let data of alllabdetails) {\r\n      buildings[data._id] = await lab_names(data.labid);\r\n    }\r\n    setAlllabname(buildings);\r\n  };\r\n\r\n  const lab_names = async (labid) => {\r\n    const alllabs = labs;\r\n    for (let data of alllabs) {\r\n      if (data._id === labid) {\r\n        return data.labname;\r\n      }\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    getlabdetails();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getalllabs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    labnos();\r\n  }, [labdetails, labs]);\r\n\r\n  useEffect(() => {\r\n    buildingnames();\r\n  }, [labdetails, labs]);\r\n\r\n  \r\n  useEffect(() => {\r\n    labnames();\r\n  }, [labdetails, labs]);\r\n\r\n  useEffect(()=>{\r\nconst labnums=[...new Set(labs.map(data=>data.labname))];\r\nsetTotallabs(labnums);\r\n  },[labs]);\r\n\r\n  useEffect(()=>{\r\nconst buildings=[...new Set(labs.map(data=>data.buildingname))];\r\nsetBuildings(buildings);\r\n  },[labs])\r\n\r\n  const initialprint = async () => {\r\n    if (item === \"all\") {\r\n      const tabledatas = labdetails.map((data) => ({\r\n        key: data._id,\r\n        product:\r\n          data.itemtype === \"desktop\" ? data.desktopnumber : data.itemtype,\r\n        date: new Date(data.installationdate).toLocaleDateString(),\r\n        description:\r\n        data.description +\" \"+\r\n        (data.desktopnumber ? `desktopnumber=${data.desktopnumber}` : \" \") +\" \"+\r\n        (data.ipaddress ? `ipaddress=${data.ipaddress}` : \"\") +\" \"+\r\n        (data.monitornumber ? ` monitornumber=${data.monitornumber}` : \"\") +\" \"+\r\n        (data.monitorname ? ` monitorname=${data.monitorname}` : \"\") +\" \"+\r\n        (data.mousenumber ? ` mousenumber=${data.mousenumber}` : \"\") +\" \"+\r\n        (data.mousename ? ` mousename=${data.mousename}` : \"\") +\" \"+\r\n        (data.keyboardnumber\r\n          ? ` keyboardnumber=${data.keyboardnumber}`\r\n          : \"\") +\" \"+\r\n        (data.keyboardname ? ` keyboardname=${data.keyboardname}` : \"\") +\" \"+\r\n        (data.cpunumber ? ` cpunumber=${data.cpunumber}` : \"\") +\" \"+\r\n        (data.cpuname ? ` cpuname=${data.cpuname}` : \"\"),\r\n        labname: alllabname[data._id]\r\n      }));\r\n      setDisplaydata(tabledatas);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    initialprint();\r\n  }, [labdetails,alllabname]);\r\n\r\n  const tabledata = (item, lab_name,order,alllabname) => {\r\n    let displaydatas;\r\n    if (item === 'other') {\r\n      if (lab_name==='all') {\r\n        \r\n        const excludeitem = [\"speaker\", \"desktop\", \"microphone\"];\r\n        displaydatas = labdetails.filter(\r\n          (data) => !excludeitem.includes(data.itemtype)\r\n        );\r\n      }else {\r\n        const excludeitem = [\"speaker\", \"desktop\", \"microphone\"];\r\n        displaydatas = labdetails.filter(\r\n          (data) =>\r\n            !excludeitem.includes(data.itemtype) &&\r\n            alllabname[data._id]===lab_name\r\n        );\r\n      } \r\n      \r\n    } else if (item === \"all\") {\r\n      if (lab_name==='all') {\r\n        displaydatas = labdetails;  \r\n      } else {\r\n        displaydatas = labdetails.filter(\r\n          (data) => alllabname[data._id]===lab_name\r\n        );\r\n      } \r\n    } else {\r\n      if (lab_name==='all') {\r\n        displaydatas = labdetails.filter((data) => data.itemtype === item );\r\n      } else {\r\n        displaydatas = labdetails.filter(\r\n          (data) => data.itemtype === item && alllabname[data._id]===lab_name\r\n        );\r\n      } \r\n      }\r\n    \r\n  \r\ndisplaydatas.sort((a,b)=>{\r\n  const dateA=new Date(a.installationdate);\r\n  const dateB=new Date(b.installationdate);\r\n  return order==='newtoold'?dateB-dateA:dateA-dateB;\r\n});\r\n\r\n    const tabledatas = displaydatas.map((data) => ({\r\n      key: data._id,\r\n      product:\r\n        data.itemtype === \"desktop\" ? data.desktopnumber : data.itemtype,\r\n      date: new Date(data.installationdate).toLocaleDateString(),\r\n      description:\r\n        data.description +' '+\r\n        (data.desktopnumber ? ` desktopnumber=${data.desktopnumber}` : \"\") +' '+\r\n        (data.ipaddress ? ` ipaddress=${data.ipaddress}` : \"\") +' '+\r\n        (data.monitornumber ? ` monitornumber=${data.monitornumber}` : \"\") +' '+\r\n        (data.monitorname ? ` monitorname=${data.monitorname}` : \"\") +' '+\r\n        (data.mousenumber ? ` mousenumber=${data.mousenumber}` : \"\") +' '+\r\n        (data.mousename ? ` mousename=${data.mousename}` : \"\") +' '+\r\n        (data.keyboardnumber\r\n          ? ` keyboardnumber=${data.keyboardnumber}`\r\n          : \"\") +' '+\r\n        (data.keyboardname ? ` keyboardname=${data.keyboardname}` : \"\") +' '+\r\n        (data.cpunumber ? ` cpunumber=${data.cpunumber}` : \"\") +' '+\r\n        (data.cpuname ? ` cpuname=${data.cpuname}` : \"\"),\r\n      labname: alllabname[data._id]\r\n    }));\r\n    setDisplaydata(tabledatas);  \r\n  };\r\n  \r\n\r\n  const columns =\r\n    labname === \"all\"\r\n      ? [\r\n          { title: \"DESKTOP NUMBER/ITEM NAME\", dataIndex: \"product\", key: \"product\" },\r\n          { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n          {\r\n            title: \"DESCRIPTION/DESKTOP INFO.\",\r\n            dataIndex: \"description\",\r\n            key: \"description\",\r\n          },\r\n          { title: \"LAB NAME\", dataIndex: \"labname\", key: \"labname\" },\r\n        ]\r\n      : [\r\n          {\r\n            title: \"ITEM NAME/DESKTOP NUMBER\",\r\n            dataIndex: \"product\",\r\n            key: \"product\",\r\n          },\r\n          { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n          {\r\n            title: \"DESCRIPTION\",\r\n            dataIndex: \"description\",\r\n            key: \"description\",\r\n          },\r\n        \r\n        ];\r\nconst itemchange=(value)=>{\r\nsetItem(value);\r\n//tabledata(item,labnums);\r\n}\r\n\r\nconst labnamechange=(value)=>{\r\n  setLabname(value);\r\n // tabledata(item,labnums);\r\n}\r\nuseEffect(()=>{\r\ntabledata(item,labname,sortorder,alllabname);\r\n},[item,labname,sortorder,alllabname])\r\n\r\n  return (\r\n    <>\r\n   \r\n      <Layout2>\r\n      <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'24px',fontFamily:'bold'}}><p>LAB SUMMARY</p></div>\r\n        <div className=\"d-flex justify-content-center align-items-center gap-2\" style={{width:\"100%\"}}>\r\n   \r\n        <span>SELECT ITEM : </span>\r\n          <Select placeholder=\"choose an item\" onChange={itemchange}  style={{width:\"150px\"}}>\r\n            <Option value=\"desktop\">Desktop</Option>\r\n            <Option value=\"microphone\">Microphone</Option>\r\n            <Option value=\"speaker\">Speaker</Option>\r\n            <Option value=\"other\">Other</Option>\r\n            <Option value=\"all\">All</Option>\r\n          </Select>\r\n          <span>SELECT LAB : </span>\r\n           <Select placeholder=\"choose lab name\" onChange={labnamechange}  style={{width:\"150px\"}}>\r\n           <Option value=\"all\">All</Option>\r\n           { totallabs.map((data)=>(\r\n            <Option value={data}>{data}</Option>\r\n           ))}\r\n\r\n           </Select>\r\n \r\n\r\n           <span>SORT ORDER</span>\r\n           <Select placeholder='select sort order' onChange={(value)=>{setSortorder(value)}}>\r\n            <Option value='newtoold'>New to Old</Option>\r\n            <Option value='oldtonew'>Old to New</Option>\r\n           </Select>\r\n            \r\n        </div>\r\n        <button onClick={()=>{window.print()}} style={{marginLeft:'5px',borderRadius:\"10px\",cursor:'pointer' }}>PRINT</button>\r\n        <Table columns={columns} dataSource={displaydata} pagination={false} />\r\n      </Layout2>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Labsum;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message } from \"antd\";\r\nimport axios from \"axios\";\r\n import \"../../styles/Techpagestyles.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst Teacherpage = () => {\r\n  const navigate=useNavigate();\r\n  const [teacherlist,setTeacherlist]=useState([]);\r\n\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    if (roles === \"admin\" || roles === \"editor\") {\r\n      localStorage.setItem(\"role\", roles);\r\n    }\r\n  }, [roles]);\r\n\r\n  useEffect(() => {\r\n    const savedRole = localStorage.getItem(\"role\");\r\n    if (savedRole && savedRole !== roles) {\r\n      dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n    }\r\n  }, [dispatch]);\r\n  \r\n    const handleform = async (values) => {\r\n        try {\r\n          const res = await axios.post(\"/api/v1/tech/teacher/addteacher\", values);\r\n    \r\n          if (res.data.success) {\r\n            message.success(res.data.message);\r\n            window.location.reload();\r\n          } else {\r\n            message.error(res.data.message);\r\n             window.location.reload();\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n\r\n\r\n      const getallteacher = async () => {\r\n        const res = await axios.get(\"/api/v1/tech/teacher/getallteacher\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n    \r\n        if (res.data.success) {\r\n          setTeacherlist(res.data.data);\r\n          message.success(\"all teachers get\");\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n      };\r\n    \r\n      useEffect(() => {\r\n        getallteacher();\r\n      }, []);\r\n\r\n      const handledelete = async (id) => {\r\n        try {\r\n          // eslint-disable-next-line no-restricted-globals\r\n          var result = confirm(\"really want to delete\");\r\n          if (result) {\r\n            const res = await axios.post(\r\n              \"/api/v1/tech/teacher/deleteteacher\",\r\n              { id },\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n              }\r\n            );\r\n            if (res.data.success) {\r\n              message.success(res.data.message);\r\n            } else {\r\n              message.error(res.data.message);\r\n            }\r\n            window.location.reload();\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n\r\n  return (\r\n    <>\r\n    <Layout>\r\n    <div className=\"\">\r\n          <Form layout=\"vertical\" onFinish={handleform} className=\"m-2\">\r\n            <h3 className=\"text-center\">Teacher's Room</h3>\r\n            <Row gutter={20}>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Teacher name\"\r\n                  name=\"teachername\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type teacher's name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Room number\"\r\n                  name=\"roomno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type room number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Building name\"\r\n                  name=\"buildingname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type building name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Floor number\"\r\n                  name=\"floorno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type floor number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={4}>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"180px\", marginTop: \"25px\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n\r\n        {teacherlist &&\r\n        teacherlist.map((data) => {\r\n          return (\r\n            <div className=\"card m-2 cardstyle\">\r\n              <div\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"card-header\"\r\n                onClick={() => {\r\n                  navigate(`/teacherdetails/${data._id}`);\r\n                }}\r\n              >\r\n                Teacher Name:\r\n                <b> {data.teachername}</b>\r\n              </div>\r\n\r\n              <div className=\"card-body p-2\">\r\n                <p>\r\n                  <b>Room No: </b>\r\n                  {data.roomno}\r\n                </p>\r\n                <p>\r\n                  <b>Building Name: </b>\r\n                  {data.buildingname}\r\n                </p>\r\n                <p>\r\n                  <b>Floor No: </b>\r\n                  {data.floorno}\r\n                </p>\r\n                <p>\r\n                  <button\r\n                    onClick={() => {\r\n                      // eslint-disable-next-line no-restricted-globals\r\n                      let result = confirm(\"really want to edit\");\r\n                      if (result) {\r\n                        navigate(`/teacheredit/${data._id}`);\r\n                      }\r\n                    }}\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      handledelete(data._id);\r\n                    }}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n    </Layout>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Teacherpage\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport { useParams,useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\n const Teacheredit = () => {\r\n const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [teacherinfo, setTeacherinfo] = useState(null);\r\n    \r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n      useEffect(() => {\r\n        if (roles === \"admin\" || roles === \"editor\") {\r\n          localStorage.setItem(\"role\", roles);\r\n        }\r\n      }, [roles]);\r\n    \r\n      useEffect(() => {\r\n        const savedRole = localStorage.getItem(\"role\");\r\n        if (savedRole && savedRole !== roles) {\r\n          dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n        }\r\n      }, [dispatch]);\r\n      \r\n    const getteacherdata = async () => {\r\n        const res = await axios.post(\r\n          \"/api/v1/tech/teacher/getteacherdata\",\r\n          {\r\n            teacherid: params.teacherid,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        if (res.data.success) {\r\n          setTeacherinfo(res.data.data);\r\n          //   Form.setFieldsValue(res.data.data);\r\n          //console.log(labdata);\r\n          message.success(res.data.message);\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n      };\r\n    \r\n      useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        getteacherdata();\r\n      }, []);\r\n\r\n      const handleform = async (values) => {\r\n        values.teacherid = params.teacherid;\r\n        try {\r\n          const res = await axios.post(\"/api/v1/tech/teacher/editteacher\", values, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          });\r\n    \r\n          if (res.data.success) {\r\n            message.success(res.data.message);\r\n            navigate(\"/teacher\");\r\n          } else {\r\n            message.error(res.data.message);\r\n          }\r\n          window.location.reload();\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n\r\n   return (\r\n     <>\r\n     <Layout>\r\n        {teacherinfo &&\r\n        <div className=\"form-div\">\r\n                  <Form layout=\"vertical\" onFinish={handleform} className=\"m-2\" initialValues={teacherinfo}>\r\n                    <h3 className=\"text-center\">Edit Teacher</h3>\r\n                    <Row gutter={20}>\r\n                      <Col xs={24} md={24} lg={5}>\r\n                        <Form.Item\r\n                          label=\"Teacher name\"\r\n                          name=\"teachername\"\r\n                          rules={[{ required: true }]}\r\n                        >\r\n                          <Input type=\"text\" placeholder=\"type teacher's name\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} md={24} lg={5}>\r\n                        <Form.Item\r\n                          label=\"Room number\"\r\n                          name=\"roomno\"\r\n                          rules={[{ required: true }]}\r\n                        >\r\n                          <Input type=\"number\" placeholder=\"type room number\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} md={24} lg={5}>\r\n                        <Form.Item\r\n                          label=\"Building name\"\r\n                          name=\"buildingname\"\r\n                          rules={[{ required: true }]}\r\n                        >\r\n                          <Input type=\"text\" placeholder=\"type building name\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} md={24} lg={5}>\r\n                        <Form.Item\r\n                          label=\"Floor number\"\r\n                          name=\"floorno\"\r\n                          rules={[{ required: true }]}\r\n                        >\r\n                          <Input type=\"number\" placeholder=\"type floor number\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} md={24} lg={4}>\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          style={{ width: \"180px\", marginTop: \"25px\" }}\r\n                          type=\"submit\"\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </div>\r\n }\r\n     </Layout>\r\n       \r\n     </>\r\n   )\r\n }\r\n \r\n export default Teacheredit\r\n ","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message, Select, DatePicker } from \"antd\";\r\n\r\nimport \"../../styles/Newtechpagestyles.css\";\r\n\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst Teacherdetail = () => {\r\n  const [teacherdetails, setTeacherdetails] = useState([]);\r\n  const [itemtype, setItemtype] = useState();\r\n  const [formattedDates, setFormattedDates] = useState({});\r\n  const params = useParams();\r\n   const [teachername,setTeachername]=useState();\r\n    const [teachers,setTeachers]=useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    if (roles === \"admin\" || roles === \"editor\") {\r\n      localStorage.setItem(\"role\", roles);\r\n    }\r\n  }, [roles]);\r\n\r\n  useEffect(() => {\r\n    const savedRole = localStorage.getItem(\"role\");\r\n    if (savedRole && savedRole !== roles) {\r\n      dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const getalllabs = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tech/teacher/getallteacher\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setTeachers(res.data.data);\r\n      } else {\r\n        message.error(res.data.messgae);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    const lab=teachers.find((data)=>data._id===params.teacherid);\r\n     if(lab){\r\n      setTeachername(lab.teachername);\r\n     }\r\n      },[teachers,params.teacherid]);\r\n\r\n   useEffect(() => {\r\n      getalllabs();\r\n    }, []);\r\n  \r\n  const handlefinish = async (values) => {\r\n    // console.log(\"Received values:\", values);\r\n    values.teacherid = params.teacherid;\r\n    if (values.itemtype === \"other\" && values.otheritemtype) {\r\n      values.itemtype = values.otheritemtype;\r\n      delete values.otheritemtype;\r\n    }\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/teacher/addteacherdetail\",\r\n        values\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n  /*\r\n  const processdates = async () => {\r\n    const dates = {};\r\n    const details = teacherdetails;\r\n    for (let data of details) {\r\n      dates[data._id] = await freshdate(data.installationdate);\r\n    }\r\n    setFormattedDates(dates);\r\n  };\r\n*/\r\n  const getdetails = async () => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/teacher/getdetailofteacher\",\r\n        {\r\n          teacherid: params.teacherid,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setTeacherdetails(res.data.data);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n  /*\r\n  const freshdate = async (isodate) => {\r\n    const date = moment(isodate);\r\n    const day = date.date();\r\n    let suffix = \"\";\r\n    const j = day % 10;\r\n    const k = day % 100;\r\n\r\n    if (j === 1 && k !== 11) {\r\n      suffix = \"st\";\r\n    } else if (j === 2 && k !== 12) {\r\n      suffix = \"nd\";\r\n    } else if (j === 3 && k !== 13) {\r\n      suffix = \"rd\";\r\n    } else {\r\n      suffix = \"th\";\r\n    }\r\n\r\n    const freshdate = `${day}${suffix} ${date.format(\"MMMM-YYYY\")} `;\r\n    return freshdate;\r\n  };\r\n\r\n   \r\n*/\r\n  useEffect(() => {\r\n    getdetails();\r\n  }, []);\r\n  /*\r\n  useEffect(() => {\r\n    processdates();\r\n  }, [teacherdetails]);\r\n*/\r\n  const handledelete = async (id) => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/teacher/deleteteacherdetail\",\r\n        {\r\n          id,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'34px',fontFamily:'bold'}}><p>{teachername}</p></div>\r\n                <div\r\n                  className=\"form-div\"\r\n                  style={{\r\n                    border: \"1px solid black\",\r\n                    width: \"100%\",\r\n                    float: \"left\",\r\n                    margin: \"2px\",\r\n                  }}\r\n                >\r\n                  <Form layout=\"vertical\" onFinish={handlefinish}>\r\n                    <h5 className=\"text-center\">Add Item</h5>\r\n                    <Row gutter={20}>\r\n                      <Col xs={24} md={24} lg={5}>\r\n                        <Form.Item\r\n                          name=\"itemtype\"\r\n                          label=\"Item Type\"\r\n                          rules={[{ required: true, message: \"Item type is required\" }]}\r\n                        >\r\n                          <Select\r\n                            placeholder=\"select item type\"\r\n                            onChange={(value) => setItemtype(value)}\r\n                          >\r\n                    <Option value=\"speaker\">Speaker</Option>\r\n                    <Option value=\"microphone\">Microphone</Option>\r\n                    <Option value=\"desktop\">Desktop Computer</Option>\r\n                    <Option value=\"laptop\">Laptop</Option>\r\n                    <Option value=\"projector\">Projector</Option>\r\n                    <Option value=\"interactive-whiteboard\">\r\n                      Interactive Whiteboard\r\n                    </Option>\r\n                    <Option value=\"printer\">Printer</Option>\r\n                    <Option value=\"scanner\">Scanner</Option>\r\n                    <Option value=\"router\">Router</Option>\r\n                    <Option value=\"switch\">Network Switch</Option>\r\n                    <Option value=\"server\">Server</Option>\r\n                    <Option value=\"tablet\">Tablet</Option>\r\n                    <Option value=\"smartphone\">Smartphone</Option>\r\n                    <Option value=\"external-hard-drive\">\r\n                      External Hard Drive\r\n                    </Option>\r\n                    <Option value=\"usb-device\">USB Device</Option>\r\n                    <Option value=\"camera\">Camera</Option>\r\n                    <Option value=\"document-camera\">Document Camera</Option>\r\n                    <Option value=\"monitor\">Monitor</Option>\r\n                    <Option value=\"headphones\">Headphones</Option>\r\n                    <Option value=\"webcam\">Webcam</Option>\r\n                    <Option value=\"vr-headset\">VR Headset</Option>\r\n                    <Option value=\"coding-kits\">Coding Kits</Option>\r\n                    <Option value=\"drone\">Drone</Option>\r\n                    <Option value=\"3d-printer\">3D Printer</Option>\r\n                    <Option value=\"arduino-kits\">Arduino Kits</Option>\r\n                    <Option value=\"raspberry-pi\">Raspberry Pi</Option>\r\n                    <Option value=\"network-tools\">Network Tools</Option>\r\n                    <Option value=\"other\">Other</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              \r\n                    {itemtype === \"other\" && (\r\n                                   <Col xs={24} md={24}  lg={5}>\r\n                                     <Form.Item\r\n                                       label=\"other item name\"\r\n                                       name=\"otheritemtype\"\r\n                                       rules={[\r\n                                         { required: true, message: \"other item name required\" },\r\n                                       ]}\r\n                                     >\r\n                                       <Input type=\"text\" placeholder=\"type item name\" />\r\n                                     </Form.Item>\r\n                                   </Col>\r\n                                 )}\r\n                                 <Col xs={24} md={24}  lg={5}>\r\n                                   <Form.Item\r\n                                     name=\"installationdate\"\r\n                                     label=\"Installation Date\"\r\n                                     rules={[\r\n                                       {\r\n                                         required: true,\r\n                                         message: \"Installation date is required\",\r\n                                       },\r\n                                     ]} \r\n                                   >\r\n                                     <DatePicker style={{ width: \"100%\" }} />\r\n                                   </Form.Item>\r\n                                 </Col>\r\n                                 <Col xs={24} md={24}  lg={5}>\r\n                                   <Form.Item\r\n                                     name=\"description\"\r\n                                     label=\"Description\"\r\n                                     rules={[\r\n                                       { required: true, message: \"Description is required\" },\r\n                                     ]}\r\n                                   >\r\n                                     <Input.TextArea\r\n                                       placeholder=\"enter description\"\r\n                                       rows={1}\r\n                                       style={{ width: \"100%\" }}\r\n                                     />\r\n                                   </Form.Item>\r\n                                 </Col>\r\n                   \r\n                                 {itemtype === \"desktop\" && (\r\n                                   <div style={{ width: \"100%\" }}>\r\n                                     <Row gutter={20}>\r\n                                     <Col xs={24} md={24}  lg={5}>\r\n                                       <Form.Item\r\n                                         name=\"desktopnumber\"\r\n                                         label=\"Desktop Number\"\r\n                                         rules={[\r\n                                           {\r\n                                             required: true,\r\n                                             message: \"Desktop number is required\",\r\n                                           },\r\n                                         ]}\r\n                                       >\r\n                                         <Input\r\n                                           type=\"text\"\r\n                                           style={{ width: \"100%\" }}\r\n                                           placeholder=\"enter desktop number\"\r\n                                         />\r\n                                       </Form.Item>\r\n                                     </Col>\r\n                                     <Col xs={24} md={24}  lg={5}>\r\n                                       <Form.Item\r\n                                         name=\"ipaddress\"\r\n                                         label=\"IP Address\"\r\n                                         rules={[\r\n                                           {\r\n                                             required: true,\r\n                                             message: \"Ip address is required\",\r\n                                           },\r\n                                         ]}\r\n                                       >\r\n                                         <Input\r\n                                           type=\"text\"\r\n                                           style={{ width: \"100%\" }}\r\n                                           placeholder=\"enter ip address\"\r\n                                         />\r\n                                       </Form.Item>\r\n                                     </Col>\r\n                                     <Col xs={24} md={24}  lg={5}>\r\n                                       <Form.Item\r\n                                         name=\"monitornumber\"\r\n                                         label=\"Monitor Number\"\r\n                                         rules={[\r\n                                           {\r\n                                             required: true,\r\n                                             message: \"Monitor number is required\",\r\n                                           },\r\n                                         ]}\r\n                                       >\r\n                                         <Input type=\"text\" placeholder=\"enter monitor number\" />\r\n                                       </Form.Item>\r\n                                     </Col>\r\n                                     <Col xs={24} md={24}  lg={5}>\r\n                                       <Form.Item\r\n                                         name=\"monitorname\"\r\n                                         label=\"Monitor Attributes\"\r\n                                         rules={[{ required: true }]}\r\n                                       >\r\n                                         <Input type=\"text\" placeholder=\"Brand, Model, Size\" />\r\n                                       </Form.Item>\r\n                                     </Col>\r\n                                     <Col xs={24} md={24}  lg={5}>\r\n                                       <Form.Item\r\n                                         name=\"mousenumber\"\r\n                                         label=\"Mouse Number\"\r\n                                         rules={[\r\n                                           { required: true, message: \"Mouse number is required\" },\r\n                                         ]}\r\n                                       >\r\n                                         <Input type=\"text\" placeholder=\"enter mouse number\" />\r\n                                       </Form.Item>\r\n                                     </Col>\r\n                                     <Col xs={24} md={24}  lg={5}>\r\n                                       <Form.Item\r\n                                         name=\"mousename\"\r\n                                         label=\"Mouse Attributes\"\r\n                                         rules={[{ required: true }]}\r\n                                       >\r\n                                         <Input type=\"text\" placeholder=\"Brand and Model\" />\r\n                                       </Form.Item>\r\n                                     </Col>\r\n                                     <Col xs={24} md={24}  lg={5}>\r\n                                       <Form.Item\r\n                                         name=\"keyboardnumber\"\r\n                                         label=\"Keyboard Number\"\r\n                                         rules={[\r\n                                           { required: true, message: \"keyboard no required\" },\r\n                                         ]}\r\n                                       >\r\n                                         <Input type=\"text\" placeholder=\"enter keyboard number\" />\r\n                                       </Form.Item>\r\n                                     </Col>\r\n                                     <Col xs={24} md={24}  lg={5}>\r\n                                       <Form.Item\r\n                                         name=\"keyboardname\"\r\n                                         label=\"Keyboard Attributes\"\r\n                                         rules={[{ required: true }]}\r\n                                       >\r\n                                         <Input type=\"text\" placeholder=\"Brand and model\" />\r\n                                       </Form.Item>\r\n                                     </Col>\r\n                                     <Col xs={24} md={24}  lg={5}>\r\n                                       <Form.Item\r\n                                         name=\"cpunumber\"\r\n                                         label=\"CPU Number\"\r\n                                         rules={[\r\n                                           { required: true, message: \"CPU number is required\" },\r\n                                         ]}\r\n                                       >\r\n                                         <Input type=\"text\" placeholder=\"enter cpu number\" />\r\n                                       </Form.Item>\r\n                                     </Col>\r\n                                     <Col xs={24} md={24}  lg={5}>\r\n                                       <Form.Item\r\n                                         name=\"cpuname\"\r\n                                         label=\"CPU Attributes\"\r\n                                         rules={[{ required: true }]}\r\n                                       >\r\n                                         <Input type=\"text\" placeholder=\"Brand, Model, Speed\" />\r\n                                       </Form.Item>\r\n                                     </Col>\r\n                                     </Row>\r\n                                   </div>\r\n                                 )}\r\n                   \r\n                                 <Col xs={24} md={24}  lg={5}>\r\n                                   <Form.Item>\r\n                                     <button\r\n                                       type=\"submit\"\r\n                                       className=\"btn btn-primary\"\r\n                                       style={{ width: \"100%\", marginLeft: \"0px\",marginTop:'30px' }}\r\n                                     >\r\n                                       Submit\r\n                                     </button>\r\n                                   </Form.Item>\r\n                                 </Col>\r\n                               </Row>\r\n                             </Form>\r\n                           </div>\r\n                   \r\n        \r\n\r\n        \r\n        <table\r\n          className=\"table\"\r\n          style={{\r\n            width: \"100%\",\r\n            borderCollapse: \"collapse\",\r\n            marginTop: \"10px\",\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Item Type\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Installation Date\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Description\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Desktop Info\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {teacherdetails &&\r\n              teacherdetails.map((data) => (\r\n                <tr key={data._id}>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <b>{data.itemtype}</b>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    {new Date(data.installationdate).toLocaleDateString()}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n\r\n                      width: \"350px\",\r\n                    }}\r\n                  >\r\n                    <div style={{ maxHeight: \"150px\", overflowY: \"auto\" }}>\r\n                      {data.description || \"N/A\"}\r\n                    </div>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {data.itemtype === \"desktop\" && (\r\n                      <div\r\n                        className=\"desktop-info\"\r\n                        style={{\r\n                          maxHeight: \"150px\",\r\n                          overflowY: \"auto\",\r\n                        }}\r\n                      >\r\n                        <p>\r\n                          <b>Desktop Number:</b> {data.desktopnumber}\r\n                        </p>\r\n                        <p>\r\n                          <b>IP Address:</b> {data.ipaddress}\r\n                        </p>\r\n                        <p>\r\n                          <b>Monitor Number:</b> {data.monitornumber}\r\n                        </p>\r\n                        <p>\r\n                          <b>Monitor Name:</b> {data.monitorname}\r\n                        </p>\r\n                        <p>\r\n                          <b>Mouse Number:</b> {data.mousenumber}\r\n                        </p>\r\n                        <p>\r\n                          <b>Mouse Name:</b> {data.mousename}\r\n                        </p>\r\n                        <p>\r\n                          <b>Keyboard Number:</b> {data.keyboardnumber}\r\n                        </p>\r\n                        <p>\r\n                          <b>Keyboard Name:</b> {data.keyboardname}\r\n                        </p>\r\n                        <p>\r\n                          <b>CPU Number:</b> {data.cpunumber}\r\n                        </p>\r\n                        <p>\r\n                          <b>CPU Name:</b> {data.cpuname}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <i\r\n                      className=\"fa-solid fa-trash icon\"\r\n                      style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Do you want to delete?\")) {\r\n                          handledelete(data._id);\r\n                        }\r\n                      }}\r\n                    ></i>\r\n                    <i\r\n                      className=\"fa-solid fa-pen-to-square edit\"\r\n                      style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Do you want to edit?\")) {\r\n                          navigate(`/teacherdetailedit/${data._id}`);\r\n                        }\r\n                      }}\r\n                    ></i>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Teacherdetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {useNavigate,useParams} from \"react-router-dom\";\r\nimport axios from'axios';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  message,\r\n  Select,\r\n  DatePicker,\r\n   \r\n} from \"antd\";\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst {Option} =Select;\r\nconst Teacherdetailedit = () => {\r\n    const [form]=Form.useForm();\r\n    const [itemtype, setItemtype] = useState(null);\r\n    const [teacherdetailinfo, setTeacherdetailinfo] = useState(null);\r\n    const params=useParams();\r\n\r\n    const roles = useSelector((State) => State.role.role);\r\n    const dispatch = useDispatch();\r\n    \r\n  useEffect(() => {\r\n    if (roles === \"admin\" || roles === \"editor\") {\r\n      localStorage.setItem(\"role\", roles);\r\n    }\r\n  }, [roles]);\r\n\r\n  useEffect(() => {\r\n    const savedRole = localStorage.getItem(\"role\");\r\n    if (savedRole && savedRole !== roles) {\r\n      dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n    }\r\n  }, [dispatch]);\r\n  \r\n    const handlefinish=async(values)=>{\r\n        if (values.itemtype === \"other\" && values.otheritemtype) {\r\n            values.itemtype = values.otheritemtype;\r\n            delete values.otheritemtype;\r\n          }\r\n          values.teacherdetailid = params.teacherdetailid;\r\n      \r\n          try {\r\n            const res = await axios.post(\r\n              \"/api/v1/tech/teacher/updateteacherdetail\",\r\n              values,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n              }\r\n            );\r\n            if (res.data.success) {\r\n              message.success(res.data.message);\r\n              window.history.back();\r\n            } else {\r\n              message.error(res.data.message);\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n            message.error(\"spmething went wrong\");\r\n          }\r\n    };\r\n\r\n    const getteacherdetails=async()=>{\r\n        const res = await axios.post(\r\n            \"/api/v1/tech/teacher/getteacherdetaildata\",\r\n            {\r\n              teacherdetailid: params.teacherdetailid,\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n              },\r\n            }\r\n          );\r\n          if (res.data.success) {\r\n            setTeacherdetailinfo(res.data.data);\r\n            //   Form.setFieldsValue(res.data.data);\r\n            //console.log(labdata);\r\n            const {installationdate,...otherdata}=res.data.data;\r\n            form.setFieldsValue({\r\n                ...otherdata,\r\n                installationdate:installationdate?moment(installationdate):null\r\n            });\r\n            message.success(res.data.message);\r\n          } else {\r\n            message.error(res.data.message);\r\n          }\r\n    };\r\n\r\n     useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        getteacherdetails();\r\n      }, []);\r\n  return (\r\n    <>\r\n     <Layout>\r\n         \r\n                <div\r\n                  className=\"form-divnew\"\r\n               style={{border:\"1px solid black\",width:\"40%\",margin:\"10px\",float:\"left\"}}\r\n        \r\n                  \r\n                 \r\n                >\r\n                  <Form layout=\"vertical\" className=\"m-2\"  onFinish={handlefinish} form={form}>\r\n                    <h3 className=\"text-center\">Edit Detail</h3>\r\n                    <Row gutter={20}>\r\n                      <Col xs={24} md={24}>\r\n                        <Form.Item\r\n                          name=\"itemtype\"\r\n                          label=\"Item Type\"\r\n                          rules={[{ required: true, message: \"Item type is required\" }]}\r\n                        >\r\n                          <Select\r\n                            placeholder=\"select item type\"\r\n                            onChange={(value) => setItemtype(value)}\r\n                          >\r\n                            <Option value=\"speaker\">Speaker</Option>\r\n                            <Option value=\"microphone\">Microphone</Option>\r\n                            <Option value=\"desktop\">Desktop Computer</Option>\r\n                            <Option value=\"laptop\">Laptop</Option>\r\n                            <Option value=\"projector\">Projector</Option>\r\n                            <Option value=\"interactive-whiteboard\">\r\n                              Interactive Whiteboard\r\n                            </Option>\r\n                            <Option value=\"printer\">Printer</Option>\r\n                            <Option value=\"scanner\">Scanner</Option>\r\n                            <Option value=\"router\">Router</Option>\r\n                            <Option value=\"switch\">Network Switch</Option>\r\n                            <Option value=\"server\">Server</Option>\r\n                            <Option value=\"tablet\">Tablet</Option>\r\n                            <Option value=\"smartphone\">Smartphone</Option>\r\n                            <Option value=\"external-hard-drive\">\r\n                              External Hard Drive\r\n                            </Option>\r\n                            <Option value=\"usb-device\">USB Device</Option>\r\n                            <Option value=\"camera\">Camera</Option>\r\n                            <Option value=\"document-camera\">Document Camera</Option>\r\n                            <Option value=\"monitor\">Monitor</Option>\r\n                            <Option value=\"headphones\">Headphones</Option>\r\n                            <Option value=\"webcam\">Webcam</Option>\r\n                            <Option value=\"vr-headset\">VR Headset</Option>\r\n                            <Option value=\"coding-kits\">Coding Kits</Option>\r\n                            <Option value=\"drone\">Drone</Option>\r\n                            <Option value=\"3d-printer\">3D Printer</Option>\r\n                            <Option value=\"arduino-kits\">Arduino Kits</Option>\r\n                            <Option value=\"raspberry-pi\">Raspberry Pi</Option>\r\n                            <Option value=\"network-tools\">Network Tools</Option>\r\n                            <Option value=\"other\">Other</Option>\r\n                          </Select>\r\n                        </Form.Item>\r\n                      </Col>\r\n                      {itemtype === \"other\" && (\r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            label=\"other item name\"\r\n                            name=\"otheritemtype\"\r\n                            rules={[\r\n                              { required: true, message: \"other item name required\" },\r\n                            ]}\r\n                          >\r\n                            <Input type=\"text\" placeholder=\"type item name\" />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      )}\r\n                      <Col xs={24} md={24}>\r\n                        <Form.Item\r\n                          name=\"installationdate\"\r\n                          label=\"Installation Date\"\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: \"Installation date is required\",\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: \"100%\" }} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} md={24}>\r\n                        <Form.Item\r\n                          name=\"description\"\r\n                          label=\"Description\"\r\n                          rules={[\r\n                            { required: true, message: \"Description is required\" },\r\n                          ]}\r\n                        >\r\n                          <Input.TextArea\r\n                            placeholder=\"enter description\"\r\n                            rows={4}\r\n                            style={{ width: \"100%\" }}\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      {teacherdetailinfo?.itemtype==='desktop' && (\r\n                        <div style={{ width: \"100%\" }}>\r\n                          <Col xs={24} md={24}>\r\n                            <Form.Item\r\n                              name=\"desktopnumber\"\r\n                              label=\"Desktop Number\"\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: \"Desktop number is required\",\r\n                                },\r\n                              ]}\r\n                            >\r\n                              <Input\r\n                                type=\"text\"\r\n                                style={{ width: \"100%\" }}\r\n                                placeholder=\"enter desktop number\"\r\n                              />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} md={24}>\r\n                            <Form.Item\r\n                              name=\"ipaddress\"\r\n                              label=\"Ip Address\"\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: \"ip address is required\",\r\n                                },\r\n                              ]}\r\n                            >\r\n                              <Input\r\n                                type=\"text\"\r\n                                style={{ width: \"100%\" }}\r\n                                placeholder=\"enter ip address \"\r\n                              />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} md={24}>\r\n                            <Form.Item\r\n                              name=\"monitornumber\"\r\n                              label=\"Monitor Number\"\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: \"Monitor number is required\",\r\n                                },\r\n                              ]}\r\n                            >\r\n                              <Input type=\"text\" placeholder=\"enter monitor number\" />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} md={24}>\r\n                            <Form.Item\r\n                              name=\"monitorname\"\r\n                              label=\"Monitor Attributes\"\r\n                              rules={[{ required: true }]}\r\n                            >\r\n                              <Input type=\"text\" placeholder=\"Brand, Model, Size\" />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} md={24}>\r\n                            <Form.Item\r\n                              name=\"mousenumber\"\r\n                              label=\"Mouse Number\"\r\n                              rules={[\r\n                                { required: true, message: \"Mouse number is required\" },\r\n                              ]}\r\n                            >\r\n                              <Input type=\"text\" placeholder=\"enter mouse number\" />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} md={24}>\r\n                            <Form.Item\r\n                              name=\"mousename\"\r\n                              label=\"Mouse Attributes\"\r\n                              rules={[{ required: true }]}\r\n                            >\r\n                              <Input type=\"text\" placeholder=\"Brand and Model\" />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} md={24}>\r\n                            <Form.Item\r\n                              name=\"keyboardnumber\"\r\n                              label=\"Keyboard Number\"\r\n                              rules={[\r\n                                { required: true, message: \"keyboard no required\" },\r\n                              ]}\r\n                            >\r\n                              <Input type=\"text\" placeholder=\"enter keyboard number\" />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} md={24}>\r\n                            <Form.Item\r\n                              name=\"keyboardname\"\r\n                              label=\"Keyboard Attributes\"\r\n                              rules={[{ required: true }]}\r\n                            >\r\n                              <Input type=\"text\" placeholder=\"Brand and model\" />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} md={24}>\r\n                            <Form.Item\r\n                              name=\"cpunumber\"\r\n                              label=\"CPU Number\"\r\n                              rules={[\r\n                                { required: true, message: \"CPU number is required\" },\r\n                              ]}\r\n                            >\r\n                              <Input type=\"text\" placeholder=\"enter cpu number\" />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} md={24}>\r\n                            <Form.Item\r\n                              name=\"cpuname\"\r\n                              label=\"CPU Attributes\"\r\n                              rules={[{ required: true }]}\r\n                            >\r\n                              <Input type=\"text\" placeholder=\"Brand, Model, Speed\" />\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </div>\r\n                      )}\r\n        \r\n                      <Col xs={24} md={24}>\r\n                        <Form.Item>\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary\"\r\n                            style={{ width: \"100%\", marginLeft: \"0px\" }}\r\n                          >\r\n                            Submit\r\n                          </button>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </div>\r\n        \r\n        </Layout> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Teacherdetailedit;","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message, DatePicker, Select } from \"antd\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\nconst { Option } = Select;\r\n\r\nconst Serverpage = () => {\r\n  const [itemtype, setItemtype] = useState(null);\r\n const [serverlist, setServerlist] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n    useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n  const handleform = async (values) => {\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/server/addserver\", values);\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n        // window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getallserver = async () => {\r\n    const res = await axios.get(\"/api/v1/tech/server/getallserver\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    if (res.data.success) {\r\n      setServerlist(res.data.data);\r\n      message.success(\"all server get\");\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getallserver();\r\n  }, []);\r\n   \r\n  const handledelete = async (id) => {\r\n    try {\r\n      // eslint-disable-next-line no-restricted-globals\r\n      var result = confirm(\"really want to delete\");\r\n      if (result) {\r\n        const res = await axios.post(\r\n          \"/api/v1/tech/server/deleteserver\",\r\n          { id },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        if (res.data.success) {\r\n          message.success(res.data.message);\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div\r\n          className=\"m-2\"\r\n         \r\n        >\r\n          <Form layout=\"vertical\" onFinish={handleform} className=\"m-2\">\r\n            <h3 className=\"text-center\">Server Rooms</h3>\r\n            <Row gutter={20}>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Server Room name\"\r\n                  name=\"roomname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type lab name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Room number\"\r\n                  name=\"roomno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type lab number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Building name\"\r\n                  name=\"buildingname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type building name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Floor number\"\r\n                  name=\"floorno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type floor number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={4}>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"180px\", marginTop: \"25px\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n\r\n        {serverlist &&\r\n        serverlist.map((data) => {\r\n          return (\r\n            <div className=\"card m-2 cardstyle\">\r\n              <div\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"card-header\"\r\n                onClick={() => {\r\n                  navigate(`/serverdetails/${data._id}`);\r\n                }}\r\n              >\r\n                Server Room Name:\r\n                <b> {data.roomname}</b>\r\n              </div>\r\n\r\n              <div className=\"card-body p-2\">\r\n                <p>\r\n                  <b>Room No: </b>\r\n                  {data.roomno}\r\n                </p>\r\n                <p>\r\n                  <b>Building Name: </b>\r\n                  {data.buildingname}\r\n                </p>\r\n                <p>\r\n                  <b>Floor No: </b>\r\n                  {data.floorno}\r\n                </p>\r\n                <p>\r\n                  <button\r\n                    onClick={() => {\r\n                      // eslint-disable-next-line no-restricted-globals\r\n                      let result = confirm(\"really want to edit\");\r\n                      if (result) {\r\n                        navigate(`/serveredit/${data._id}`);\r\n                      }\r\n                    }}\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      handledelete(data._id);\r\n                    }}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Serverpage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Row, Col, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Layout from \"./../../components/Layout\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst Serveredit = () => {\r\n const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [serverinfo, setServerinfo] = useState(null);\r\n  const [form]=Form.useForm();\r\n\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n    useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n  const getserverdata = async () => {\r\n    const res = await axios.post(\r\n      \"/api/v1/tech/server/getserverdata\",\r\n      {\r\n        serverroomid: params.serverroomid,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      }\r\n    );\r\n    if (res.data.success) {\r\n      setServerinfo(res.data.data);\r\n      //   Form.setFieldsValue(res.data.data);\r\n      //console.log(labdata);\r\n      form.setFieldsValue(res.data.data);\r\n      message.success(res.data.message);\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    getserverdata();\r\n  }, []);\r\n\r\n  const handleform = async (values) => {\r\n    values.serverroomid = params.serverroomid;\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/server/updateserver\", values, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        navigate(\"/server\");\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n     <Layout>\r\n     <div\r\n          className=\"m-2\"\r\n          style={{ border: \"1px solid black\", width: \"300px\",float:\"left\" }}\r\n        >\r\n          <Form layout=\"vertical\" onFinish={handleform} className=\"m-2\" form={form}>\r\n            <h3 className=\"text-center\">Edit Details</h3>\r\n            <Row gutter={20}>\r\n              <Col xs={24} md={24}>\r\n                <Form.Item\r\n                  label=\"Server Room name\"\r\n                  name=\"roomname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type lab name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24}>\r\n                <Form.Item\r\n                  label=\"Room number\"\r\n                  name=\"roomno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type lab number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24}>\r\n                <Form.Item\r\n                  label=\"Building name\"\r\n                  name=\"buildingname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type building name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24}>\r\n                <Form.Item\r\n                  label=\"Floor number\"\r\n                  name=\"floorno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type floor number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24}>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"180px\", marginTop: \"25px\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        \r\n    </Layout> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Serveredit\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message, Select, DatePicker } from \"antd\";\r\n\r\nimport \"../../styles/Newtechpagestyles.css\";\r\n\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\nconst { Option } = Select;\r\n\r\nconst Serverdetail = () => {\r\n  const [serverdetails, setServerdetails] = useState([]);\r\n  const [itemtype, setItemtype] = useState();\r\n  //const [formattedDates, setFormattedDates] = useState({});\r\n  const params = useParams();\r\n    const [serverroomname,setServerroomname]=useState();\r\n    const [serveritems,setServeritems]=useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n    useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n\r\n    \r\n  const getalllabs = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tech/server/getallserver\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setServeritems(res.data.data);\r\n      } else {\r\n        message.error(res.data.messgae);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    const lab=serveritems.find((data)=>data._id===params.serverroomid);\r\n     if(lab){\r\n      setServerroomname(lab.roomname);\r\n     }\r\n      },[serveritems,params.serverroomid]);\r\n\r\n   useEffect(() => {\r\n      getalllabs();\r\n    }, []);\r\n\r\n\r\n  const handlefinish = async (values) => {\r\n    // console.log(\"Received values:\", values);\r\n    values.serverroomid = params.serverroomid;\r\n    if (values.itemtype === \"other\" && values.otheritemtype) {\r\n      values.itemtype = values.otheritemtype;\r\n      delete values.otheritemtype;\r\n    }\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/server/addserverdetail\",\r\n        values\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getdetails = async () => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/server/getdetailofserver\",\r\n        {\r\n          serverroomid: params.serverroomid,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setServerdetails(res.data.data);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getdetails();\r\n  }, []);\r\n\r\n  const handledelete = async (id) => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/server/deleteserverdetail\",\r\n        {\r\n          id,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Layout>\r\n          <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'34px',fontFamily:'bold'}}><p>{serverroomname}</p></div>\r\n               <div\r\n                 className=\"form-div\"\r\n                 style={{\r\n                   border: \"1px solid black\",\r\n                   width: \"100%\",\r\n                   float: \"left\",\r\n                   margin: \"2px\",\r\n                 }}\r\n               >\r\n                 <Form layout=\"vertical\" onFinish={handlefinish}>\r\n                   <h5 className=\"text-center\">Add Item</h5>\r\n                   <Row Row gutter={20}>\r\n                     <Col xs={24} md={24} lg={5}>\r\n                       <Form.Item\r\n                         name=\"itemtype\"\r\n                         label=\"Item Type\"\r\n                         rules={[{ required: true, message: \"Item type is required\" }]}\r\n                       >\r\n                         <Select\r\n                           placeholder=\"select item type\"\r\n                           onChange={(value) => setItemtype(value)}\r\n                         >\r\n                    <option value=\"server\">Server</option>\r\n                    <option value=\"desktop\">Desktop</option>\r\n                    <option value=\"laptop\">Laptop</option>\r\n                    <option value=\"networkSwitches\">Network Switches</option>\r\n                    <option value=\"routers\">Routers</option>\r\n                    <option value=\"firewalls\">Firewalls</option>\r\n                    <option value=\"ups\">\r\n                      Uninterruptible Power Supply (UPS)\r\n                    </option>\r\n                    <option value=\"coolingSystems\">\r\n                      Cooling Systems (HVAC)\r\n                    </option>\r\n                    <option value=\"patchPanels\">Patch Panels</option>\r\n                    <option value=\"cableManagement\">\r\n                      Cable Management Systems\r\n                    </option>\r\n                    <option value=\"storageArrays\">Storage Arrays</option>\r\n                    <option value=\"kvmSwitch\">\r\n                      KVM Switch (Keyboard, Video, Mouse)\r\n                    </option>\r\n                    <option value=\"serverRacks\">Server Racks/Cabinets</option>\r\n                    <option value=\"securityCameras\">Security Cameras</option>\r\n                    <option value=\"accessControl\">\r\n                      Access Control Systems\r\n                    </option>\r\n                    <option value=\"environmentalMonitoring\">\r\n                      Environmental Monitoring Systems\r\n                    </option>\r\n                    <option value=\"backupSystems\">Backup Systems</option>\r\n                    <option value=\"fireSuppression\">\r\n                      Fire Suppression Systems\r\n                    </option>\r\n                    <option value=\"remoteManagement\">\r\n                      Remote Management Tools\r\n                    </option>\r\n                    <option value=\"pdus\">\r\n                      Power Distribution Units (PDUs)\r\n                    </option>\r\n                    <option value=\"patchCables\">Patch Cables</option>\r\n                    <option value=\"monitoringSoftware\">\r\n                      Monitoring and Alerting Software\r\n                    </option>\r\n                    <option value=\"other\">Other</option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              {itemtype === \"other\" && (\r\n                <Col xs={24} md={24} lg={5}>\r\n                  <Form.Item\r\n                    label=\"other item name\"\r\n                    name=\"otheritemtype\"\r\n                    rules={[\r\n                      { required: true, message: \"other item name required\" },\r\n                    ]}\r\n                  >\r\n                    <Input type=\"text\" placeholder=\"type item name\" />\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  name=\"installationdate\"\r\n                  label=\"Installation Date\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Installation date is required\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker style={{ width: \"100%\" }} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  name=\"description\"\r\n                  label=\"Description\"\r\n                  rules={[\r\n                    { required: true, message: \"Description is required\" },\r\n                  ]}\r\n                >\r\n                  <Input.TextArea\r\n                    placeholder=\"enter description\"\r\n                    rows={1}\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              {itemtype === \"server\" && (\r\n                <>\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      label=\"Server Name/ID\"\r\n                      name=\"serverName\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Server Name/ID is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter server name or ID\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      label=\"Server Type/Role\"\r\n                      name=\"serverType\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Server Type/Role is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select placeholder=\"Select server type/role\">\r\n                        <Option value=\"database\">Database Server</Option>\r\n                        <Option value=\"web\">Web Server</Option>\r\n                        <Option value=\"application\">Application Server</Option>\r\n                        <Option value=\"file\">File Server</Option>\r\n                        <Option value=\"backup\">Backup Server</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      label=\"Operating System\"\r\n                      name=\"operatingSystem\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Operating System is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select placeholder=\"Select operating system\">\r\n                        <Option value=\"linux\">Linux</Option>\r\n                        <Option value=\"windows\">Windows Server</Option>\r\n                        <Option value=\"macos\">macOS</Option>\r\n                        <Option value=\"ubuntu\">Ubuntu</Option>\r\n                        <Option value=\"centos\">CentOS</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      label=\"IP Address\"\r\n                      name=\"ipaddress\"\r\n                      rules={[\r\n                        { required: true, message: \"IP Address is required\" },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Enter IP address\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      label=\"Host Name\"\r\n                      name=\"hostname\"\r\n                      rules={[\r\n                        { required: true, message: \"Host Name is required\" },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Enter host name\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      label=\"MAC Address\"\r\n                      name=\"macAddress\"\r\n                      rules={[\r\n                        { required: true, message: \"MAC Address is required\" },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Enter MAC address\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </>\r\n              )}\r\n              {itemtype === \"desktop\" && (\r\n                 <>\r\n                  \r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      name=\"desktopnumber\"\r\n                      label=\"Desktop Number\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Desktop number is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"text\"\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"enter desktop number\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      name=\"ipaddress\"\r\n                      label=\"Ip Address\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"ip address is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input\r\n                        type=\"text\"\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"enter ip address \"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      name=\"monitornumber\"\r\n                      label=\"Monitor Number\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Monitor number is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"enter monitor number\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      name=\"monitorname\"\r\n                      label=\"Monitor Attributes\"\r\n                      rules={[{ required: true }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Brand, Model, Size\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      name=\"mousenumber\"\r\n                      label=\"Mouse Number\"\r\n                      rules={[\r\n                        { required: true, message: \"Mouse number is required\" },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"enter mouse number\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      name=\"mousename\"\r\n                      label=\"Mouse Attributes\"\r\n                      rules={[{ required: true }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Brand and Model\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      name=\"keyboardnumber\"\r\n                      label=\"Keyboard Number\"\r\n                      rules={[\r\n                        { required: true, message: \"keyboard no required\" },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"enter keyboard number\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      name=\"keyboardname\"\r\n                      label=\"Keyboard Attributes\"\r\n                      rules={[{ required: true }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Brand and model\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      name=\"cpunumber\"\r\n                      label=\"CPU Number\"\r\n                      rules={[\r\n                        { required: true, message: \"CPU number is required\" },\r\n                      ]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"enter cpu number\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24} lg={5}>\r\n                    <Form.Item\r\n                      name=\"cpuname\"\r\n                      label=\"CPU Attributes\"\r\n                      rules={[{ required: true }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"Brand, Model, Speed\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                 </>\r\n         \r\n              )}\r\n\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ width: \"100%\", marginLeft: \"0px\",marginTop:\"25px\" }}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n\r\n        <table\r\n          className=\"table\"\r\n          style={{\r\n            width: \"100%\",\r\n            borderCollapse: \"collapse\",\r\n            marginTop: \"10px\",\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Item Type\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Installation Date\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Description\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Desktop/Server Info\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {serverdetails &&\r\n              serverdetails.map((data) => (\r\n                <tr key={data._id}>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <b>{data.itemtype}</b>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    {new Date(data.installationdate).toLocaleDateString()}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n\r\n                      width: \"350px\",\r\n                    }}\r\n                  >\r\n                    <div style={{ maxHeight: \"150px\", overflowY: \"auto\" }}>\r\n                      {data.description || \"N/A\"}\r\n                    </div>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {data.itemtype === \"server\" && (\r\n                      <div style={{ maxHeight: \"150px\", overflowY: \"auto\" }}>\r\n                       \r\n                        <p>\r\n                          <b>Server Name/ID: </b>\r\n                          {data.serverName}\r\n                        </p>\r\n                        <p>\r\n                          <b>Server Type: </b>\r\n                          {data.serverType}\r\n                        </p>\r\n                        <p>\r\n                          <b>Operating System: </b>\r\n                          {data.operatingSystem}\r\n                        </p>\r\n                        <p>\r\n                          <b>IP Address: </b>\r\n                          {data.ipaddress}\r\n                        </p>\r\n                        <p>\r\n                          <b>Hostname: </b>\r\n                          {data.hostname}\r\n                        </p>\r\n                        <p>\r\n                          <b>MAC Address: </b>\r\n                          {data.macAddress}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                    {data.itemtype === \"desktop\" && (\r\n                      <div\r\n                        className=\"desktop-info\"\r\n                        style={{\r\n                          maxHeight: \"150px\",\r\n                          overflowY: \"auto\",\r\n                        }}\r\n                      >\r\n                        <p>\r\n                          <b>Desktop Number:</b> {data.desktopnumber}\r\n                        </p>\r\n                        <p>\r\n                          <b>IP Address:</b> {data.ipaddress}\r\n                        </p>\r\n                        <p>\r\n                          <b>Monitor Number:</b> {data.monitornumber}\r\n                        </p>\r\n                        <p>\r\n                          <b>Monitor Name:</b> {data.monitorname}\r\n                        </p>\r\n                        <p>\r\n                          <b>Mouse Number:</b> {data.mousenumber}\r\n                        </p>\r\n                        <p>\r\n                          <b>Mouse Name:</b> {data.mousename}\r\n                        </p>\r\n                        <p>\r\n                          <b>Keyboard Number:</b> {data.keyboardnumber}\r\n                        </p>\r\n                        <p>\r\n                          <b>Keyboard Name:</b> {data.keyboardname}\r\n                        </p>\r\n                        <p>\r\n                          <b>CPU Number:</b> {data.cpunumber}\r\n                        </p>\r\n                        <p>\r\n                          <b>CPU Name:</b> {data.cpuname}\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <i\r\n                      className=\"fa-solid fa-trash icon\"\r\n                      style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Do you want to delete?\")) {\r\n                          handledelete(data._id);\r\n                        }\r\n                      }}\r\n                    ></i>\r\n                    <i\r\n                      className=\"fa-solid fa-pen-to-square edit\"\r\n                      style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Do you want to edit?\")) {\r\n                          navigate(`/serverdetailedit/${data._id}`);\r\n                        }\r\n                      }}\r\n                    ></i>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Serverdetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {useNavigate,useParams} from \"react-router-dom\";\r\nimport axios from'axios';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Row,\r\n    Col,\r\n    message,\r\n    Select,\r\n    DatePicker,\r\n     \r\n  } from \"antd\";\r\n  import moment from 'moment';\r\n  import { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n  const {Option} =Select;\r\n\r\nconst Serverdetailedit = () => {\r\n      const [form]=Form.useForm();\r\n        const [itemtype, setItemtype] = useState(null);\r\n        const [serverrdetailinfo, setServerdetailinfo] = useState(null);\r\n        const params=useParams();\r\n\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  \r\n    useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n        const getServerdetail = async () => {\r\n            try {\r\n              const res = await axios.post(\r\n                \"/api/v1/tech/server/getserverdetailforedit\",\r\n                {\r\n                  serverdetailid: params.serverdetailid,\r\n                },\r\n                {\r\n                  headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                  },\r\n                }\r\n              );\r\n              if (res.data.success) {\r\n                message.success(res.data.message);\r\n                setServerdetailinfo(res.data.data);\r\n                const { installationdate, ...otherdata } = res.data.data;\r\n                form.setFieldsValue({\r\n                  ...otherdata,\r\n                  installationdate: moment(installationdate),\r\n                });\r\n              } else {\r\n                message.error(res.data.message);\r\n              }\r\n            } catch (error) {\r\n              console.log(error);\r\n              message.error(\"something went wrong\");\r\n            }\r\n          };\r\n        \r\n          useEffect(() => {\r\n            getServerdetail();\r\n          }, []);\r\n        \r\n          const handlefinish=async(values)=>{\r\n            if (values.itemtype === \"other\" && values.otheritemtype) {\r\n                values.itemtype = values.otheritemtype;\r\n                delete values.otheritemtype;\r\n              }\r\n              values.serverdetailid = params.serverdetailid;\r\n          \r\n              try {\r\n                const res = await axios.post(\r\n                  \"/api/v1/tech/server/updateserverdetail\",\r\n                  values,\r\n                  {\r\n                    headers: {\r\n                      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n                  }\r\n                );\r\n                if (res.data.success) {\r\n                  message.success(res.data.message);\r\n                  window.history.back();\r\n                } else {\r\n                  message.error(res.data.message);\r\n                }\r\n              } catch (error) {\r\n                console.log(error);\r\n                message.error(\"spmething went wrong\");\r\n              }\r\n        };\r\n\r\n  return (\r\n    <>\r\n    <Layout>\r\n       <div\r\n                className=\"form-divnew\"\r\n                style={{\r\n                  border: \"1px solid black\",\r\n                  width: \"40%\",\r\n                  margin: \"10px\",\r\n                  float: \"left\",\r\n                }}\r\n              >\r\n                <Form layout=\"vertical\" onFinish={handlefinish} className=\"m-2\" form={form}>\r\n                  <h3 className=\"text-center\">Edit Detail</h3>\r\n                  <Row gutter={20}>\r\n                    <Col xs={24} md={24}>\r\n                      <Form.Item\r\n                        name=\"itemtype\"\r\n                        label=\"Item Type\"\r\n                        rules={[{ required: true, message: \"Item type is required\" }]}\r\n                      >\r\n                        <Select\r\n                          placeholder=\"select item type\"\r\n                          onChange={(value) => setItemtype(value)}\r\n                        >\r\n                          <option value=\"server\">Server</option>\r\n                          <option value=\"desktop\">Desktop</option>\r\n                          <option value=\"laptop\">Laptop</option>\r\n                          <option value=\"networkSwitches\">Network Switches</option>\r\n                          <option value=\"routers\">Routers</option>\r\n                          <option value=\"firewalls\">Firewalls</option>\r\n                          <option value=\"ups\">\r\n                            Uninterruptible Power Supply (UPS)\r\n                          </option>\r\n                          <option value=\"coolingSystems\">\r\n                            Cooling Systems (HVAC)\r\n                          </option>\r\n                          <option value=\"patchPanels\">Patch Panels</option>\r\n                          <option value=\"cableManagement\">\r\n                            Cable Management Systems\r\n                          </option>\r\n                          <option value=\"storageArrays\">Storage Arrays</option>\r\n                          <option value=\"kvmSwitch\">\r\n                            KVM Switch (Keyboard, Video, Mouse)\r\n                          </option>\r\n                          <option value=\"serverRacks\">Server Racks/Cabinets</option>\r\n                          <option value=\"securityCameras\">Security Cameras</option>\r\n                          <option value=\"accessControl\">\r\n                            Access Control Systems\r\n                          </option>\r\n                          <option value=\"environmentalMonitoring\">\r\n                            Environmental Monitoring Systems\r\n                          </option>\r\n                          <option value=\"backupSystems\">Backup Systems</option>\r\n                          <option value=\"fireSuppression\">\r\n                            Fire Suppression Systems\r\n                          </option>\r\n                          <option value=\"remoteManagement\">\r\n                            Remote Management Tools\r\n                          </option>\r\n                          <option value=\"pdus\">\r\n                            Power Distribution Units (PDUs)\r\n                          </option>\r\n                          <option value=\"patchCables\">Patch Cables</option>\r\n                          <option value=\"monitoringSoftware\">\r\n                            Monitoring and Alerting Software\r\n                          </option>\r\n                          <option value=\"other\">Other</option>\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    {itemtype === \"other\" && (\r\n                      <Col xs={24} md={24}>\r\n                        <Form.Item\r\n                          label=\"other item name\"\r\n                          name=\"otheritemtype\"\r\n                          rules={[\r\n                            { required: true, message: \"other item name required\" },\r\n                          ]}\r\n                        >\r\n                          <Input type=\"text\" placeholder=\"type item name\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    )}\r\n                    <Col xs={24} md={24}>\r\n                      <Form.Item\r\n                        name=\"installationdate\"\r\n                        label=\"Installation Date\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Installation date is required\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <DatePicker style={{ width: \"100%\" }} />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col xs={24} md={24}>\r\n                      <Form.Item\r\n                        name=\"description\"\r\n                        label=\"Description\"\r\n                        rules={[\r\n                          { required: true, message: \"Description is required\" },\r\n                        ]}\r\n                      >\r\n                        <Input.TextArea\r\n                          placeholder=\"enter description\"\r\n                          rows={4}\r\n                          style={{ width: \"100%\" }}\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    {itemtype === \"server\" && (\r\n                      <>\r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            label=\"Server Name/ID\"\r\n                            name=\"serverName\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Server Name/ID is required\",\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Input\r\n                              type=\"text\"\r\n                              placeholder=\"Enter server name or ID\"\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n      \r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            label=\"Server Type/Role\"\r\n                            name=\"serverType\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Server Type/Role is required\",\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Select placeholder=\"Select server type/role\">\r\n                              <Option value=\"database\">Database Server</Option>\r\n                              <Option value=\"web\">Web Server</Option>\r\n                              <Option value=\"application\">Application Server</Option>\r\n                              <Option value=\"file\">File Server</Option>\r\n                              <Option value=\"backup\">Backup Server</Option>\r\n                            </Select>\r\n                          </Form.Item>\r\n                        </Col>\r\n      \r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            label=\"Operating System\"\r\n                            name=\"operatingSystem\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Operating System is required\",\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Select placeholder=\"Select operating system\">\r\n                              <Option value=\"linux\">Linux</Option>\r\n                              <Option value=\"windows\">Windows Server</Option>\r\n                              <Option value=\"macos\">macOS</Option>\r\n                              <Option value=\"ubuntu\">Ubuntu</Option>\r\n                              <Option value=\"centos\">CentOS</Option>\r\n                            </Select>\r\n                          </Form.Item>\r\n                        </Col>\r\n      \r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            label=\"IP Address\"\r\n                            name=\"ipaddress\"\r\n                            rules={[\r\n                              { required: true, message: \"IP Address is required\" },\r\n                            ]}\r\n                          >\r\n                            <Input type=\"text\" placeholder=\"Enter IP address\" />\r\n                          </Form.Item>\r\n                        </Col>\r\n      \r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            label=\"Host Name\"\r\n                            name=\"hostname\"\r\n                            rules={[\r\n                              { required: true, message: \"Host Name is required\" },\r\n                            ]}\r\n                          >\r\n                            <Input type=\"text\" placeholder=\"Enter host name\" />\r\n                          </Form.Item>\r\n                        </Col>\r\n      \r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            label=\"MAC Address\"\r\n                            name=\"macAddress\"\r\n                            rules={[\r\n                              { required: true, message: \"MAC Address is required\" },\r\n                            ]}\r\n                          >\r\n                            <Input type=\"text\" placeholder=\"Enter MAC address\" />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </>\r\n                    )}\r\n                    {itemtype === \"desktop\" && (\r\n                      <div style={{ width: \"100%\" }}>\r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            name=\"desktopnumber\"\r\n                            label=\"Desktop Number\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Desktop number is required\",\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Input\r\n                              type=\"text\"\r\n                              style={{ width: \"100%\" }}\r\n                              placeholder=\"enter desktop number\"\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            name=\"ipaddress\"\r\n                            label=\"Ip Address\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"ip address is required\",\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Input\r\n                              type=\"text\"\r\n                              style={{ width: \"100%\" }}\r\n                              placeholder=\"enter ip address \"\r\n                            />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            name=\"monitornumber\"\r\n                            label=\"Monitor Number\"\r\n                            rules={[\r\n                              {\r\n                                required: true,\r\n                                message: \"Monitor number is required\",\r\n                              },\r\n                            ]}\r\n                          >\r\n                            <Input type=\"text\" placeholder=\"enter monitor number\" />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            name=\"monitorname\"\r\n                            label=\"Monitor Attributes\"\r\n                            rules={[{ required: true }]}\r\n                          >\r\n                            <Input type=\"text\" placeholder=\"Brand, Model, Size\" />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            name=\"mousenumber\"\r\n                            label=\"Mouse Number\"\r\n                            rules={[\r\n                              { required: true, message: \"Mouse number is required\" },\r\n                            ]}\r\n                          >\r\n                            <Input type=\"text\" placeholder=\"enter mouse number\" />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            name=\"mousename\"\r\n                            label=\"Mouse Attributes\"\r\n                            rules={[{ required: true }]}\r\n                          >\r\n                            <Input type=\"text\" placeholder=\"Brand and Model\" />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            name=\"keyboardnumber\"\r\n                            label=\"Keyboard Number\"\r\n                            rules={[\r\n                              { required: true, message: \"keyboard no required\" },\r\n                            ]}\r\n                          >\r\n                            <Input type=\"text\" placeholder=\"enter keyboard number\" />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            name=\"keyboardname\"\r\n                            label=\"Keyboard Attributes\"\r\n                            rules={[{ required: true }]}\r\n                          >\r\n                            <Input type=\"text\" placeholder=\"Brand and model\" />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            name=\"cpunumber\"\r\n                            label=\"CPU Number\"\r\n                            rules={[\r\n                              { required: true, message: \"CPU number is required\" },\r\n                            ]}\r\n                          >\r\n                            <Input type=\"text\" placeholder=\"enter cpu number\" />\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col xs={24} md={24}>\r\n                          <Form.Item\r\n                            name=\"cpuname\"\r\n                            label=\"CPU Attributes\"\r\n                            rules={[{ required: true }]}\r\n                          >\r\n                            <Input type=\"text\" placeholder=\"Brand, Model, Speed\" />\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </div>\r\n                    )}\r\n      \r\n                    <Col xs={24} md={24}>\r\n                      <Form.Item>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-primary\"\r\n                          style={{ width: \"100%\", marginLeft: \"0px\" }}\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </div>\r\n              </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Serverdetailedit\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout2 from \"../../components/Layout2\";\r\nimport { message, Select, Table } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst Classsum = () => {\r\n    const [classes,setClasses] = useState([]);\r\n\r\n    const [classdetails, setClassdetails] = useState([]);\r\n  \r\n    const [classnumbers, setClassnumbers] = useState({});\r\n  const [totalclass,setTotalclass]=useState([]);\r\n  const[classnums,setClassnums]=useState(0);\r\n  const[sortorder,setSortorder]=useState('oldtonew');\r\n  \r\n    const [item, setItem] = useState(\"all\");\r\n    const [displaydata, setDisplaydata] = useState();\r\n      const [buildings,setBuildings]=useState([]);\r\n      const [buildingname,setBuildingname]=useState('none');\r\n      const [buildingobject,setBuildingobject]=useState({});\r\n    \r\n      const [classname,setClassname]=useState('all');\r\n      const [allclassname,setAllclassname]=useState({});\r\n  \r\n    const getallclass = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/v1/tech/getallclass\",{\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        if (res.data.success) {\r\n          message.success(res.data.message);\r\n          setClasses(res.data.data);\r\n        } else {\r\n          message.error(res.data.messgae);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        message.error(\"something went wrong\");\r\n      }\r\n    };\r\n  \r\n    const getclassdetails = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/v1/tech/getallclassdetails\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        if (res.data.success) {\r\n          message.success(res.data.message);\r\n          setClassdetails(res.data.data);\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        message.error(\"something went wrong\");\r\n      }\r\n    };\r\n  \r\n    const classnos = async () => {\r\n      const classno = {};\r\n   \r\n      const allclassdetails = classdetails;\r\n      for (let data of allclassdetails) {\r\n        classno[data._id] = await classnumber(data.classid);\r\n      }\r\n      setClassnumbers(classno);\r\n    };\r\n  \r\n    const classnumber = async (classid) => {\r\n      const allclass = classes;\r\n      for (let data of allclass) {\r\n        if (data._id === classid) {\r\n          return data.classno;\r\n        }\r\n      }\r\n    };\r\n  \r\n    const buildingnames = async () => {\r\n      const buildings = {};\r\n   \r\n      const allclassdetails = classdetails;\r\n      for (let data of allclassdetails) {\r\n        buildings[data._id] = await b_names(data.classid);\r\n      }\r\n      setBuildingobject(buildings);\r\n    };\r\n  \r\n    const b_names = async (classid) => {\r\n      const allclass = classes;\r\n      for (let data of allclass) {\r\n        if (data._id === classid) {\r\n          return data.buildingname;\r\n        }\r\n      }\r\n    };\r\n\r\n    const classnames = async () => {\r\n      const buildings = {};\r\n   \r\n      const allclassdetails = classdetails;\r\n      for (let data of allclassdetails) {\r\n        buildings[data._id] = await class_names(data.classid);\r\n      }\r\n      setAllclassname(buildings);\r\n    };\r\n  \r\n    const class_names = async (classid) => {\r\n      const allclass = classes;\r\n      for (let data of allclass) {\r\n        if (data._id === classid) {\r\n          return data.classname;\r\n        }\r\n      }\r\n    };\r\n\r\n    useEffect(() => {\r\n      getclassdetails();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      getallclass();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      classnos();\r\n    }, [classdetails, classes]);\r\n\r\n    useEffect(() => {\r\n        classnames();\r\n      }, [classdetails, classes]);\r\n  \r\n    useEffect(()=>{\r\n  const classnums=[...new Set(classes.map(data=>data.classname))];\r\n \r\n  setTotalclass(classnums);\r\n\r\n    },[classes]);\r\n\r\n      useEffect(()=>{\r\n    const buildings=[...new Set(classes.map(data=>data.buildingname))];\r\n    setBuildings(buildings);\r\n      },[classes])\r\n\r\n   \r\n  \r\n    const initialprint = async () => {\r\n        if (item === \"all\") {\r\n          const tabledatas = classdetails.map((data) => ({\r\n            key: data._id,\r\n            product:\r\n              data.itemtype === \"desktop\" ? data.desktopnumber : data.itemtype,\r\n            date: new Date(data.installationdate).toLocaleDateString(),\r\n            description:\r\n            data.description +\" \"+\r\n            (data.desktopnumber ? `desktopnumber=${data.desktopnumber}` : \" \") +\" \"+\r\n            (data.ipaddress ? `ipaddress=${data.ipaddress}` : \"\") +\" \"+\r\n            (data.monitornumber ? ` monitornumber=${data.monitornumber}` : \"\") +\" \"+\r\n            (data.monitorname ? ` monitorname=${data.monitorname}` : \"\") +\" \"+\r\n            (data.mousenumber ? ` mousenumber=${data.mousenumber}` : \"\") +\" \"+\r\n            (data.mousename ? ` mousename=${data.mousename}` : \"\") +\" \"+\r\n            (data.keyboardnumber\r\n              ? ` keyboardnumber=${data.keyboardnumber}`\r\n              : \"\") +\" \"+\r\n            (data.keyboardname ? ` keyboardname=${data.keyboardname}` : \"\") +\" \"+\r\n            (data.cpunumber ? ` cpunumber=${data.cpunumber}` : \"\") +\" \"+\r\n            (data.cpuname ? ` cpuname=${data.cpuname}` : \"\"),\r\n            classname: allclassname[data._id],\r\n          }));\r\n          setDisplaydata(tabledatas);\r\n        }\r\n      };\r\n      useEffect(() => {\r\n        initialprint();\r\n      }, [classdetails, allclassname]);\r\n    \r\n      const tabledata = (item, classname,order,allclassname) => {\r\n        let displaydatas;\r\n        if (item === 'other') {\r\n          if (classnums === 0 && buildingname==='none') {\r\n            \r\n            const excludeitem = [\"speaker\",\"microphone\",\"smartboard\",\"printer\",\"projector\"];\r\n            displaydatas = classdetails.filter(\r\n              (data) => !excludeitem.includes(data.itemtype)\r\n            );\r\n          } else if(classnums===0 && buildingname!=='none'){\r\n            const excludeitem = [\"speaker\",\"microphone\",\"smartboard\",\"printer\",\"projector\"];\r\n            displaydatas = classdetails.filter(\r\n              (data) =>\r\n                !excludeitem.includes(data.itemtype) &&\r\n                buildingobject[data._id] === buildingname\r\n            );\r\n          }else if(classnums!==0 && buildingname==='none'){\r\n            const excludeitem = [\"speaker\",\"microphone\",\"smartboard\",\"printer\",\"projector\"];\r\n            displaydatas = classdetails.filter(\r\n              (data) =>\r\n                !excludeitem.includes(data.itemtype) &&\r\n                classnumbers[data._id] === classnums\r\n            );\r\n          }else if(classnums!==0 && buildingname!=='none') {\r\n            const excludeitem = [\"speaker\",\"microphone\",\"smartboard\",\"printer\",\"projector\"];\r\n            displaydatas = classdetails.filter(\r\n              (data) =>\r\n                !excludeitem.includes(data.itemtype) &&\r\n                classnumbers[data._id] === classnums && buildingobject[data._id]===buildingname\r\n            );\r\n          }\r\n        } else if (item === \"all\") {\r\n          if (classnums === 0 && buildingname==='none') {\r\n            displaydatas = classdetails;  \r\n          } else if(classnums===0 && buildingname!=='none'){\r\n            displaydatas = classdetails.filter(\r\n              (data) => buildingobject[data._id] === buildingname\r\n            );\r\n          }else if(classnums!==0 && buildingname==='none'){\r\n            displaydatas = classdetails.filter(\r\n              (data) => classnumbers[data._id] === classnums\r\n            );\r\n          }else if(classnums!==0 && buildingname!=='none'){\r\n            displaydatas = classdetails.filter(\r\n              (data) => classnumbers[data._id] === classnums && buildingobject[data._id]===buildingname\r\n            );\r\n          }\r\n        } else {\r\n          if (classnums === 0 && buildingname==='none') {\r\n            displaydatas = classdetails.filter((data) => data.itemtype === item);\r\n          } else if(classnums===0 && buildingname!=='none'){\r\n            displaydatas = classdetails.filter(\r\n              (data) => data.itemtype === item && buildingobject[data._id] === buildingname\r\n            );\r\n          }else if(classnums!==0 && buildingname==='none'){\r\n            displaydatas = classdetails.filter(\r\n              (data) => data.itemtype === item && classnumbers[data._id] === classnums\r\n            );\r\n          }else if(classnums!==0 && buildingname!=='none'){\r\n            displaydatas = classdetails.filter(\r\n              (data) => data.itemtype === item && classnumbers[data._id] === classnums && buildingobject[data._id]===buildingname\r\n            );\r\n          }\r\n        }\r\n    \r\n\r\n    displaydatas.sort((a,b)=>{\r\n      const dateA=new Date(a.installationdate);\r\n      const dateB=new Date(b.installationdate);\r\n      return order==='newtoold'?dateB-dateA:dateA-dateB;\r\n    });\r\n    \r\n        const tabledatas = displaydatas.map((data) => ({\r\n          key: data._id,\r\n          product:\r\n            data.itemtype === \"desktop\" ? data.desktopnumber : data.itemtype,\r\n          date: new Date(data.installationdate).toLocaleDateString(),\r\n          description:\r\n            data.description +' '+\r\n            (data.desktopnumber ? ` desktopnumber=${data.desktopnumber}` : \"\") +' '+\r\n            (data.ipaddress ? ` ipaddress=${data.ipaddress}` : \"\") +' '+\r\n            (data.monitornumber ? ` monitornumber=${data.monitornumber}` : \"\") +' '+\r\n            (data.monitorname ? ` monitorname=${data.monitorname}` : \"\") +' '+\r\n            (data.mousenumber ? ` mousenumber=${data.mousenumber}` : \"\") +' '+\r\n            (data.mousename ? ` mousename=${data.mousename}` : \"\") +' '+\r\n            (data.keyboardnumber\r\n              ? ` keyboardnumber=${data.keyboardnumber}`\r\n              : \"\") +' '+\r\n            (data.keyboardname ? ` keyboardname=${data.keyboardname}` : \"\") +' '+\r\n            (data.cpunumber ? ` cpunumber=${data.cpunumber}` : \"\") +' '+\r\n            (data.cpuname ? ` cpuname=${data.cpuname}` : \"\"),\r\n          classname: allclassname[data._id],\r\n        }));\r\n        setDisplaydata(tabledatas);  \r\n      };\r\n      \r\n    const columns =\r\n        classname === \"all\"\r\n          ? [\r\n              { title: \"DESKTOP NUMBER/ITEM NAME\", dataIndex: \"product\", key: \"product\" },\r\n              { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n              {\r\n                title: \"DESCRIPTION/DESKTOP INFO.\",\r\n                dataIndex: \"description\",\r\n                key: \"description\",\r\n              },\r\n              { title: \"CLASS NAME\", dataIndex: \"classname\", key: \"classname\" },\r\n            ]\r\n          : [\r\n              {\r\n                title: \"ITEM NAME/DESKTOP NUMBER\",\r\n                dataIndex: \"product\",\r\n                key: \"product\",\r\n              },\r\n              { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n              {\r\n                title: \"DESCRIPTION\",\r\n                dataIndex: \"description\",\r\n                key: \"description\",\r\n              },\r\n              \r\n            ];\r\n    const itemchange=(value)=>{\r\n    setItem(value);\r\n    //tabledata(item,labnums);\r\n    }\r\n    \r\n    const classnamechange=(value)=>{\r\n      setClassname(value);\r\n     // tabledata(item,labnums);\r\n    }\r\n    useEffect(()=>{\r\n    tabledata(item,classname,sortorder,allclassname);\r\n    },[item,classname,sortorder,allclassname]);\r\n\r\n  return (\r\n    <>\r\n    <Layout2> <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'24px',fontFamily:'bold'}}><p>CLASS SUMMARY</p></div>\r\n  <div className=\"d-flex justify-content-center align-items-center gap-2\" style={{width:\"100%\"}}>\r\n  <span>SELECT ITEM : </span>\r\n          <Select placeholder=\"choose an item\" onChange={itemchange}  style={{width:\"150px\"}}>\r\n          \r\n          <Option value=\"projector\">Projector</Option>\r\n        <Option value=\"printer\">Printer</Option>\r\n        <Option value=\"speaker\">Speaker</Option>\r\n        <Option value=\"microphone\">Microphone</Option>\r\n        <Option value=\"smartboard\">Smartboard</Option>\r\n        <Option value=\"other\">Other</Option>\r\n            <Option value=\"all\">All</Option>\r\n          </Select>\r\n          <span>SELECT CLASS : </span>\r\n           <Select placeholder=\"choose class number\" onChange={classnamechange}  style={{width:\"150px\"}}>\r\n           <Option value='all' >all</Option>\r\n           { totalclass.map((data)=>(\r\n            <Option value={data}>{data}</Option>\r\n           ))}\r\n\r\n           </Select>\r\n           \r\n           <span>SORT ORDER</span>\r\n           <Select placeholder='select sort order' onChange={(value)=>{setSortorder(value)}}>\r\n            <Option value='newtoold'>New to Old</Option>\r\n            <Option value='oldtonew'>Old to New</Option>\r\n           </Select>\r\n         \r\n        </div>\r\n        <button onClick={()=>{window.print()}} style={{marginLeft:'5px',borderRadius:\"10px\",cursor:'pointer' }}>PRINT</button>\r\n        <Table columns={columns} dataSource={displaydata} pagination={false} />\r\n      \r\n    </Layout2>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Classsum;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout2 from \"../../components/Layout2\";\r\nimport { message, Select, Table } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Teachersum = () => {\r\n const [teachers, setTeachers] = useState([]);\r\n  const [teacherdetails, setTeacherdetails] = useState([]);\r\n\r\n  const [teachernames, setTeachernames] = useState({});\r\nconst [totalteachers,setTotalteachers]=useState([]);\r\nconst[teachernums,setTeachernums]=useState('all');\r\nconst[sortorder,setSortorder]=useState('oldtonew')\r\n\r\n  const [item, setItem] = useState(\"all\");\r\n  const [displaydata, setDisplaydata] = useState();\r\n\r\n  const getallteachers = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tech/teacher/getallteacher\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setTeachers(res.data.data);\r\n      } else {\r\n        message.error(res.data.messgae);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getteacherdetails = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tech/teacher/getallteacherdetails\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setTeacherdetails(res.data.data);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const teachernamess = async () => {\r\n    const teachernames = {};\r\n \r\n    const allteacherdetails = teacherdetails;\r\n    for (let data of allteacherdetails) {\r\n      teachernames[data._id] = await teachername(data.teacherid);\r\n    }\r\n    setTeachernames(teachernames);\r\n  };\r\n\r\n  const teachername = async (teacherid) => {\r\n    const allteachers = teachers;\r\n    for (let data of allteachers) {\r\n      if (data._id === teacherid) {\r\n        return data.teachername;\r\n      }\r\n    }\r\n  };\r\n\r\n   useEffect(() => {\r\n      getteacherdetails();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      getallteachers();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      teachernamess();\r\n    }, [teacherdetails, teachers]);\r\n  \r\n    useEffect(()=>{\r\n  const allteachers=[...new Set(teachers.map(data=>data.teachername))];\r\n  setTotalteachers(allteachers);\r\n    },[teachers]);\r\n  \r\n    const initialprint = async () =>  {\r\n      if (item === \"all\") {\r\n        const tabledatas = teacherdetails.map((data) => ({\r\n          key: data._id,\r\n          product:\r\n            data.itemtype === \"desktop\" ? data.desktopnumber : data.itemtype,\r\n          date: new Date(data.installationdate).toLocaleDateString(),\r\n          description:\r\n          data.description +\" \"+\r\n          (data.desktopnumber ? `desktopnumber=${data.desktopnumber}` : \" \") +\" \"+\r\n          (data.ipaddress ? `ipaddress=${data.ipaddress}` : \"\") +\" \"+\r\n          (data.monitornumber ? ` monitornumber=${data.monitornumber}` : \"\") +\" \"+\r\n          (data.monitorname ? ` monitorname=${data.monitorname}` : \"\") +\" \"+\r\n          (data.mousenumber ? ` mousenumber=${data.mousenumber}` : \"\") +\" \"+\r\n          (data.mousename ? ` mousename=${data.mousename}` : \"\") +\" \"+\r\n          (data.keyboardnumber\r\n            ? ` keyboardnumber=${data.keyboardnumber}`\r\n            : \"\") +\" \"+\r\n          (data.keyboardname ? ` keyboardname=${data.keyboardname}` : \"\") +\" \"+\r\n          (data.cpunumber ? ` cpunumber=${data.cpunumber}` : \"\") +\" \"+\r\n          (data.cpuname ? ` cpuname=${data.cpuname}` : \"\"),\r\n          teachername: teachernames[data._id],\r\n        }));\r\n        setDisplaydata(tabledatas);\r\n      }\r\n    };\r\n    useEffect(() => {\r\n      initialprint();\r\n    }, [teacherdetails, teachernames]);\r\n  \r\n    const tabledata = (item, teachername,order) => {\r\n      let displaydatas;\r\n      if (item === 'other') {\r\n        if (teachername === 'all') {\r\n          \r\n          const excludeitem = [\"speaker\",\r\n            \"microphone\",\r\n            \"desktop\",\r\n            \"laptop\",\r\n            \"projector\",\r\n            \"interactive-whiteboard\",\r\n            \"printer\",\r\n            \"scanner\",\r\n            \"router\",\r\n            \"switch\",\r\n            \"server\",\r\n            \"tablet\",\r\n            \"smartphone\",\r\n            \"external-hard-drive\",\r\n            \"usb-device\",\r\n            \"camera\",\r\n            \"document-camera\",\r\n            \"monitor\",\r\n            \"headphones\",\r\n            \"webcam\",\r\n            \"vr-headset\",\r\n            \"coding-kits\",\r\n            \"drone\",\r\n            \"3d-printer\",\r\n            \"arduino-kits\",\r\n            \"raspberry-pi\",\r\n            \"network-tools\"];\r\n          displaydatas = teacherdetails.filter(\r\n            (data) => !excludeitem.includes(data.itemtype)\r\n          );\r\n        } else {\r\n          const excludeitem = [\"speaker\",\r\n  \"microphone\",\r\n  \"desktop\",\r\n  \"laptop\",\r\n  \"projector\",\r\n  \"interactive-whiteboard\",\r\n  \"printer\",\r\n  \"scanner\",\r\n  \"router\",\r\n  \"switch\",\r\n  \"server\",\r\n  \"tablet\",\r\n  \"smartphone\",\r\n  \"external-hard-drive\",\r\n  \"usb-device\",\r\n  \"camera\",\r\n  \"document-camera\",\r\n  \"monitor\",\r\n  \"headphones\",\r\n  \"webcam\",\r\n  \"vr-headset\",\r\n  \"coding-kits\",\r\n  \"drone\",\r\n  \"3d-printer\",\r\n  \"arduino-kits\",\r\n  \"raspberry-pi\",\r\n  \"network-tools\"];\r\n          displaydatas = teacherdetails.filter(\r\n            (data) =>\r\n              !excludeitem.includes(data.itemtype) &&\r\n              teachernames[data._id] === teachername\r\n          );\r\n        }\r\n      } else if (item === \"all\") {\r\n        if (teachername === 'all') {\r\n          displaydatas = teacherdetails;  \r\n        } else {\r\n          displaydatas = teacherdetails.filter(\r\n            (data) => teachernames[data._id] === teachername\r\n          );\r\n        }\r\n      } else {\r\n        if (teachername === 'all') {\r\n          displaydatas = teacherdetails.filter((data) => data.itemtype === item);\r\n        } else {\r\n          displaydatas = teacherdetails.filter(\r\n            (data) => data.itemtype === item && teachernames[data._id] ===teachername\r\n          );\r\n        }\r\n      }\r\n    \r\n  displaydatas.sort((a,b)=>{\r\n    const dateA=new Date(a.installationdate);\r\n    const dateB=new Date(b.installationdate);\r\n    return order==='newtoold'?dateB-dateA:dateA-dateB;\r\n  });\r\n  \r\n      const tabledatas = displaydatas.map((data) => ({\r\n        key: data._id,\r\n        product:\r\n          data.itemtype === \"desktop\" ? data.desktopnumber : data.itemtype,\r\n        date: new Date(data.installationdate).toLocaleDateString(),\r\n        description:\r\n          data.description +' '+\r\n          (data.desktopnumber ? ` desktopnumber=${data.desktopnumber}` : \"\") +' '+\r\n          (data.ipaddress ? ` ipaddress=${data.ipaddress}` : \"\") +' '+\r\n          (data.monitornumber ? ` monitornumber=${data.monitornumber}` : \"\") +' '+\r\n          (data.monitorname ? ` monitorname=${data.monitorname}` : \"\") +' '+\r\n          (data.mousenumber ? ` mousenumber=${data.mousenumber}` : \"\") +' '+\r\n          (data.mousename ? ` mousename=${data.mousename}` : \"\") +' '+\r\n          (data.keyboardnumber\r\n            ? ` keyboardnumber=${data.keyboardnumber}`\r\n            : \"\") +' '+\r\n          (data.keyboardname ? ` keyboardname=${data.keyboardname}` : \"\") +' '+\r\n          (data.cpunumber ? ` cpunumber=${data.cpunumber}` : \"\") +' '+\r\n          (data.cpuname ? ` cpuname=${data.cpuname}` : \"\"),\r\n        teachername: teachernames[data._id],\r\n      }));\r\n      setDisplaydata(tabledatas);  \r\n    };\r\n    \r\n   const columns =\r\n      item === \"desktop\"\r\n        ? [\r\n            { title: \"DESKTOP NUMBER\", dataIndex: \"product\", key: \"product\" },\r\n            { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n            {\r\n              title:  \"DESCRIPTION/DESKTOP INFO.\",\r\n              dataIndex: \"description\",\r\n              key: \"description\",\r\n            },\r\n            { title: \"PROFESSOR NAME\", dataIndex: \"teachername\", key: \"teachername\" },\r\n          ]\r\n        : [\r\n            {\r\n              title: \"ITEM NAME/DESKTOP NUMBER\",\r\n              dataIndex: \"product\",\r\n              key: \"product\",\r\n            },\r\n            { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n            {\r\n              title:\"DESCRIPTION\",\r\n              dataIndex: \"description\",\r\n              key: \"description\",\r\n            },\r\n            { title: \"PROFESSOR NAME\", dataIndex: \"teachername\", key: \"teachername\" },\r\n          ];\r\n  const itemchange=(value)=>{\r\n  setItem(value);\r\n  //tabledata(item,labnums);\r\n  }\r\n  \r\n  const teachernamechange=(value)=>{\r\n    setTeachernums(value);\r\n   // tabledata(item,labnums);\r\n  }\r\n  useEffect(()=>{\r\n  tabledata(item,teachernums,sortorder);\r\n  },[item,teachernums,sortorder])\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Layout2>\r\n      <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'24px',fontFamily:'bold'}}><p>TEACHER SUMMARY</p></div>\r\n <div className=\"d-flex justify-content-center align-items-center gap-2\" style={{width:\"100%\"}}>\r\n <span>SELECT ITEM : </span>\r\n          <Select placeholder=\"choose an item\" onChange={itemchange}  style={{width:\"150px\"}}>\r\n          \r\n  {[\"speaker\",\r\n  \"microphone\",\r\n  \"desktop\",\r\n  \"laptop\",\r\n  \"projector\",\r\n  \"interactive-whiteboard\",\r\n  \"printer\",\r\n  \"scanner\",\r\n  \"router\",\r\n  \"switch\",\r\n  \"server\",\r\n  \"tablet\",\r\n  \"smartphone\",\r\n  \"external-hard-drive\",\r\n  \"usb-device\",\r\n  \"camera\",\r\n  \"document-camera\",\r\n  \"monitor\",\r\n  \"headphones\",\r\n  \"webcam\",\r\n  \"vr-headset\",\r\n  \"coding-kits\",\r\n  \"drone\",\r\n  \"3d-printer\",\r\n  \"arduino-kits\",\r\n  \"raspberry-pi\",\r\n  \"network-tools\",\"all\",\"other\"].map((data)=>(\r\n<Option value={data}>{data}</Option>\r\n  ))}\r\n          </Select>\r\n          <span>SELECT TEACHER : </span>\r\n           <Select placeholder=\"choose teacher name\" onChange={teachernamechange} style={{width:\"150px\"}}>\r\n           <Option value='all' >All</Option>\r\n           { totalteachers.map((data)=>(\r\n            <Option value={data}>{data}</Option>\r\n           ))}\r\n\r\n           </Select>\r\n           <span>SORT ORDER</span>\r\n           <Select placeholder='select sort order' onChange={(value)=>{setSortorder(value)}}>\r\n            <Option value='newtoold'>New to Old</Option>\r\n            <Option value='oldtonew'>Old to New</Option>\r\n           </Select>\r\n            \r\n        </div>\r\n        <button onClick={()=>{window.print()}} style={{marginLeft:'5px',borderRadius:\"10px\",cursor:'pointer' }}>PRINT</button>\r\n        <Table columns={columns} dataSource={displaydata} pagination={false} />\r\n\r\n\r\n\r\n      </Layout2>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Teachersum\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout2 from \"../../components/Layout2\";\r\nimport { message, Select, Table } from \"antd\";\r\nimport axios from \"axios\";\r\nconst { Option } = Select;\r\n\r\nconst Serversum = () => {\r\n  const [serverrooms, setServerrooms] = useState([]);\r\n  const [serverroomdetails, setServerroomdetails] = useState([]);\r\n\r\n  const [serverroomnames, setServerroomnames] = useState({});\r\n  const [totalserverrooms, setTotalserverrooms] = useState([]);\r\n  const [serverroomnums, setServerroomnums] = useState(\"all\");\r\n  const [sortorder, setSortorder] = useState(\"oldtonew\");\r\n\r\n  const [item, setItem] = useState(\"all\");\r\n  const [displaydata, setDisplaydata] = useState();\r\n\r\n  const getallserverrooms = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tech/server/getallserver\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setServerrooms(res.data.data);\r\n      } else {\r\n        message.error(res.data.messgae);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getserverroomdetails = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        \"/api/v1/tech/server/getallserverroomdetails\",\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setServerroomdetails(res.data.data);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const serverroomnamess = async () => {\r\n    const serverroomnames = {};\r\n\r\n    const allserverroomdetails = serverroomdetails;\r\n    for (let data of allserverroomdetails) {\r\n      serverroomnames[data._id] = await serverroomname(data.serverroomid);\r\n    }\r\n    setServerroomnames(serverroomnames);\r\n  };\r\n\r\n  const serverroomname = async (serverroomid) => {\r\n    const allserverrooms = serverrooms;\r\n    for (let data of allserverrooms) {\r\n      if (data._id === serverroomid) {\r\n        return data.roomname;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getserverroomdetails();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getallserverrooms();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    serverroomnamess();\r\n  }, [serverroomdetails, serverrooms]);\r\n\r\n  useEffect(() => {\r\n    const allserverrooms = [\r\n      ...new Set(serverrooms.map((data) => data.roomname)),\r\n    ];\r\n    setTotalserverrooms(allserverrooms);\r\n  }, [serverrooms]);\r\n\r\n  const initialprint = async () => {\r\n    if (item === \"all\") {\r\n      const tabledatas = serverroomdetails.map((data) => ({\r\n        key: data._id,\r\n        product:\r\n          data.itemtype === \"desktop\" ? data.desktopnumber : data.itemtype,\r\n        date: new Date(data.installationdate).toLocaleDateString(),\r\n        description:\r\n          data.description +\r\n          \" \" +\r\n          (data.desktopnumber ? `desktopnumber=${data.desktopnumber}` : \" \") +\r\n          \" \" +\r\n          (data.ipaddress ? `ipaddress=${data.ipaddress}` : \"\") +\r\n          \" \" +\r\n          (data.monitornumber ? ` monitornumber=${data.monitornumber}` : \"\") +\r\n          \" \" +\r\n          (data.monitorname ? ` monitorname=${data.monitorname}` : \"\") +\r\n          \" \" +\r\n          (data.mousenumber ? ` mousenumber=${data.mousenumber}` : \"\") +\r\n          \" \" +\r\n          (data.mousename ? ` mousename=${data.mousename}` : \"\") +\r\n          \" \" +\r\n          (data.keyboardnumber\r\n            ? ` keyboardnumber=${data.keyboardnumber}`\r\n            : \"\") +\r\n          \" \" +\r\n          (data.keyboardname ? ` keyboardname=${data.keyboardname}` : \"\") +\r\n          \" \" +\r\n          (data.cpunumber ? ` cpunumber=${data.cpunumber}` : \"\") +\r\n          \" \" +\r\n          (data.cpuname ? ` cpuname=${data.cpuname}` : \"\") +\r\n          \"\" +\r\n          (data.serverName ? `server name : ${data.serverName}` : \" \") +\r\n          \" \" +\r\n          (data.serverType ? `server type: ${data.serverType}` : \" \") +\r\n          \" \" +\r\n          (data.operatingSystem\r\n            ? `operating system : ${data.operatingSystem}`\r\n            : \" \") +\r\n          \" \" +\r\n          (data.hostname ? `hostname : ${data.hostname}` : \"\") +\r\n          \" \" +\r\n          (data.macAddress ? `mac address : ${data.macAddress}` : \"\"),\r\n        serverroomname: serverroomnames[data._id],\r\n      }));\r\n      setDisplaydata(tabledatas);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    initialprint();\r\n  }, [serverroomdetails, serverroomnames]);\r\n\r\n  const tabledata = (item, serverroomname, order) => {\r\n    let displaydatas;\r\n    if (item === \"other\") {\r\n      if (serverroomname === \"all\") {\r\n        const excludeitem = [\r\n          \"server\",\r\n          \"desktop\",\r\n          \"laptop\",\r\n          \"networkSwitches\",\r\n          \"routers\",\r\n          \"firewalls\",\r\n          \"ups\",\r\n          \"coolingSystems\",\r\n          \"patchPanels\",\r\n          \"cableManagement\",\r\n          \"storageArrays\",\r\n          \"kvmSwitch\",\r\n          \"serverRacks\",\r\n          \"securityCameras\",\r\n          \"accessControl\",\r\n          \"environmentalMonitoring\",\r\n          \"backupSystems\",\r\n          \"fireSuppression\",\r\n          \"remoteManagement\",\r\n          \"pdus\",\r\n          \"patchCables\",\r\n          \"monitoringSoftware\",\r\n        ];\r\n        displaydatas = serverroomdetails.filter(\r\n          (data) => !excludeitem.includes(data.itemtype)\r\n        );\r\n      } else {\r\n        const excludeitem = [\r\n          \"server\",\r\n          \"desktop\",\r\n          \"laptop\",\r\n          \"networkSwitches\",\r\n          \"routers\",\r\n          \"firewalls\",\r\n          \"ups\",\r\n          \"coolingSystems\",\r\n          \"patchPanels\",\r\n          \"cableManagement\",\r\n          \"storageArrays\",\r\n          \"kvmSwitch\",\r\n          \"serverRacks\",\r\n          \"securityCameras\",\r\n          \"accessControl\",\r\n          \"environmentalMonitoring\",\r\n          \"backupSystems\",\r\n          \"fireSuppression\",\r\n          \"remoteManagement\",\r\n          \"pdus\",\r\n          \"patchCables\",\r\n          \"monitoringSoftware\",\r\n        ];\r\n        displaydatas = serverroomdetails.filter(\r\n          (data) =>\r\n            !excludeitem.includes(data.itemtype) &&\r\n            serverroomnames[data._id] === serverroomname\r\n        );\r\n      }\r\n    } else if (item === \"all\") {\r\n      if (serverroomname === \"all\") {\r\n        displaydatas = serverroomdetails;\r\n      } else {\r\n        displaydatas = serverroomdetails.filter(\r\n          (data) => serverroomnames[data._id] === serverroomname\r\n        );\r\n      }\r\n    } else {\r\n      if (serverroomname === \"all\") {\r\n        displaydatas = serverroomdetails.filter(\r\n          (data) => data.itemtype === item\r\n        );\r\n      } else {\r\n        displaydatas = serverroomdetails.filter(\r\n          (data) =>\r\n            data.itemtype === item &&\r\n            serverroomnames[data._id] === serverroomname\r\n        );\r\n      }\r\n    }\r\n\r\n    displaydatas.sort((a, b) => {\r\n      const dateA = new Date(a.installationdate);\r\n      const dateB = new Date(b.installationdate);\r\n      return order === \"newtoold\" ? dateB - dateA : dateA - dateB;\r\n    });\r\n\r\n    const tabledatas = displaydatas.map((data) => ({\r\n      key: data._id,\r\n      product: data.itemtype === \"desktop\" ? data.desktopnumber : data.itemtype,\r\n      date: new Date(data.installationdate).toLocaleDateString(),\r\n      description:\r\n        data.description +\r\n        \" \" +\r\n        (data.desktopnumber ? ` desktopnumber=${data.desktopnumber}` : \"\") +\r\n        \" \" +\r\n        (data.ipaddress ? ` ipaddress=${data.ipaddress}` : \"\") +\r\n        \" \" +\r\n        (data.monitornumber ? ` monitornumber=${data.monitornumber}` : \"\") +\r\n        \" \" +\r\n        (data.monitorname ? ` monitorname=${data.monitorname}` : \"\") +\r\n        \" \" +\r\n        (data.mousenumber ? ` mousenumber=${data.mousenumber}` : \"\") +\r\n        \" \" +\r\n        (data.mousename ? ` mousename=${data.mousename}` : \"\") +\r\n        \" \" +\r\n        (data.keyboardnumber ? ` keyboardnumber=${data.keyboardnumber}` : \"\") +\r\n        \" \" +\r\n        (data.keyboardname ? ` keyboardname=${data.keyboardname}` : \"\") +\r\n        \" \" +\r\n        (data.cpunumber ? ` cpunumber=${data.cpunumber}` : \"\") +\r\n        \" \" +\r\n        (data.cpuname ? ` cpuname=${data.cpuname}` : \"\") +\r\n        \"\" +\r\n        (data.serverName ? `server name : ${data.serverName}` : \" \") +\r\n        \" \" +\r\n        (data.serverType ? `server type: ${data.serverType}` : \" \") +\r\n        \" \" +\r\n        (data.operatingSystem\r\n          ? `operating system : ${data.operatingSystem}`\r\n          : \" \") +\r\n        \" \" +\r\n        (data.hostname ? `hostname : ${data.hostname}` : \"\") +\r\n        \" \" +\r\n        (data.macAddress ? `mac address : ${data.macAddress}` : \"\"),\r\n      serverroomname: serverroomnames[data._id],\r\n    }));\r\n    setDisplaydata(tabledatas);\r\n  };\r\n\r\n  const columns =\r\n    item === \"desktop\"\r\n      ? [\r\n          { title: \"DESKTOP NUMBER\", dataIndex: \"product\", key: \"product\" },\r\n          { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n          {\r\n            title:  \"DESCRIPTION/DESKTOP INFO.\",\r\n            dataIndex: \"description\",\r\n            key: \"description\",\r\n          },\r\n          {\r\n            title: \"SERVER ROOM NAME\",\r\n            dataIndex: \"serverroomname\",\r\n            key: \"serverroomname\",\r\n          },\r\n        ]\r\n      : [\r\n          {\r\n            title: \"ITEM NAME/DESKTOP NUMBER\",\r\n            dataIndex: \"product\",\r\n            key: \"product\",\r\n          },\r\n          { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n          {\r\n            title: \"DESCRIPTION\",\r\n            dataIndex: \"description\",\r\n            key: \"description\",\r\n          },\r\n          {\r\n            title: \"SERVER ROOM NAME\",\r\n            dataIndex: \"serverroomname\",\r\n            key: \"serverroomname\",\r\n          },\r\n        ];\r\n  const itemchange = (value) => {\r\n    setItem(value);\r\n    //tabledata(item,labnums);\r\n  };\r\n\r\n  const serverroomnamechange = (value) => {\r\n    setServerroomnums(value);\r\n    // tabledata(item,labnums);\r\n  };\r\n  useEffect(() => {\r\n    tabledata(item, serverroomnums, sortorder);\r\n  }, [item, serverroomnums, sortorder]);\r\n\r\n  return (\r\n    <>\r\n      <Layout2>\r\n      <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'24px',fontFamily:'bold'}}><p>SERVER SUMMARY</p></div>\r\n        <div\r\n          className=\"d-flex justify-content-center align-items-center gap-2\"\r\n          style={{ width: \"100%\" }}\r\n        >\r\n          <span>SELECT ITEM : </span>\r\n          <Select\r\n            placeholder=\"choose an item\"\r\n            onChange={itemchange}\r\n            style={{ width: \"150px\" }}\r\n          >\r\n            {[\r\n              \"server\",\r\n              \"desktop\",\r\n              \"laptop\",\r\n              \"networkSwitches\",\r\n              \"routers\",\r\n              \"firewalls\",\r\n              \"ups\",\r\n              \"coolingSystems\",\r\n              \"patchPanels\",\r\n              \"cableManagement\",\r\n              \"storageArrays\",\r\n              \"kvmSwitch\",\r\n              \"serverRacks\",\r\n              \"securityCameras\",\r\n              \"accessControl\",\r\n              \"environmentalMonitoring\",\r\n              \"backupSystems\",\r\n              \"fireSuppression\",\r\n              \"remoteManagement\",\r\n              \"pdus\",\r\n              \"patchCables\",\r\n              \"monitoringSoftware\",\r\n              \"all\",\r\n              \"other\",\r\n            ].map((data) => (\r\n              <Option value={data}>{data}</Option>\r\n            ))}\r\n          </Select>\r\n          <span>SELECT SERVER ROOM : </span>\r\n          <Select\r\n            placeholder=\"choose server room name\"\r\n            onChange={serverroomnamechange}\r\n            style={{ width: \"150px\" }}\r\n          >\r\n            <Option value=\"all\">All</Option>\r\n            {totalserverrooms.map((data) => (\r\n              <Option value={data}>{data}</Option>\r\n            ))}\r\n          </Select>\r\n          <span>SORT ORDER</span>\r\n          <Select\r\n            placeholder=\"select sort order\"\r\n            onChange={(value) => {\r\n              setSortorder(value);\r\n            }}\r\n          >\r\n            <Option value=\"newtoold\">New to Old</Option>\r\n            <Option value=\"oldtonew\">Old to New</Option>\r\n          </Select>\r\n        </div>\r\n        <button\r\n          onClick={() => {\r\n            window.print();\r\n          }}\r\n          style={{ marginLeft: \"5px\", borderRadius: \"10px\", cursor: \"pointer\" }}\r\n        >\r\n          PRINT\r\n        </button>\r\n        <Table columns={columns} dataSource={displaydata} pagination={false} />\r\n      </Layout2>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Serversum;\r\n","import React,{useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst data = [\r\n  {\r\n    name: \"Teacher\",\r\n    path: \"/teachern\",\r\n    icon: \"fa-solid fa-chalkboard-user\",\r\n  },\r\n  {\r\n    name: \"Class\",\r\n    path: \"/classn\",\r\n    icon: \"fa-solid fa-house\",\r\n  },\r\n  {\r\n    name: \"Lab\",\r\n    path: \"/labn\",\r\n    icon: \"fa-solid fa-computer\",\r\n  },\r\n  {\r\n    name: \"Server\",\r\n    path: \"/servern\",\r\n    icon: \"fa-solid fa-server\",\r\n  },\r\n  {\r\n    name: \"Dump\",\r\n    path: \"/dumpn\",\r\n    icon: \"fa-solid fa-trash\",\r\n  },\r\n];\r\nconst Nontechpage = () => {\r\n    const roles = useSelector((State) => State.role.role);\r\n    const dispatch = useDispatch();\r\n\r\n     useEffect(() => {\r\n        if (roles === \"admin\" || roles === \"editor\") {\r\n          localStorage.setItem(\"role\", roles);\r\n        }\r\n      }, [roles]);\r\n    \r\n      useEffect(() => {\r\n        const savedRole = localStorage.getItem(\"role\");\r\n        if (savedRole && savedRole !== roles) {\r\n          dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n        }\r\n      }, [dispatch]);\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n      <Layout>\r\n      <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'34px',fontFamily:'bold'}}><p>NON TECHNICAL</p></div>\r\n        <section className=\"container1\">\r\n          {data.map((data) => {\r\n            return (\r\n              <div\r\n                className=\"box1\"\r\n                onClick={() => {\r\n                  navigate(data.path);\r\n                }}\r\n              >\r\n                <i class={data.icon}></i>\r\n\r\n                <b>{data.name}</b>\r\n              </div>\r\n            );\r\n          })}\r\n        </section>\r\n     \r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Nontechpage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message } from \"antd\";\r\nimport axios from \"axios\";\r\n import \"../../styles/Techpagestyles.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst Teacherpage_non = () => {\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  const navigate=useNavigate();\r\n  const [teacherlist,setTeacherlist]=useState([]);\r\n\r\n  useEffect(() => {\r\n    if (roles === \"admin\" || roles === \"editor\") {\r\n      localStorage.setItem(\"role\", roles);\r\n    }\r\n  }, [roles]);\r\n\r\n  useEffect(() => {\r\n    const savedRole = localStorage.getItem(\"role\");\r\n    if (savedRole && savedRole !== roles) {\r\n      dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n    }\r\n  }, [dispatch]);\r\n\r\n    const handleform = async (values) => {\r\n        try {\r\n          const res = await axios.post(\"/api/v1/tech/teacher/addteacher\", values);\r\n    \r\n          if (res.data.success) {\r\n            message.success(res.data.message);\r\n            window.location.reload();\r\n          } else {\r\n            message.error(res.data.message);\r\n             window.location.reload();\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n\r\n\r\n      const getallteacher = async () => {\r\n        const res = await axios.get(\"/api/v1/tech/teacher/getallteacher\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n    \r\n        if (res.data.success) {\r\n          setTeacherlist(res.data.data);\r\n          message.success(\"all teachers get\");\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n      };\r\n    \r\n      useEffect(() => {\r\n        getallteacher();\r\n      }, []);\r\n\r\n      const handledelete = async (id) => {\r\n        try {\r\n          // eslint-disable-next-line no-restricted-globals\r\n          var result = confirm(\"really want to delete\");\r\n          if (result) {\r\n            const res = await axios.post(\r\n              \"/api/v1/tech/teacher/deleteteacher\",\r\n              { id },\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n              }\r\n            );\r\n            if (res.data.success) {\r\n              message.success(res.data.message);\r\n            } else {\r\n              message.error(res.data.message);\r\n            }\r\n            window.location.reload();\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n      \r\n\r\n  return (\r\n    <>\r\n    <Layout>\r\n    <div className=\"\">\r\n          <Form layout=\"vertical\" onFinish={handleform} className=\"m-2\">\r\n            <h3 className=\"text-center\">Teacher's Room</h3>\r\n            <Row gutter={20}>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Teacher name\"\r\n                  name=\"teachername\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type teacher's name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Room number\"\r\n                  name=\"roomno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type room number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Building name\"\r\n                  name=\"buildingname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type building name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Floor number\"\r\n                  name=\"floorno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type floor number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={4}>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"180px\", marginTop: \"25px\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n\r\n        {teacherlist &&\r\n        teacherlist.map((data) => {\r\n          return (\r\n            <div className=\"card m-2 cardstyle\">\r\n              <div\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"card-header\"\r\n                onClick={() => {\r\n                  navigate(`/teacherdetails_non/${data._id}`);\r\n                }}\r\n              >\r\n                Teacher Name:\r\n                <b> {data.teachername}</b>\r\n              </div>\r\n\r\n              <div className=\"card-body p-2\">\r\n                <p>\r\n                  <b>Room No: </b>\r\n                  {data.roomno}\r\n                </p>\r\n                <p>\r\n                  <b>Building Name: </b>\r\n                  {data.buildingname}\r\n                </p>\r\n                <p>\r\n                  <b>Floor No: </b>\r\n                  {data.floorno}\r\n                </p>\r\n                <p>\r\n                  <button\r\n                    onClick={() => {\r\n                      // eslint-disable-next-line no-restricted-globals\r\n                      let result = confirm(\"really want to edit\");\r\n                      if (result) {\r\n                        navigate(`/teachereditnon/${data._id}`);\r\n                      }\r\n                    }}\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      handledelete(data._id);\r\n                    }}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n       \r\n\r\n    </Layout>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Teacherpage_non\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport { useParams,useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n \r\n const Teachereditnon = () => {\r\n const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [teacherinfo, setTeacherinfo] = useState(null);\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n    \r\n    const getteacherdata = async () => {\r\n        const res = await axios.post(\r\n          \"/api/v1/tech/teacher/getteacherdata\",\r\n          {\r\n            teacherid: params.teacherid,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        if (res.data.success) {\r\n          setTeacherinfo(res.data.data);\r\n          //   Form.setFieldsValue(res.data.data);\r\n          //console.log(labdata);\r\n          message.success(res.data.message);\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n      };\r\n    \r\n      useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        getteacherdata();\r\n      }, []);\r\n\r\n      const handleform = async (values) => {\r\n        values.teacherid = params.teacherid;\r\n        try {\r\n          const res = await axios.post(\"/api/v1/tech/teacher/editteacher\", values, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          });\r\n    \r\n          if (res.data.success) {\r\n            message.success(res.data.message);\r\n            navigate(\"/teachern\");\r\n          } else {\r\n            message.error(res.data.message);\r\n          }\r\n          window.location.reload();\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n\r\n   return (\r\n     <>\r\n     <Layout>\r\n        {teacherinfo &&\r\n        <div className=\"form-div\">\r\n                  <Form layout=\"vertical\" onFinish={handleform} className=\"m-2\" initialValues={teacherinfo}>\r\n                    <h3 className=\"text-center\">Edit Teacher</h3>\r\n                    <Row gutter={20}>\r\n                      <Col xs={24} md={24} lg={5}>\r\n                        <Form.Item\r\n                          label=\"Teacher name\"\r\n                          name=\"teachername\"\r\n                          rules={[{ required: true }]}\r\n                        >\r\n                          <Input type=\"text\" placeholder=\"type teacher's name\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} md={24} lg={5}>\r\n                        <Form.Item\r\n                          label=\"Room number\"\r\n                          name=\"roomno\"\r\n                          rules={[{ required: true }]}\r\n                        >\r\n                          <Input type=\"number\" placeholder=\"type room number\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} md={24} lg={5}>\r\n                        <Form.Item\r\n                          label=\"Building name\"\r\n                          name=\"buildingname\"\r\n                          rules={[{ required: true }]}\r\n                        >\r\n                          <Input type=\"text\" placeholder=\"type building name\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} md={24} lg={5}>\r\n                        <Form.Item\r\n                          label=\"Floor number\"\r\n                          name=\"floorno\"\r\n                          rules={[{ required: true }]}\r\n                        >\r\n                          <Input type=\"number\" placeholder=\"type floor number\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} md={24} lg={4}>\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          style={{ width: \"180px\", marginTop: \"25px\" }}\r\n                          type=\"submit\"\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </div>\r\n }\r\n     </Layout>\r\n       \r\n     </>\r\n   )\r\n }\r\n \r\n export default Teachereditnon\r\n ","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message, Select, DatePicker } from \"antd\";\r\n\r\nimport \"../../styles/Newtechpagestyles.css\";\r\n\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\nconst { Option } = Select;\r\n\r\nconst Teacherdetailsnon = () => {\r\n    const roles = useSelector((State) => State.role.role);\r\n    const dispatch = useDispatch();\r\n  const [teacherdetails, setTeacherdetails] = useState([]);\r\n  const [itemtype, setItemtype] = useState();\r\n  const [formattedDates, setFormattedDates] = useState({});\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n const [teachername,setTeachername]=useState();\r\n   const [teacher,setTeacher]=useState([]);\r\n\r\nuseEffect(() => {\r\n    if (roles === \"admin\" || roles === \"editor\") {\r\n      localStorage.setItem(\"role\", roles);\r\n    }\r\n  }, [roles]);\r\n\r\n  useEffect(() => {\r\n    const savedRole = localStorage.getItem(\"role\");\r\n    if (savedRole && savedRole !== roles) {\r\n      dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n    }\r\n  }, [dispatch]);\r\n\r\n   const getallteachers = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tech/teacher/getallteacher\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setTeacher(res.data.data);\r\n      } else {\r\n        message.error(res.data.messgae);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    const lab=teacher.find((data)=>data._id===params.teacherid);\r\n     if(lab){\r\n      setTeachername(lab.teachername);\r\n     }\r\n      },[teacher,params.teacherid]);\r\n\r\n   useEffect(() => {\r\n      getallteachers();\r\n    }, []);\r\n\r\n  const handlefinish = async (values) => {\r\n    // console.log(\"Received values:\", values);\r\n    values.teacherid = params.teacherid;\r\n    if (values.itemtype === \"other\" && values.otheritemtype) {\r\n      values.itemtype = values.otheritemtype;\r\n      delete values.otheritemtype;\r\n    }\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/teacher/addteacherdetailnon\",\r\n        values\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getdetails = async () => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/teacher/getdetailofteachernon\",\r\n        {\r\n          teacherid: params.teacherid,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setTeacherdetails(res.data.data);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n useEffect(() => {\r\n    getdetails();\r\n  }, []);\r\n\r\n\r\n  const handledelete = async (id) => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/teacher/deleteteacherdetailnon\",\r\n        {\r\n          id,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'34px',fontFamily:'bold'}}><p>{teachername}</p></div>\r\n      <div\r\n        className=\"form-divnew\"\r\n        style={{\r\n          border: \"1px solid black\",\r\n          width: \"100%\",\r\n          margin: \"10px\",\r\n          float: \"left\",\r\n        }}\r\n      >\r\n        <Form layout=\"vertical\" onFinish={handlefinish} className=\"m-2\">\r\n          <h3 className=\"text-center\">ADD ITEM</h3>\r\n          <Row gutter={20}>\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                name=\"itemtype\"\r\n                label=\"Item Type\"\r\n                rules={[{ required: true, message: \"Item type is required\" }]}\r\n              >\r\n                <Select\r\n                  placeholder=\"select item type\"\r\n                  onChange={(value) => setItemtype(value)}\r\n                >\r\n                  <Option value=\"whiteboard\">Whiteboard</Option>\r\n                  <Option value=\"marker\">Marker</Option>\r\n                  <Option value=\"chalk\">Chalk</Option>\r\n                  <Option value=\"duster\">Duster</Option>\r\n                  <Option value=\"notice_board\">Notice Board</Option>\r\n                  <Option value=\"bookshelf\">Bookshelf</Option>\r\n                  <Option value=\"clock\">Clock</Option>\r\n                  <Option value=\"chair\">Chair</Option>\r\n                  <Option value=\"desk\">Desk</Option>\r\n                  <Option value=\"pen_holder\">Pen Holder</Option>\r\n                  <Option value=\"paper_stack\">Paper Stack</Option>\r\n                  <Option value=\"file_cabinet\">File Cabinet</Option>\r\n                  <Option value=\"cupboard\">Cupboard</Option>\r\n                  <Option value=\"curtains\">Curtains</Option>\r\n                  <Option value=\"trash_bin\">Trash Bin</Option>\r\n                  <Option value=\"water_bottle\">Water Bottle</Option>\r\n                  <Option value=\"notepad\">Notepad</Option>\r\n                  <Option value=\"globe\">Globe</Option>\r\n                  <Option value=\"poster\">Poster</Option>\r\n                  <Option value=\"calendar\">Calendar</Option>\r\n                  <Option value=\"plant\">Plant</Option>\r\n                  <Option value=\"student_chair\">Student Chair</Option>\r\n                  <Option value=\"bulletin_board\">Bulletin Board</Option>\r\n                  <Option value=\"stapler\">Stapler</Option>\r\n                  <Option value=\"scissors\">Scissors</Option>\r\n                  <Option value=\"paperweight\">Paperweight</Option>\r\n                  <Option value=\"nameplate\">Nameplate</Option>\r\n                  <Option value=\"map\">Map</Option>\r\n                  <Option value=\"lamp\">Lamp</Option>\r\n                  <Option value=\"cup\">Cup</Option>\r\n                  <Option value=\"rubber_band\">Rubber Band</Option>\r\n                  <Option value=\"folder\">Folder</Option>\r\n                  <Option value=\"sticky_notes\">Sticky Notes</Option>\r\n                  <Option value=\"paper_clips\">Paper Clips</Option>\r\n                  <Option value=\"first_aid_kit\">First Aid Kit</Option>\r\n                  <Option value=\"other\">Other</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            {itemtype === \"other\" && (\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"other item name\"\r\n                  name=\"otheritemtype\"\r\n                  rules={[\r\n                    { required: true, message: \"other item name required\" },\r\n                  ]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type item name\" />\r\n                </Form.Item>\r\n              </Col>\r\n            )}\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                label=\"Unique Id\"\r\n                name=\"uid\"\r\n                rules={[{ required: true, message: \" uid required\" }]}\r\n              >\r\n                <Input type=\"text\" placeholder=\"type unique id\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                name=\"installationdate\"\r\n                label=\"Installation Date\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Installation date is required\",\r\n                  },\r\n                ]}\r\n              >\r\n                <DatePicker style={{ width: \"100%\" }} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                rules={[{ required: true, message: \"Description is required\" }]}\r\n              >\r\n                <Input.TextArea\r\n                  placeholder=\"enter description\"\r\n                  rows={1}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={4}>\r\n              <Form.Item>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"60%\", marginLeft: \"4px\",marginTop:\"22px\"}}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n\r\n      <table\r\n          className=\"table\"\r\n          style={{\r\n            width: \"100%\",\r\n            borderCollapse: \"collapse\",\r\n            marginTop: \"10px\",\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Item Type\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n               Unique Id\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Installation Date\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Description\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Actions\r\n              </th>\r\n              </tr>\r\n</thead>\r\n<tbody>\r\n{teacherdetails &&\r\n              teacherdetails.map((data) => (\r\n                <tr key={data._id}>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <b>{data.itemtype}</b>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <b>{data.uid}</b>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    {new Date(data.installationdate).toLocaleDateString()}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n\r\n                      width: \"350px\",\r\n                    }}\r\n                  >\r\n                    <div style={{ maxHeight: \"150px\", overflowY: \"auto\" }}>\r\n                      {data.description || \"N/A\"}\r\n                    </div>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <i\r\n                      className=\"fa-solid fa-trash icon\"\r\n                      style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Do you want to delete?\")) {\r\n                          handledelete(data._id);\r\n                        }\r\n                      }}\r\n                    ></i>\r\n                    <i\r\n                      className=\"fa-solid fa-pen-to-square edit\"\r\n                      style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Do you want to edit?\")) {\r\n                          navigate(`/teacherdetaileditnon/${data._id}`);\r\n                        }\r\n                      }}\r\n                    ></i>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n</tbody>\r\n              </table>\r\n\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Teacherdetailsnon;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {useNavigate,useParams} from \"react-router-dom\";\r\nimport axios from'axios';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  message,\r\n  Select,\r\n  DatePicker,\r\n   \r\n} from \"antd\";\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\nconst {Option} =Select;\r\n\r\n\r\nconst Teacherdetaileditnon = () => {\r\n\r\n  const [form]=Form.useForm();\r\n    const [itemtype, setItemtype] = useState(null);\r\n    const [teacherdetailinfo, setTeacherdetailinfo] = useState(null);\r\n    const params=useParams();\r\n    const roles = useSelector((State) => State.role.role);\r\n    const dispatch = useDispatch();\r\n\r\n      useEffect(() => {\r\n        if (roles === \"admin\" || roles === \"editor\") {\r\n          localStorage.setItem(\"role\", roles);\r\n        }\r\n      }, [roles]);\r\n    \r\n      useEffect(() => {\r\n        const savedRole = localStorage.getItem(\"role\");\r\n        if (savedRole && savedRole !== roles) {\r\n          dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n        }\r\n      }, [dispatch]);\r\n\r\n    const handlefinish=async(values)=>{\r\n        if (values.itemtype === \"other\" && values.otheritemtype) {\r\n            values.itemtype = values.otheritemtype;\r\n            delete values.otheritemtype;\r\n          }\r\n          values.teacherdetailid = params.teacherdetailid;\r\n      \r\n          try {\r\n            const res = await axios.post(\r\n              \"/api/v1/tech/teacher/updateteacherdetailnon\",\r\n              values,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n              }\r\n            );\r\n            if (res.data.success) {\r\n              message.success(res.data.message);\r\n              window.history.back();\r\n            } else {\r\n              message.error(res.data.message);\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n            message.error(\"spmething went wrong\");\r\n          }\r\n    };\r\n\r\n    const getteacherdetails=async()=>{\r\n        const res = await axios.post(\r\n            \"/api/v1/tech/teacher/getteacherdetaildatanon\",\r\n            {\r\n              teacherdetailid: params.teacherdetailid,\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n              },\r\n            }\r\n          );\r\n          if (res.data.success) {\r\n            setTeacherdetailinfo(res.data.data);\r\n            //   Form.setFieldsValue(res.data.data);\r\n            //console.log(labdata);\r\n            const {installationdate,...otherdata}=res.data.data;\r\n            form.setFieldsValue({\r\n                ...otherdata,\r\n                installationdate:installationdate?moment(installationdate):null\r\n            });\r\n            message.success(res.data.message);\r\n          } else {\r\n            message.error(res.data.message);\r\n          }\r\n    };\r\n\r\n     useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        getteacherdetails();\r\n      }, []);\r\n  return (\r\n    <Layout>\r\n       <div\r\n              className=\"form-divnew\"\r\n              style={{\r\n                border: \"1px solid black\",\r\n                width: \"40%\",\r\n                margin: \"10px\",\r\n                float: \"left\",\r\n              }}\r\n            >\r\n              <Form layout=\"vertical\" onFinish={handlefinish} className=\"m-2\" form={form}>\r\n                <h3 className=\"text-center\">Edit Detail</h3>\r\n                <Row gutter={20}>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"itemtype\"\r\n                      label=\"Item Type\"\r\n                      rules={[{ required: true, message: \"Item type is required\" }]}\r\n                    >\r\n                      <Select\r\n                        placeholder=\"select item type\"\r\n                        onChange={(value) => setItemtype(value)}\r\n                      >\r\n                        <Option value=\"whiteboard\">Whiteboard</Option>\r\n                        <Option value=\"marker\">Marker</Option>\r\n                        <Option value=\"chalk\">Chalk</Option>\r\n                        <Option value=\"duster\">Duster</Option>\r\n                        <Option value=\"notice_board\">Notice Board</Option>\r\n                        <Option value=\"bookshelf\">Bookshelf</Option>\r\n                        <Option value=\"clock\">Clock</Option>\r\n                        <Option value=\"chair\">Chair</Option>\r\n                        <Option value=\"desk\">Desk</Option>\r\n                        <Option value=\"pen_holder\">Pen Holder</Option>\r\n                        <Option value=\"paper_stack\">Paper Stack</Option>\r\n                        <Option value=\"file_cabinet\">File Cabinet</Option>\r\n                        <Option value=\"cupboard\">Cupboard</Option>\r\n                        <Option value=\"curtains\">Curtains</Option>\r\n                        <Option value=\"trash_bin\">Trash Bin</Option>\r\n                        <Option value=\"water_bottle\">Water Bottle</Option>\r\n                        <Option value=\"notepad\">Notepad</Option>\r\n                        <Option value=\"globe\">Globe</Option>\r\n                        <Option value=\"poster\">Poster</Option>\r\n                        <Option value=\"calendar\">Calendar</Option>\r\n                        <Option value=\"plant\">Plant</Option>\r\n                        <Option value=\"student_chair\">Student Chair</Option>\r\n                        <Option value=\"bulletin_board\">Bulletin Board</Option>\r\n                        <Option value=\"stapler\">Stapler</Option>\r\n                        <Option value=\"scissors\">Scissors</Option>\r\n                        <Option value=\"paperweight\">Paperweight</Option>\r\n                        <Option value=\"nameplate\">Nameplate</Option>\r\n                        <Option value=\"map\">Map</Option>\r\n                        <Option value=\"lamp\">Lamp</Option>\r\n                        <Option value=\"cup\">Cup</Option>\r\n                        <Option value=\"rubber_band\">Rubber Band</Option>\r\n                        <Option value=\"folder\">Folder</Option>\r\n                        <Option value=\"sticky_notes\">Sticky Notes</Option>\r\n                        <Option value=\"paper_clips\">Paper Clips</Option>\r\n                        <Option value=\"first_aid_kit\">First Aid Kit</Option>\r\n                        <Option value=\"other\">Other</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  {itemtype === \"other\" && (\r\n                    <Col xs={24} md={24}>\r\n                      <Form.Item\r\n                        label=\"other item name\"\r\n                        name=\"otheritemtype\"\r\n                        rules={[\r\n                          { required: true, message: \"other item name required\" },\r\n                        ]}\r\n                      >\r\n                        <Input type=\"text\" placeholder=\"type item name\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  )}\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      label=\"Unique Id\"\r\n                      name=\"uid\"\r\n                      rules={[{ required: true, message: \" uid required\" }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"type unique id\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"installationdate\"\r\n                      label=\"Installation Date\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Installation date is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <DatePicker style={{ width: \"100%\" }} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"description\"\r\n                      label=\"Description\"\r\n                      rules={[{ required: true, message: \"Description is required\" }]}\r\n                    >\r\n                      <Input.TextArea\r\n                        placeholder=\"enter description\"\r\n                        rows={4}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{ width: \"100%\", marginLeft: \"0px\" }}\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Teacherdetaileditnon\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst Classpage_non = () => {\r\n    const roles = useSelector((State) => State.role.role);\r\n    const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [classlist, setClasslist] = useState([]);\r\n\r\n    useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n    \r\n  const handleform = async (values) => {\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/addclass\", values);\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n  const getallclass = async () => {\r\n    const res = await axios.get(\"/api/v1/tech/getallclass\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    if (res.data.success) {\r\n      setClasslist(res.data.data);\r\n      message.success(\"all classes get\");\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getallclass();\r\n  }, []);\r\n\r\n  const handledelete = async (id) => {\r\n    try {\r\n      // eslint-disable-next-line no-restricted-globals\r\n      var result = confirm(\"really want to delete\");\r\n      if (result) {\r\n        const res = await axios.post(\r\n          \"/api/v1/tech/deleteclass\",\r\n          { id },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        if (res.data.success) {\r\n          message.success(res.data.message);\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div className=\"\">\r\n          <Form layout=\"vertical\" onFinish={handleform} className=\"m-2\">\r\n            <h3 className=\"text-center\">Class Rooms</h3>\r\n            <Row gutter={20}>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Class name\"\r\n                  name=\"classname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type class name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Class number\"\r\n                  name=\"classno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type class number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Building name\"\r\n                  name=\"buildingname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type building name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Floor number\"\r\n                  name=\"floorno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type floor number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={4}>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"180px\", marginTop: \"25px\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n\r\n        {classlist &&\r\n          classlist.map((data) => {\r\n            return (\r\n              <div className=\"card m-2 cardstyle\">\r\n                <div\r\n                  style={{ cursor: \"pointer\" }}\r\n                  className=\"card-header\"\r\n                  onClick={() => {\r\n                    navigate(`/classdetailsnon/${data._id}`);\r\n                  }}\r\n                >\r\n                  Class Name:\r\n                  <b> {data.classname}</b>\r\n                </div>\r\n\r\n                <div className=\"card-body p-2\">\r\n                  <p>\r\n                    <b>Class No:</b>\r\n                    {data.classno}\r\n                  </p>\r\n                  <p>\r\n                    <b>Building Name:</b>\r\n                    {data.buildingname}\r\n                  </p>\r\n                  <p>\r\n                    <b>Floor No:</b>\r\n                    {data.floorno}\r\n                  </p>\r\n                  <p>\r\n                    <button\r\n                      onClick={() => {\r\n                        // eslint-disable-next-line no-restricted-globals\r\n                        let result = confirm(\"really want to edit\");\r\n                        if (result) {\r\n                          navigate(`/classeditnon/${data._id}`);\r\n                        }\r\n                      }}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        handledelete(data._id);\r\n                      }}\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Classpage_non;\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Row, Col, message } from \"antd\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst Classeditnon = () => {\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const [classdata, setClassdata] = useState(null);\r\n\r\n    useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n\r\n  const handleform = async (values) => {\r\n    values.classid = params.classid;\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/editclass\", values, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        navigate(\"/classn\");\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getclassdata = async () => {\r\n    const res = await axios.post(\r\n      \"/api/v1/tech/getclass\",\r\n      {\r\n        classid: params.classid,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      }\r\n    );\r\n    if (res.data.success) {\r\n      setClassdata(res.data.data);\r\n      console.log(classdata);\r\n      message.success(res.data.message);\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    getclassdata();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        {classdata && (\r\n          <div className=\"form-div\">\r\n            <Form\r\n              layout=\"vertical\"\r\n              onFinish={handleform}\r\n              className=\"m-2\"\r\n              initialValues={classdata}\r\n            >\r\n              <h3 className=\"text-center\">Edit Class</h3>\r\n              <Row gutter={20}>\r\n                <Col xs={24} md={24} lg={8}>\r\n                  <Form.Item\r\n                    label=\"Class name\"\r\n                    name=\"classname\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input placeholder=\"type class name\" />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} md={24} lg={8}>\r\n                  <Form.Item\r\n                    label=\"Class number\"\r\n                    name=\"classno\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input type=\"number\" placeholder=\"type class number\" />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} md={24} lg={8}>\r\n                  <Form.Item\r\n                    label=\"Building name\"\r\n                    name=\"buildingname\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input type=\"text\" placeholder=\"type building name\" />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} md={24} lg={8}>\r\n                  <Form.Item\r\n                    label=\"Floor number\"\r\n                    name=\"floorno\"\r\n                    rules={[{ required: true }]}\r\n                  >\r\n                    <Input type=\"number\" placeholder=\"type floor number\" />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col xs={24} md={24} lg={8}>\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    style={{ width: \"200px\", marginTop: \"20px\" }}\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        )}\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Classeditnon;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message, Select, DatePicker } from \"antd\";\r\n\r\nimport \"../../styles/Newtechpagestyles.css\";\r\n\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Classdetailsnon = () => {\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n      const [classdetails, setClassdetails] = useState([]);\r\n      const [itemtype, setItemtype] = useState();\r\n      const [formattedDates, setFormattedDates] = useState({});\r\n      const params = useParams();\r\n      const navigate = useNavigate();\r\n     const [classname,setClassname]=useState();\r\n    const [classes,setClasses]=useState([]);\r\n\r\n  useEffect(() => {\r\n    if (roles === \"admin\" || roles === \"editor\") {\r\n      localStorage.setItem(\"role\", roles);\r\n    }\r\n  }, [roles]);\r\n\r\n  useEffect(() => {\r\n    const savedRole = localStorage.getItem(\"role\");\r\n    if (savedRole && savedRole !== roles) {\r\n      dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n    }\r\n  }, [dispatch]);\r\n\r\n    const getallclasses = async () => {\r\n        try {\r\n          const res = await axios.get(\"/api/v1/tech/getallclass\", {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          });\r\n          if (res.data.success) {\r\n            message.success(res.data.message);\r\n            setClasses(res.data.data);\r\n          } else {\r\n            message.error(res.data.messgae);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n    \r\n      useEffect(()=>{\r\n        const lab=classes.find((data)=>data._id===params.classid);\r\n         if(lab){\r\n          setClassname(lab.classname);\r\n         }\r\n          },[classes,params.classid]);\r\n    \r\n       useEffect(() => {\r\n          getallclasses();\r\n        }, []);\r\n\r\n        const handlefinish = async (values) => {\r\n            // console.log(\"Received values:\", values);\r\n            values.classid = params.classid;\r\n            if (values.itemtype === \"other\" && values.otheritemtype) {\r\n              values.itemtype = values.otheritemtype;\r\n              delete values.otheritemtype;\r\n            }\r\n            try {\r\n              const res = await axios.post(\r\n                \"/api/v1/tech/addclassdetailnon\",\r\n                values\r\n              );\r\n              if (res.data.success) {\r\n                message.success(res.data.message);\r\n              } else {\r\n                message.error(res.data.message);\r\n              }\r\n              window.location.reload();\r\n            } catch (error) {\r\n              console.log(error);\r\n              message.error(\"something went wrong\");\r\n            }\r\n          };\r\n        \r\n          const getdetails = async () => {\r\n            try {\r\n              const res = await axios.post(\r\n                \"/api/v1/tech/getdetailofclassnon\",\r\n                {\r\n                  classid: params.classid,\r\n                },\r\n                {\r\n                  headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                  },\r\n                }\r\n              );\r\n              if (res.data.success) {\r\n                message.success(res.data.message);\r\n                setClassdetails(res.data.data);\r\n              } else {\r\n                message.error(res.data.message);\r\n              }\r\n            } catch (error) {\r\n              console.log(error);\r\n              message.error(\"something went wrong\");\r\n            }\r\n          };\r\n        \r\n         useEffect(() => {\r\n            getdetails();\r\n          }, []);\r\n        \r\n        \r\n          const handledelete = async (id) => {\r\n            try {\r\n              const res = await axios.post(\r\n                \"/api/v1/tech/deleteclassdetailnon\",\r\n                {\r\n                  id,\r\n                },\r\n                {\r\n                  headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                  },\r\n                }\r\n              );\r\n              if (res.data.success) {\r\n                message.success(res.data.message);\r\n                window.location.reload();\r\n              } else {\r\n                message.error(res.data.message);\r\n              }\r\n            } catch (error) {\r\n              console.log(error);\r\n              message.error(\"something went wrong\");\r\n            }\r\n          };\r\n\r\n  return (\r\n    <Layout>\r\n      \r\n      <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'34px',fontFamily:'bold'}}><p>{classname}</p></div>\r\n<div\r\n        className=\"form-divnew\"\r\n        style={{\r\n          border: \"1px solid black\",\r\n          width: \"100%\",\r\n          margin: \"10px\",\r\n          float: \"left\",\r\n        }}\r\n      >\r\n        <Form layout=\"vertical\" onFinish={handlefinish} className=\"m-2\">\r\n          <h3 className=\"text-center\">ADD ITEM</h3>\r\n          <Row gutter={20}>\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                name=\"itemtype\"\r\n                label=\"Item Type\"\r\n                rules={[{ required: true, message: \"Item type is required\" }]}\r\n              >\r\n                <Select\r\n                  placeholder=\"select item type\"\r\n                  onChange={(value) => setItemtype(value)}\r\n                >\r\n                  <Option value=\"whiteboard\">Whiteboard</Option>\r\n                  <Option value=\"marker\">Marker</Option>\r\n                  <Option value=\"chalk\">Chalk</Option>\r\n                  <Option value=\"duster\">Duster</Option>\r\n                  <Option value=\"notice_board\">Notice Board</Option>\r\n                  <Option value=\"bookshelf\">Bookshelf</Option>\r\n                  <Option value=\"clock\">Clock</Option>\r\n                  <Option value=\"chair\">Chair</Option>\r\n                  <Option value=\"desk\">Desk</Option>\r\n                  <Option value=\"pen_holder\">Pen Holder</Option>\r\n                  <Option value=\"paper_stack\">Paper Stack</Option>\r\n                  <Option value=\"file_cabinet\">File Cabinet</Option>\r\n                  <Option value=\"cupboard\">Cupboard</Option>\r\n                  <Option value=\"curtains\">Curtains</Option>\r\n                  <Option value=\"trash_bin\">Trash Bin</Option>\r\n                  <Option value=\"water_bottle\">Water Bottle</Option>\r\n                  <Option value=\"notepad\">Notepad</Option>\r\n                  <Option value=\"globe\">Globe</Option>\r\n                  <Option value=\"poster\">Poster</Option>\r\n                  <Option value=\"calendar\">Calendar</Option>\r\n                  <Option value=\"plant\">Plant</Option>\r\n                  <Option value=\"student_chair\">Student Chair</Option>\r\n                  <Option value=\"bulletin_board\">Bulletin Board</Option>\r\n                  <Option value=\"stapler\">Stapler</Option>\r\n                  <Option value=\"scissors\">Scissors</Option>\r\n                  <Option value=\"paperweight\">Paperweight</Option>\r\n                  <Option value=\"nameplate\">Nameplate</Option>\r\n                  <Option value=\"map\">Map</Option>\r\n                  <Option value=\"lamp\">Lamp</Option>\r\n                  <Option value=\"cup\">Cup</Option>\r\n                  <Option value=\"rubber_band\">Rubber Band</Option>\r\n                  <Option value=\"folder\">Folder</Option>\r\n                  <Option value=\"sticky_notes\">Sticky Notes</Option>\r\n                  <Option value=\"paper_clips\">Paper Clips</Option>\r\n                  <Option value=\"first_aid_kit\">First Aid Kit</Option>\r\n                  <Option value=\"other\">Other</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            {itemtype === \"other\" && (\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"other item name\"\r\n                  name=\"otheritemtype\"\r\n                  rules={[\r\n                    { required: true, message: \"other item name required\" },\r\n                  ]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type item name\" />\r\n                </Form.Item>\r\n              </Col>\r\n            )}\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                label=\"Unique Id\"\r\n                name=\"uid\"\r\n                rules={[{ required: true, message: \" uid required\" }]}\r\n              >\r\n                <Input type=\"text\" placeholder=\"type unique id\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                name=\"installationdate\"\r\n                label=\"Installation Date\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Installation date is required\",\r\n                  },\r\n                ]}\r\n              >\r\n                <DatePicker style={{ width: \"100%\" }} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                rules={[{ required: true, message: \"Description is required\" }]}\r\n              >\r\n                <Input.TextArea\r\n                  placeholder=\"enter description\"\r\n                  rows={1}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={4}>\r\n              <Form.Item>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"60%\", marginLeft: \"4px\",marginTop:\"22px\"}}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n\r\n      <table\r\n          className=\"table\"\r\n          style={{\r\n            width: \"100%\",\r\n            borderCollapse: \"collapse\",\r\n            marginTop: \"10px\",\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Item Type\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n               Unique Id\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Installation Date\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Description\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Actions\r\n              </th>\r\n              </tr>\r\n</thead>\r\n<tbody>\r\n{classdetails &&\r\n              classdetails.map((data) => (\r\n                <tr key={data._id}>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <b>{data.itemtype}</b>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <b>{data.uid}</b>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    {new Date(data.installationdate).toLocaleDateString()}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n\r\n                      width: \"350px\",\r\n                    }}\r\n                  >\r\n                    <div style={{ maxHeight: \"150px\", overflowY: \"auto\" }}>\r\n                      {data.description || \"N/A\"}\r\n                    </div>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <i\r\n                      className=\"fa-solid fa-trash icon\"\r\n                      style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Do you want to delete?\")) {\r\n                          handledelete(data._id);\r\n                        }\r\n                      }}\r\n                    ></i>\r\n                    <i\r\n                      className=\"fa-solid fa-pen-to-square edit\"\r\n                      style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Do you want to edit?\")) {\r\n                          navigate(`/classdetaileditnon/${data._id}`);\r\n                        }\r\n                      }}\r\n                    ></i>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n</tbody>\r\n              </table>\r\n\r\n\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Classdetailsnon\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {useNavigate,useParams} from \"react-router-dom\";\r\nimport axios from'axios';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  message,\r\n  Select,\r\n  DatePicker,\r\n   \r\n} from \"antd\";\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\nconst {Option} =Select;\r\n\r\n\r\nconst  Classdetaileditnon = () => {\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n\r\n  const [form]=Form.useForm();\r\n    const [itemtype, setItemtype] = useState(null);\r\n    const [classdetailinfo, setClassdetailinfo] = useState(null);\r\n    const params=useParams();\r\n\r\n      useEffect(() => {\r\n        if (roles === \"admin\" || roles === \"editor\") {\r\n          localStorage.setItem(\"role\", roles);\r\n        }\r\n      }, [roles]);\r\n    \r\n      useEffect(() => {\r\n        const savedRole = localStorage.getItem(\"role\");\r\n        if (savedRole && savedRole !== roles) {\r\n          dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n        }\r\n      }, [dispatch]);\r\n\r\n    const handlefinish=async(values)=>{\r\n        if (values.itemtype === \"other\" && values.otheritemtype) {\r\n            values.itemtype = values.otheritemtype;\r\n            delete values.otheritemtype;\r\n          }\r\n          values.classdetailid = params.classdetailid;\r\n      \r\n          try {\r\n            const res = await axios.post(\r\n              \"/api/v1/tech/updateclassdetailnon\",\r\n              values,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n              }\r\n            );\r\n            if (res.data.success) {\r\n              message.success(res.data.message);\r\n              window.history.back();\r\n            } else {\r\n              message.error(res.data.message);\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n            message.error(\"spmething went wrong\");\r\n          }\r\n    };\r\n\r\n    const getclassdetails=async()=>{\r\n        const res = await axios.post(\r\n            \"/api/v1/tech/getclassdetaildatanon\",\r\n            {\r\n              classdetailid: params.classdetailid,\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n              },\r\n            }\r\n          );\r\n          if (res.data.success) {\r\n            setClassdetailinfo(res.data.data);\r\n            //   Form.setFieldsValue(res.data.data);\r\n            //console.log(labdata);\r\n            const {installationdate,...otherdata}=res.data.data;\r\n            form.setFieldsValue({\r\n                ...otherdata,\r\n                installationdate:installationdate?moment(installationdate):null\r\n            });\r\n            message.success(res.data.message);\r\n          } else {\r\n            message.error(res.data.message);\r\n          }\r\n    };\r\n\r\n     useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        getclassdetails();\r\n      }, []);\r\n  return (\r\n    <Layout>\r\n       <div\r\n              className=\"form-divnew\"\r\n              style={{\r\n                border: \"1px solid black\",\r\n                width: \"40%\",\r\n                margin: \"10px\",\r\n                float: \"left\",\r\n              }}\r\n            >\r\n              <Form layout=\"vertical\" onFinish={handlefinish} className=\"m-2\" form={form}>\r\n                <h3 className=\"text-center\">Edit Detail</h3>\r\n                <Row gutter={20}>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"itemtype\"\r\n                      label=\"Item Type\"\r\n                      rules={[{ required: true, message: \"Item type is required\" }]}\r\n                    >\r\n                      <Select\r\n                        placeholder=\"select item type\"\r\n                        onChange={(value) => setItemtype(value)}\r\n                      >\r\n                        <Option value=\"whiteboard\">Whiteboard</Option>\r\n                        <Option value=\"marker\">Marker</Option>\r\n                        <Option value=\"chalk\">Chalk</Option>\r\n                        <Option value=\"duster\">Duster</Option>\r\n                        <Option value=\"notice_board\">Notice Board</Option>\r\n                        <Option value=\"bookshelf\">Bookshelf</Option>\r\n                        <Option value=\"clock\">Clock</Option>\r\n                        <Option value=\"chair\">Chair</Option>\r\n                        <Option value=\"desk\">Desk</Option>\r\n                        <Option value=\"pen_holder\">Pen Holder</Option>\r\n                        <Option value=\"paper_stack\">Paper Stack</Option>\r\n                        <Option value=\"file_cabinet\">File Cabinet</Option>\r\n                        <Option value=\"cupboard\">Cupboard</Option>\r\n                        <Option value=\"curtains\">Curtains</Option>\r\n                        <Option value=\"trash_bin\">Trash Bin</Option>\r\n                        <Option value=\"water_bottle\">Water Bottle</Option>\r\n                        <Option value=\"notepad\">Notepad</Option>\r\n                        <Option value=\"globe\">Globe</Option>\r\n                        <Option value=\"poster\">Poster</Option>\r\n                        <Option value=\"calendar\">Calendar</Option>\r\n                        <Option value=\"plant\">Plant</Option>\r\n                        <Option value=\"student_chair\">Student Chair</Option>\r\n                        <Option value=\"bulletin_board\">Bulletin Board</Option>\r\n                        <Option value=\"stapler\">Stapler</Option>\r\n                        <Option value=\"scissors\">Scissors</Option>\r\n                        <Option value=\"paperweight\">Paperweight</Option>\r\n                        <Option value=\"nameplate\">Nameplate</Option>\r\n                        <Option value=\"map\">Map</Option>\r\n                        <Option value=\"lamp\">Lamp</Option>\r\n                        <Option value=\"cup\">Cup</Option>\r\n                        <Option value=\"rubber_band\">Rubber Band</Option>\r\n                        <Option value=\"folder\">Folder</Option>\r\n                        <Option value=\"sticky_notes\">Sticky Notes</Option>\r\n                        <Option value=\"paper_clips\">Paper Clips</Option>\r\n                        <Option value=\"first_aid_kit\">First Aid Kit</Option>\r\n                        <Option value=\"other\">Other</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  {itemtype === \"other\" && (\r\n                    <Col xs={24} md={24}>\r\n                      <Form.Item\r\n                        label=\"other item name\"\r\n                        name=\"otheritemtype\"\r\n                        rules={[\r\n                          { required: true, message: \"other item name required\" },\r\n                        ]}\r\n                      >\r\n                        <Input type=\"text\" placeholder=\"type item name\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  )}\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      label=\"Unique Id\"\r\n                      name=\"uid\"\r\n                      rules={[{ required: true, message: \" uid required\" }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"type unique id\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"installationdate\"\r\n                      label=\"Installation Date\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Installation date is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <DatePicker style={{ width: \"100%\" }} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"description\"\r\n                      label=\"Description\"\r\n                      rules={[{ required: true, message: \"Description is required\" }]}\r\n                    >\r\n                      <Input.TextArea\r\n                        placeholder=\"enter description\"\r\n                        rows={4}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{ width: \"100%\", marginLeft: \"0px\" }}\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Classdetaileditnon\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst Labpage_non= () => {\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  const [labslist, setLabslist] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (roles === \"admin\" || roles === \"editor\") {\r\n      localStorage.setItem(\"role\", roles);\r\n    }\r\n  }, [roles]);\r\n\r\n  useEffect(() => {\r\n    const savedRole = localStorage.getItem(\"role\");\r\n    if (savedRole && savedRole !== roles) {\r\n      dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const handleform = async (values) => {\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/lab/addlab\", values);\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n        // window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getalllabs = async () => {\r\n    const res = await axios.get(\"/api/v1/tech/lab/getalllabs\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    if (res.data.success) {\r\n      setLabslist(res.data.data);\r\n      message.success(\"all labs get\");\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getalllabs();\r\n  }, []);\r\n\r\n  const handledelete = async (id) => {\r\n    try {\r\n      // eslint-disable-next-line no-restricted-globals\r\n      var result = confirm(\"really want to delete\");\r\n      if (result) {\r\n        const res = await axios.post(\r\n          \"/api/v1/tech//lab/deletelab\",\r\n          { id },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        if (res.data.success) {\r\n          message.success(res.data.message);\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n      <h3 className=\"text-center b\">LABS</h3>\r\n        <div className=\"\">\r\n          <Form layout=\"vertical\" onFinish={handleform} className=\"m-2\">\r\n            <h6 className=\"text-left\">Add  New Lab</h6>\r\n            <Row gutter={20}>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Lab name\"\r\n                  name=\"labname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type lab name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Lab number\"\r\n                  name=\"labno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type lab number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Building name\"\r\n                  name=\"buildingname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type building name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Floor number\"\r\n                  name=\"floorno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type floor number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={4}>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"180px\", marginTop: \"25px\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n  \r\n\r\n      {labslist &&\r\n        labslist.map((data) => {\r\n          return (\r\n            <div className=\"card m-2 cardstyle\">\r\n              <div\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"card-header\"\r\n                onClick={() => {\r\n                  navigate(`/labdetailsnon/${data._id}`);\r\n                }}\r\n              >\r\n                Lab Name:\r\n                <b> {data.labname}</b>\r\n              </div>\r\n\r\n              <div className=\"card-body p-2\">\r\n                <p>\r\n                  <b>Lab No: </b>\r\n                  {data.labno}\r\n                </p>\r\n                <p>\r\n                  <b>Building Name: </b>\r\n                  {data.buildingname}\r\n                </p>\r\n                <p>\r\n                  <b>Floor No: </b>\r\n                  {data.floorno}\r\n                </p>\r\n                <p>\r\n                  <button\r\n                    onClick={() => {\r\n                      // eslint-disable-next-line no-restricted-globals\r\n                      let result = confirm(\"really want to edit\");\r\n                      if (result) {\r\n                        navigate(`/labeditnon/${data._id}`);\r\n                      }\r\n                    }}\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      handledelete(data._id);\r\n                    }}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n            </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Labpage_non;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport { useParams,useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n \r\n const Labeditnon = () => {\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [labinfo, setLabinfo] = useState(null);\r\n\r\n    useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n    \r\n    const getlabdata = async () => {\r\n        const res = await axios.post(\r\n          \"/api/v1/tech/lab/getlabdata\",\r\n          {\r\n             labid: params.labid,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        if (res.data.success) {\r\n          setLabinfo(res.data.data);\r\n          //   Form.setFieldsValue(res.data.data);\r\n          //console.log(labdata);\r\n          message.success(res.data.message);\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n      };\r\n    \r\n      useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        getlabdata();\r\n      }, []);\r\n\r\n      const handleform = async (values) => {\r\n        values.labid = params.labid;\r\n        try {\r\n          const res = await axios.post(\"/api/v1/tech/lab/editlab\", values, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          });\r\n    \r\n          if (res.data.success) {\r\n            message.success(res.data.message);\r\n            navigate(\"/labn\");\r\n          } else {\r\n            message.error(res.data.message);\r\n          }\r\n          window.location.reload();\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n\r\n   return (\r\n     <>\r\n     <Layout>\r\n        {labinfo &&\r\n        <div className=\"form-div\">\r\n                  <Form layout=\"vertical\" onFinish={handleform} className=\"m-2\" initialValues={labinfo}>\r\n                    <h3 className=\"text-center\">Edit  lab</h3>\r\n                    <Row gutter={20}>\r\n                      <Col xs={24} md={24} lg={5}>\r\n                        <Form.Item\r\n                          label=\"Lab name\"\r\n                          name=\"labname\"\r\n                          rules={[{ required: true }]}\r\n                        >\r\n                          <Input type=\"text\" placeholder=\"type teacher's name\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} md={24} lg={5}>\r\n                        <Form.Item\r\n                          label=\"Lab number\"\r\n                          name=\"labno\"\r\n                          rules={[{ required: true }]}\r\n                        >\r\n                          <Input type=\"number\" placeholder=\"type room number\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} md={24} lg={5}>\r\n                        <Form.Item\r\n                          label=\"Building name\"\r\n                          name=\"buildingname\"\r\n                          rules={[{ required: true }]}\r\n                        >\r\n                          <Input type=\"text\" placeholder=\"type building name\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} md={24} lg={5}>\r\n                        <Form.Item\r\n                          label=\"Floor number\"\r\n                          name=\"floorno\"\r\n                          rules={[{ required: true }]}\r\n                        >\r\n                          <Input type=\"number\" placeholder=\"type floor number\" />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} md={24} lg={4}>\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          style={{ width: \"180px\", marginTop: \"25px\" }}\r\n                          type=\"submit\"\r\n                        >\r\n                          Submit\r\n                        </button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </div>\r\n }\r\n     </Layout>\r\n       \r\n     </>\r\n   )\r\n }\r\n \r\n export default Labeditnon\r\n ","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message, Select, DatePicker } from \"antd\";\r\n\r\nimport \"../../styles/Newtechpagestyles.css\";\r\n\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst  Labdetailsnon = () => {\r\n    const roles = useSelector((State) => State.role.role);\r\n    const dispatch = useDispatch();\r\n  const [labdetails, setLabdetails] = useState([]);\r\n  const [itemtype, setItemtype] = useState();\r\n  //const [formattedDates, setFormattedDates] = useState({});\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n const [labname,setLabname]=useState();\r\n   const [lab,setLab]=useState([]);\r\n\r\n  useEffect(() => {\r\n    if (roles === \"admin\" || roles === \"editor\") {\r\n      localStorage.setItem(\"role\", roles);\r\n    }\r\n  }, [roles]);\r\n\r\n  useEffect(() => {\r\n    const savedRole = localStorage.getItem(\"role\");\r\n    if (savedRole && savedRole !== roles) {\r\n      dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n    }\r\n  }, [dispatch]);\r\n\r\n   const getallteachers = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tech/lab/getalllabs \", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setLab(res.data.data);\r\n      } else {\r\n        message.error(res.data.messgae);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    const labs=lab.find((data)=>data._id===params.labid);\r\n     if(labs){\r\n      setLabname(labs.labname);\r\n     }\r\n      },[lab,params.labid]);\r\n\r\n   useEffect(() => {\r\n      getallteachers();\r\n    }, []);\r\n\r\n  const handlefinish = async (values) => {\r\n    // console.log(\"Received values:\", values);\r\n    values.labid = params.labid;\r\n    if (values.itemtype === \"other\" && values.otheritemtype) {\r\n      values.itemtype = values.otheritemtype;\r\n      delete values.otheritemtype;\r\n    }\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/lab/addlabdetailnon\",\r\n        values\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getdetails = async () => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/lab/getdetailoflabnon\",\r\n        {\r\n          labid: params.labid,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setLabdetails(res.data.data);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n useEffect(() => {\r\n    getdetails();\r\n  }, []);\r\n\r\n\r\n  const handledelete = async (id) => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/lab/deletelabdetailnon\",\r\n        {\r\n          id,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'34px',fontFamily:'bold'}}><p>{labname}</p></div>\r\n      <div\r\n        className=\"form-divnew\"\r\n        style={{\r\n          border: \"1px solid black\",\r\n          width: \"100%\",\r\n          margin: \"10px\",\r\n          float: \"left\",\r\n        }}\r\n      >\r\n        <Form layout=\"vertical\" onFinish={handlefinish} className=\"m-2\">\r\n          <h3 className=\"text-center\">ADD ITEM</h3>\r\n          <Row gutter={20}>\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                name=\"itemtype\"\r\n                label=\"Item Type\"\r\n                rules={[{ required: true, message: \"Item type is required\" }]}\r\n              >\r\n                <Select\r\n                  placeholder=\"select item type\"\r\n                  onChange={(value) => setItemtype(value)}\r\n                >\r\n                  <Option value=\"whiteboard\">Whiteboard</Option>\r\n                  <Option value=\"marker\">Marker</Option>\r\n                  <Option value=\"chalk\">Chalk</Option>\r\n                  <Option value=\"duster\">Duster</Option>\r\n                  <Option value=\"notice_board\">Notice Board</Option>\r\n                  <Option value=\"bookshelf\">Bookshelf</Option>\r\n                  <Option value=\"clock\">Clock</Option>\r\n                  <Option value=\"chair\">Chair</Option>\r\n                  <Option value=\"desk\">Desk</Option>\r\n                  <Option value=\"pen_holder\">Pen Holder</Option>\r\n                  <Option value=\"paper_stack\">Paper Stack</Option>\r\n                  <Option value=\"file_cabinet\">File Cabinet</Option>\r\n                  <Option value=\"cupboard\">Cupboard</Option>\r\n                  <Option value=\"curtains\">Curtains</Option>\r\n                  <Option value=\"trash_bin\">Trash Bin</Option>\r\n                  <Option value=\"water_bottle\">Water Bottle</Option>\r\n                  <Option value=\"notepad\">Notepad</Option>\r\n                  <Option value=\"globe\">Globe</Option>\r\n                  <Option value=\"poster\">Poster</Option>\r\n                  <Option value=\"calendar\">Calendar</Option>\r\n                  <Option value=\"plant\">Plant</Option>\r\n                  <Option value=\"student_chair\">Student Chair</Option>\r\n                  <Option value=\"bulletin_board\">Bulletin Board</Option>\r\n                  <Option value=\"stapler\">Stapler</Option>\r\n                  <Option value=\"scissors\">Scissors</Option>\r\n                  <Option value=\"paperweight\">Paperweight</Option>\r\n                  <Option value=\"nameplate\">Nameplate</Option>\r\n                  <Option value=\"map\">Map</Option>\r\n                  <Option value=\"lamp\">Lamp</Option>\r\n                  <Option value=\"cup\">Cup</Option>\r\n                  <Option value=\"rubber_band\">Rubber Band</Option>\r\n                  <Option value=\"folder\">Folder</Option>\r\n                  <Option value=\"sticky_notes\">Sticky Notes</Option>\r\n                  <Option value=\"paper_clips\">Paper Clips</Option>\r\n                  <Option value=\"first_aid_kit\">First Aid Kit</Option>\r\n                  <Option value=\"other\">Other</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            {itemtype === \"other\" && (\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"other item name\"\r\n                  name=\"otheritemtype\"\r\n                  rules={[\r\n                    { required: true, message: \"other item name required\" },\r\n                  ]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type item name\" />\r\n                </Form.Item>\r\n              </Col>\r\n            )}\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                label=\"Unique Id\"\r\n                name=\"uid\"\r\n                rules={[{ required: true, message: \" uid required\" }]}\r\n              >\r\n                <Input type=\"text\" placeholder=\"type unique id\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                name=\"installationdate\"\r\n                label=\"Installation Date\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Installation date is required\",\r\n                  },\r\n                ]}\r\n              >\r\n                <DatePicker style={{ width: \"100%\" }} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                rules={[{ required: true, message: \"Description is required\" }]}\r\n              >\r\n                <Input.TextArea\r\n                  placeholder=\"enter description\"\r\n                  rows={1}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={4}>\r\n              <Form.Item>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"60%\", marginLeft: \"4px\",marginTop:\"22px\"}}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n\r\n      <table\r\n          className=\"table\"\r\n          style={{\r\n            width: \"100%\",\r\n            borderCollapse: \"collapse\",\r\n            marginTop: \"10px\",\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Item Type\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n               Unique Id\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Installation Date\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Description\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Actions\r\n              </th>\r\n              </tr>\r\n</thead>\r\n<tbody>\r\n{labdetails &&\r\n              labdetails.map((data) => (\r\n                <tr key={data._id}>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <b>{data.itemtype}</b>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <b>{data.uid}</b>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    {new Date(data.installationdate).toLocaleDateString()}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n\r\n                      width: \"350px\",\r\n                    }}\r\n                  >\r\n                    <div style={{ maxHeight: \"150px\", overflowY: \"auto\" }}>\r\n                      {data.description || \"N/A\"}\r\n                    </div>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <i\r\n                      className=\"fa-solid fa-trash icon\"\r\n                      style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Do you want to delete?\")) {\r\n                          handledelete(data._id);\r\n                        }\r\n                      }}\r\n                    ></i>\r\n                    <i\r\n                      className=\"fa-solid fa-pen-to-square edit\"\r\n                      style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Do you want to edit?\")) {\r\n                          navigate(`/labdetaileditnon/${data._id}`);\r\n                        }\r\n                      }}\r\n                    ></i>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n</tbody>\r\n              </table>\r\n\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Labdetailsnon;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {useNavigate,useParams} from \"react-router-dom\";\r\nimport axios from'axios';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  message,\r\n  Select,\r\n  DatePicker,\r\n   \r\n} from \"antd\";\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\nconst {Option} =Select;\r\n\r\n\r\nconst  Labdetaileditnon = () => {\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n\r\n  const [form]=Form.useForm();\r\n    const [itemtype, setItemtype] = useState(null);\r\n    const [labdetailinfo, setLabdetailinfo] = useState(null);\r\n    const params=useParams();\r\n      useEffect(() => {\r\n        if (roles === \"admin\" || roles === \"editor\") {\r\n          localStorage.setItem(\"role\", roles);\r\n        }\r\n      }, [roles]);\r\n    \r\n      useEffect(() => {\r\n        const savedRole = localStorage.getItem(\"role\");\r\n        if (savedRole && savedRole !== roles) {\r\n          dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n        }\r\n      }, [dispatch]);\r\n\r\n    const handlefinish=async(values)=>{\r\n        if (values.itemtype === \"other\" && values.otheritemtype) {\r\n            values.itemtype = values.otheritemtype;\r\n            delete values.otheritemtype;\r\n          }\r\n          values.labdetailid = params.labdetailid;\r\n      \r\n          try {\r\n            const res = await axios.post(\r\n              \"/api/v1/tech/lab/updatelabdetailnon\",\r\n              values,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n              }\r\n            );\r\n            if (res.data.success) {\r\n              message.success(res.data.message);\r\n              window.history.back();\r\n            } else {\r\n              message.error(res.data.message);\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n            message.error(\"spmething went wrong\");\r\n          }\r\n    };\r\n\r\n    const getlabdetails=async()=>{\r\n        const res = await axios.post(\r\n            \"/api/v1/tech/lab/getlabdetaildatanon\",\r\n            {\r\n            labdetailid: params.labdetailid,\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n              },\r\n            }\r\n          );\r\n          if (res.data.success) {\r\n            setLabdetailinfo(res.data.data);\r\n            //   Form.setFieldsValue(res.data.data);\r\n            //console.log(labdata);\r\n            const {installationdate,...otherdata}=res.data.data;\r\n            form.setFieldsValue({\r\n                ...otherdata,\r\n                installationdate:installationdate?moment(installationdate):null\r\n            });\r\n            message.success(res.data.message);\r\n          } else {\r\n            message.error(res.data.message);\r\n          }\r\n    };\r\n\r\n     useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        getlabdetails();\r\n      }, []);\r\n  return (\r\n    <Layout>\r\n       <div\r\n              className=\"form-divnew\"\r\n              style={{\r\n                border: \"1px solid black\",\r\n                width: \"40%\",\r\n                margin: \"10px\",\r\n                float: \"left\",\r\n              }}\r\n            >\r\n              <Form layout=\"vertical\" onFinish={handlefinish} className=\"m-2\" form={form}>\r\n                <h3 className=\"text-center\">Edit Detail</h3>\r\n                <Row gutter={20}>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"itemtype\"\r\n                      label=\"Item Type\"\r\n                      rules={[{ required: true, message: \"Item type is required\" }]}\r\n                    >\r\n                      <Select\r\n                        placeholder=\"select item type\"\r\n                        onChange={(value) => setItemtype(value)}\r\n                      >\r\n                        <Option value=\"whiteboard\">Whiteboard</Option>\r\n                        <Option value=\"marker\">Marker</Option>\r\n                        <Option value=\"chalk\">Chalk</Option>\r\n                        <Option value=\"duster\">Duster</Option>\r\n                        <Option value=\"notice_board\">Notice Board</Option>\r\n                        <Option value=\"bookshelf\">Bookshelf</Option>\r\n                        <Option value=\"clock\">Clock</Option>\r\n                        <Option value=\"chair\">Chair</Option>\r\n                        <Option value=\"desk\">Desk</Option>\r\n                        <Option value=\"pen_holder\">Pen Holder</Option>\r\n                        <Option value=\"paper_stack\">Paper Stack</Option>\r\n                        <Option value=\"file_cabinet\">File Cabinet</Option>\r\n                        <Option value=\"cupboard\">Cupboard</Option>\r\n                        <Option value=\"curtains\">Curtains</Option>\r\n                        <Option value=\"trash_bin\">Trash Bin</Option>\r\n                        <Option value=\"water_bottle\">Water Bottle</Option>\r\n                        <Option value=\"notepad\">Notepad</Option>\r\n                        <Option value=\"globe\">Globe</Option>\r\n                        <Option value=\"poster\">Poster</Option>\r\n                        <Option value=\"calendar\">Calendar</Option>\r\n                        <Option value=\"plant\">Plant</Option>\r\n                        <Option value=\"student_chair\">Student Chair</Option>\r\n                        <Option value=\"bulletin_board\">Bulletin Board</Option>\r\n                        <Option value=\"stapler\">Stapler</Option>\r\n                        <Option value=\"scissors\">Scissors</Option>\r\n                        <Option value=\"paperweight\">Paperweight</Option>\r\n                        <Option value=\"nameplate\">Nameplate</Option>\r\n                        <Option value=\"map\">Map</Option>\r\n                        <Option value=\"lamp\">Lamp</Option>\r\n                        <Option value=\"cup\">Cup</Option>\r\n                        <Option value=\"rubber_band\">Rubber Band</Option>\r\n                        <Option value=\"folder\">Folder</Option>\r\n                        <Option value=\"sticky_notes\">Sticky Notes</Option>\r\n                        <Option value=\"paper_clips\">Paper Clips</Option>\r\n                        <Option value=\"first_aid_kit\">First Aid Kit</Option>\r\n                        <Option value=\"other\">Other</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  {itemtype === \"other\" && (\r\n                    <Col xs={24} md={24}>\r\n                      <Form.Item\r\n                        label=\"other item name\"\r\n                        name=\"otheritemtype\"\r\n                        rules={[\r\n                          { required: true, message: \"other item name required\" },\r\n                        ]}\r\n                      >\r\n                        <Input type=\"text\" placeholder=\"type item name\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  )}\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      label=\"Unique Id\"\r\n                      name=\"uid\"\r\n                      rules={[{ required: true, message: \" uid required\" }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"type unique id\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"installationdate\"\r\n                      label=\"Installation Date\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Installation date is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <DatePicker style={{ width: \"100%\" }} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"description\"\r\n                      label=\"Description\"\r\n                      rules={[{ required: true, message: \"Description is required\" }]}\r\n                    >\r\n                      <Input.TextArea\r\n                        placeholder=\"enter description\"\r\n                        rows={4}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{ width: \"100%\", marginLeft: \"0px\" }}\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Labdetaileditnon\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message, DatePicker, Select } from \"antd\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Serverpage_non = () => {\r\n    const roles = useSelector((State) => State.role.role);\r\n    const dispatch = useDispatch();\r\n  const [itemtype, setItemtype] = useState(null);\r\n const [serverlist, setServerlist] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (roles === \"admin\" || roles === \"editor\") {\r\n      localStorage.setItem(\"role\", roles);\r\n    }\r\n  }, [roles]);\r\n\r\n  useEffect(() => {\r\n    const savedRole = localStorage.getItem(\"role\");\r\n    if (savedRole && savedRole !== roles) {\r\n      dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const handleform = async (values) => {\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/server/addserver\", values);\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n        // window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getallserver = async () => {\r\n    const res = await axios.get(\"/api/v1/tech/server/getallserver\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    if (res.data.success) {\r\n      setServerlist(res.data.data);\r\n      message.success(\"all server get\");\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getallserver();\r\n  }, []);\r\n   \r\n  const handledelete = async (id) => {\r\n    try {\r\n      // eslint-disable-next-line no-restricted-globals\r\n      var result = confirm(\"really want to delete\");\r\n      if (result) {\r\n        const res = await axios.post(\r\n          \"/api/v1/tech/server/deleteserver\",\r\n          { id },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        );\r\n        if (res.data.success) {\r\n          message.success(res.data.message);\r\n        } else {\r\n          message.error(res.data.message);\r\n        }\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <div\r\n          className=\"m-2\"\r\n         \r\n        >\r\n          <Form layout=\"vertical\" onFinish={handleform} className=\"m-2\">\r\n            <h3 className=\"text-center\">Add Server</h3>\r\n            <Row gutter={20}>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Server Room name\"\r\n                  name=\"roomname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type lab name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Room number\"\r\n                  name=\"roomno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type lab number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Building name\"\r\n                  name=\"buildingname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type building name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"Floor number\"\r\n                  name=\"floorno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type floor number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24} lg={4}>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"180px\", marginTop: \"25px\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n\r\n        {serverlist &&\r\n        serverlist.map((data) => {\r\n          return (\r\n            <div className=\"card m-2 cardstyle\">\r\n              <div\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"card-header\"\r\n                onClick={() => {\r\n                  navigate(`/serverdetailsnon/${data._id}`);\r\n                }}\r\n              >\r\n                Server Room Name:\r\n                <b> {data.roomname}</b>\r\n              </div>\r\n\r\n              <div className=\"card-body p-2\">\r\n                <p>\r\n                  <b>Room No: </b>\r\n                  {data.roomno}\r\n                </p>\r\n                <p>\r\n                  <b>Building Name: </b>\r\n                  {data.buildingname}\r\n                </p>\r\n                <p>\r\n                  <b>Floor No: </b>\r\n                  {data.floorno}\r\n                </p>\r\n                <p>\r\n                  <button\r\n                    onClick={() => {\r\n                      // eslint-disable-next-line no-restricted-globals\r\n                      let result = confirm(\"really want to edit\");\r\n                      if (result) {\r\n                        navigate(`/servereditnon/${data._id}`);\r\n                      }\r\n                    }}\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      handledelete(data._id);\r\n                    }}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Serverpage_non;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Input, Row, Col, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport Layout from \"./../../components/Layout\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst Servereditnon = () => {\r\n const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [serverinfo, setServerinfo] = useState(null);\r\n  const [form]=Form.useForm();\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      if (roles === \"admin\" || roles === \"editor\") {\r\n        localStorage.setItem(\"role\", roles);\r\n      }\r\n    }, [roles]);\r\n  \r\n    useEffect(() => {\r\n      const savedRole = localStorage.getItem(\"role\");\r\n      if (savedRole && savedRole !== roles) {\r\n        dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n      }\r\n    }, [dispatch]);\r\n\r\n  const getserverdata = async () => {\r\n    const res = await axios.post(\r\n      \"/api/v1/tech/server/getserverdata\",\r\n      {\r\n        serverroomid: params.serverroomid,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      }\r\n    );\r\n    if (res.data.success) {\r\n      setServerinfo(res.data.data);\r\n      //   Form.setFieldsValue(res.data.data);\r\n      //console.log(labdata);\r\n      form.setFieldsValue(res.data.data);\r\n      message.success(res.data.message);\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    getserverdata();\r\n  }, []);\r\n\r\n  const handleform = async (values) => {\r\n    values.serverroomid = params.serverroomid;\r\n    try {\r\n      const res = await axios.post(\"/api/v1/tech/server/updateserver\", values, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        navigate(\"/servern\");\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n     <Layout>\r\n     <div\r\n          className=\"m-2\"\r\n          style={{ border: \"1px solid black\", width: \"300px\",float:\"left\" }}\r\n        >\r\n          <Form layout=\"vertical\" onFinish={handleform} className=\"m-2\" form={form}>\r\n            <h3 className=\"text-center\">Edit Details</h3>\r\n            <Row gutter={20}>\r\n              <Col xs={24} md={24}>\r\n                <Form.Item\r\n                  label=\"Server Room name\"\r\n                  name=\"roomname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type lab name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24}>\r\n                <Form.Item\r\n                  label=\"Room number\"\r\n                  name=\"roomno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type lab number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24}>\r\n                <Form.Item\r\n                  label=\"Building name\"\r\n                  name=\"buildingname\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type building name\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24}>\r\n                <Form.Item\r\n                  label=\"Floor number\"\r\n                  name=\"floorno\"\r\n                  rules={[{ required: true }]}\r\n                >\r\n                  <Input type=\"number\" placeholder=\"type floor number\" />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col xs={24} md={24}>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"180px\", marginTop: \"25px\" }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n        \r\n    </Layout> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Servereditnon\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message, Select, DatePicker } from \"antd\";\r\n\r\nimport \"../../styles/Newtechpagestyles.css\";\r\n\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst  Serverdetailnon = () => {\r\n    const roles = useSelector((State) => State.role.role);\r\n    const dispatch = useDispatch();\r\n  const [serverdetails, setServerdetails] = useState([]);\r\n  const [itemtype, setItemtype] = useState();\r\n  const [formattedDates, setFormattedDates] = useState({});\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n const [servername,setServername]=useState();\r\n   const [server,setServer]=useState([]);\r\n\r\n     useEffect(() => {\r\n       if (roles === \"admin\" || roles === \"editor\") {\r\n         localStorage.setItem(\"role\", roles);\r\n       }\r\n     }, [roles]);\r\n   \r\n     useEffect(() => {\r\n       const savedRole = localStorage.getItem(\"role\");\r\n       if (savedRole && savedRole !== roles) {\r\n         dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n       }\r\n     }, [dispatch]);\r\n   const getallteachers = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tech/server/getallserver \", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setServer(res.data.data);\r\n      } else {\r\n        message.error(res.data.messgae);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    const labs=server.find((data)=>data._id===params.serverroomid);\r\n     if(labs){\r\n      setServername(labs.roomname);\r\n     }\r\n      },[server,params.serverroomid]);\r\n\r\n   useEffect(() => {\r\n      getallteachers();\r\n    }, []);\r\n\r\n  const handlefinish = async (values) => {\r\n    // console.log(\"Received values:\", values);\r\n    values.serverroomid = params.serverroomid;\r\n    if (values.itemtype === \"other\" && values.otheritemtype) {\r\n      values.itemtype = values.otheritemtype;\r\n      delete values.otheritemtype;\r\n    }\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/server/addserverdetailnon\",\r\n        values\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const getdetails = async () => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/server/getdetailofservernon\",\r\n        {\r\n          serverroomid: params.serverroomid,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setServerdetails(res.data.data);\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n useEffect(() => {\r\n    getdetails();\r\n  }, []);\r\n\r\n\r\n  const handledelete = async (id) => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/server/deleteserverdetailnon\",\r\n        {\r\n          id,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'34px',fontFamily:'bold'}}><p>{servername}</p></div>\r\n      <div\r\n        className=\"form-divnew\"\r\n        style={{\r\n          border: \"1px solid black\",\r\n          width: \"100%\",\r\n          margin: \"10px\",\r\n          float: \"left\",\r\n        }}\r\n      >\r\n        <Form layout=\"vertical\" onFinish={handlefinish} className=\"m-2\">\r\n          <h3 className=\"text-center\">ADD ITEM</h3>\r\n          <Row gutter={20}>\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                name=\"itemtype\"\r\n                label=\"Item Type\"\r\n                rules={[{ required: true, message: \"Item type is required\" }]}\r\n              >\r\n                <Select\r\n                  placeholder=\"select item type\"\r\n                  onChange={(value) => setItemtype(value)}\r\n                >\r\n                  <Option value=\"whiteboard\">Whiteboard</Option>\r\n                  <Option value=\"marker\">Marker</Option>\r\n                  <Option value=\"chalk\">Chalk</Option>\r\n                  <Option value=\"duster\">Duster</Option>\r\n                  <Option value=\"notice_board\">Notice Board</Option>\r\n                  <Option value=\"bookshelf\">Bookshelf</Option>\r\n                  <Option value=\"clock\">Clock</Option>\r\n                  <Option value=\"chair\">Chair</Option>\r\n                  <Option value=\"desk\">Desk</Option>\r\n                  <Option value=\"pen_holder\">Pen Holder</Option>\r\n                  <Option value=\"paper_stack\">Paper Stack</Option>\r\n                  <Option value=\"file_cabinet\">File Cabinet</Option>\r\n                  <Option value=\"cupboard\">Cupboard</Option>\r\n                  <Option value=\"curtains\">Curtains</Option>\r\n                  <Option value=\"trash_bin\">Trash Bin</Option>\r\n                  <Option value=\"water_bottle\">Water Bottle</Option>\r\n                  <Option value=\"notepad\">Notepad</Option>\r\n                  <Option value=\"globe\">Globe</Option>\r\n                  <Option value=\"poster\">Poster</Option>\r\n                  <Option value=\"calendar\">Calendar</Option>\r\n                  <Option value=\"plant\">Plant</Option>\r\n                  <Option value=\"student_chair\">Student Chair</Option>\r\n                  <Option value=\"bulletin_board\">Bulletin Board</Option>\r\n                  <Option value=\"stapler\">Stapler</Option>\r\n                  <Option value=\"scissors\">Scissors</Option>\r\n                  <Option value=\"paperweight\">Paperweight</Option>\r\n                  <Option value=\"nameplate\">Nameplate</Option>\r\n                  <Option value=\"map\">Map</Option>\r\n                  <Option value=\"lamp\">Lamp</Option>\r\n                  <Option value=\"cup\">Cup</Option>\r\n                  <Option value=\"rubber_band\">Rubber Band</Option>\r\n                  <Option value=\"folder\">Folder</Option>\r\n                  <Option value=\"sticky_notes\">Sticky Notes</Option>\r\n                  <Option value=\"paper_clips\">Paper Clips</Option>\r\n                  <Option value=\"first_aid_kit\">First Aid Kit</Option>\r\n                  <Option value=\"other\">Other</Option>\r\n                </Select>\r\n              </Form.Item>\r\n            </Col>\r\n            {itemtype === \"other\" && (\r\n              <Col xs={24} md={24} lg={5}>\r\n                <Form.Item\r\n                  label=\"other item name\"\r\n                  name=\"otheritemtype\"\r\n                  rules={[\r\n                    { required: true, message: \"other item name required\" },\r\n                  ]}\r\n                >\r\n                  <Input type=\"text\" placeholder=\"type item name\" />\r\n                </Form.Item>\r\n              </Col>\r\n            )}\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                label=\"Unique Id\"\r\n                name=\"uid\"\r\n                rules={[{ required: true, message: \" uid required\" }]}\r\n              >\r\n                <Input type=\"text\" placeholder=\"type unique id\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                name=\"installationdate\"\r\n                label=\"Installation Date\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Installation date is required\",\r\n                  },\r\n                ]}\r\n              >\r\n                <DatePicker style={{ width: \"100%\" }} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={5}>\r\n              <Form.Item\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                rules={[{ required: true, message: \"Description is required\" }]}\r\n              >\r\n                <Input.TextArea\r\n                  placeholder=\"enter description\"\r\n                  rows={1}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} md={24} lg={4}>\r\n              <Form.Item>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"60%\", marginLeft: \"4px\",marginTop:\"22px\"}}\r\n                >\r\n                  Submit\r\n                </button>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n\r\n      <table\r\n          className=\"table\"\r\n          style={{\r\n            width: \"100%\",\r\n            borderCollapse: \"collapse\",\r\n            marginTop: \"10px\",\r\n          }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Item Type\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n               Unique Id\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Installation Date\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Description\r\n              </th>\r\n              <th\r\n                style={{\r\n                  border: \"2px solid black\",\r\n                  textAlign: \"center\",\r\n                  padding: \"10px\",\r\n                  color: \"red\",\r\n                }}\r\n              >\r\n                Actions\r\n              </th>\r\n              </tr>\r\n</thead>\r\n<tbody>\r\n{serverdetails &&\r\n              serverdetails.map((data) => (\r\n                <tr key={data._id}>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <b>{data.itemtype}</b>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <b>{data.uid}</b>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    {new Date(data.installationdate).toLocaleDateString()}\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n\r\n                      width: \"350px\",\r\n                    }}\r\n                  >\r\n                    <div style={{ maxHeight: \"150px\", overflowY: \"auto\" }}>\r\n                      {data.description || \"N/A\"}\r\n                    </div>\r\n                  </td>\r\n                  <td\r\n                    style={{\r\n                      border: \"2px solid black\",\r\n                      textAlign: \"center\",\r\n                      padding: \"10px\",\r\n                    }}\r\n                  >\r\n                    <i\r\n                      className=\"fa-solid fa-trash icon\"\r\n                      style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Do you want to delete?\")) {\r\n                          handledelete(data._id);\r\n                        }\r\n                      }}\r\n                    ></i>\r\n                    <i\r\n                      className=\"fa-solid fa-pen-to-square edit\"\r\n                      style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                      onClick={() => {\r\n                        if (window.confirm(\"Do you want to edit?\")) {\r\n                          navigate(`/serverdetaileditnon/${data._id}`);\r\n                        }\r\n                      }}\r\n                    ></i>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n</tbody>\r\n              </table>\r\n\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Serverdetailnon;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {useNavigate,useParams} from \"react-router-dom\";\r\nimport axios from'axios';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  message,\r\n  Select,\r\n  DatePicker,\r\n   \r\n} from \"antd\";\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\nconst {Option} =Select;\r\n\r\n\r\nconst Serverdetaileditnon = () => {\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n\r\n  const [form]=Form.useForm();\r\n    const [itemtype, setItemtype] = useState(null);\r\n    const [serverdetailinfo, setServerdetailinfo] = useState(null);\r\n    const params=useParams();\r\n\r\n      useEffect(() => {\r\n        if (roles === \"admin\" || roles === \"editor\") {\r\n          localStorage.setItem(\"role\", roles);\r\n        }\r\n      }, [roles]);\r\n    \r\n      useEffect(() => {\r\n        const savedRole = localStorage.getItem(\"role\");\r\n        if (savedRole && savedRole !== roles) {\r\n          dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n        }\r\n      }, [dispatch]);\r\n\r\n    const handlefinish=async(values)=>{\r\n        if (values.itemtype === \"other\" && values.otheritemtype) {\r\n            values.itemtype = values.otheritemtype;\r\n            delete values.otheritemtype;\r\n          }\r\n          values.serverdetailid = params.serverdetailid;\r\n      \r\n          try {\r\n            const res = await axios.post(\r\n              \"/api/v1/tech/server/updateserverdetailnon\",\r\n              values,\r\n              {\r\n                headers: {\r\n                  Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n              }\r\n            );\r\n            if (res.data.success) {\r\n              message.success(res.data.message);\r\n              window.history.back();\r\n            } else {\r\n              message.error(res.data.message);\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n            message.error(\"spmething went wrong\");\r\n          }\r\n    };\r\n\r\n    const getteacherdetails=async()=>{\r\n        const res = await axios.post(\r\n            \"/api/v1/tech/server/getserverdetaildatanon\",\r\n            {\r\n              serverdetailid: params.serverdetailid,\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n              },\r\n            }\r\n          );\r\n          if (res.data.success) {\r\n            setServerdetailinfo(res.data.data);\r\n            //   Form.setFieldsValue(res.data.data);\r\n            //console.log(labdata);\r\n            const {installationdate,...otherdata}=res.data.data;\r\n            form.setFieldsValue({\r\n                ...otherdata,\r\n                installationdate:installationdate?moment(installationdate):null\r\n            });\r\n            message.success(res.data.message);\r\n          } else {\r\n            message.error(res.data.message);\r\n          }\r\n    };\r\n\r\n     useEffect(() => {\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        getteacherdetails();\r\n      }, []);\r\n  return (\r\n    <Layout>\r\n       <div\r\n              className=\"form-divnew\"\r\n              style={{\r\n                border: \"1px solid black\",\r\n                width: \"40%\",\r\n                margin: \"10px\",\r\n                float: \"left\",\r\n              }}\r\n            >\r\n              <Form layout=\"vertical\" onFinish={handlefinish} className=\"m-2\" form={form}>\r\n                <h3 className=\"text-center\">Edit Detail</h3>\r\n                <Row gutter={20}>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"itemtype\"\r\n                      label=\"Item Type\"\r\n                      rules={[{ required: true, message: \"Item type is required\" }]}\r\n                    >\r\n                      <Select\r\n                        placeholder=\"select item type\"\r\n                        onChange={(value) => setItemtype(value)}\r\n                      >\r\n                        <Option value=\"whiteboard\">Whiteboard</Option>\r\n                        <Option value=\"marker\">Marker</Option>\r\n                        <Option value=\"chalk\">Chalk</Option>\r\n                        <Option value=\"duster\">Duster</Option>\r\n                        <Option value=\"notice_board\">Notice Board</Option>\r\n                        <Option value=\"bookshelf\">Bookshelf</Option>\r\n                        <Option value=\"clock\">Clock</Option>\r\n                        <Option value=\"chair\">Chair</Option>\r\n                        <Option value=\"desk\">Desk</Option>\r\n                        <Option value=\"pen_holder\">Pen Holder</Option>\r\n                        <Option value=\"paper_stack\">Paper Stack</Option>\r\n                        <Option value=\"file_cabinet\">File Cabinet</Option>\r\n                        <Option value=\"cupboard\">Cupboard</Option>\r\n                        <Option value=\"curtains\">Curtains</Option>\r\n                        <Option value=\"trash_bin\">Trash Bin</Option>\r\n                        <Option value=\"water_bottle\">Water Bottle</Option>\r\n                        <Option value=\"notepad\">Notepad</Option>\r\n                        <Option value=\"globe\">Globe</Option>\r\n                        <Option value=\"poster\">Poster</Option>\r\n                        <Option value=\"calendar\">Calendar</Option>\r\n                        <Option value=\"plant\">Plant</Option>\r\n                        <Option value=\"student_chair\">Student Chair</Option>\r\n                        <Option value=\"bulletin_board\">Bulletin Board</Option>\r\n                        <Option value=\"stapler\">Stapler</Option>\r\n                        <Option value=\"scissors\">Scissors</Option>\r\n                        <Option value=\"paperweight\">Paperweight</Option>\r\n                        <Option value=\"nameplate\">Nameplate</Option>\r\n                        <Option value=\"map\">Map</Option>\r\n                        <Option value=\"lamp\">Lamp</Option>\r\n                        <Option value=\"cup\">Cup</Option>\r\n                        <Option value=\"rubber_band\">Rubber Band</Option>\r\n                        <Option value=\"folder\">Folder</Option>\r\n                        <Option value=\"sticky_notes\">Sticky Notes</Option>\r\n                        <Option value=\"paper_clips\">Paper Clips</Option>\r\n                        <Option value=\"first_aid_kit\">First Aid Kit</Option>\r\n                        <Option value=\"other\">Other</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  {itemtype === \"other\" && (\r\n                    <Col xs={24} md={24}>\r\n                      <Form.Item\r\n                        label=\"other item name\"\r\n                        name=\"otheritemtype\"\r\n                        rules={[\r\n                          { required: true, message: \"other item name required\" },\r\n                        ]}\r\n                      >\r\n                        <Input type=\"text\" placeholder=\"type item name\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  )}\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      label=\"Unique Id\"\r\n                      name=\"uid\"\r\n                      rules={[{ required: true, message: \" uid required\" }]}\r\n                    >\r\n                      <Input type=\"text\" placeholder=\"type unique id\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"installationdate\"\r\n                      label=\"Installation Date\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: \"Installation date is required\",\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <DatePicker style={{ width: \"100%\" }} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item\r\n                      name=\"description\"\r\n                      label=\"Description\"\r\n                      rules={[{ required: true, message: \"Description is required\" }]}\r\n                    >\r\n                      <Input.TextArea\r\n                        placeholder=\"enter description\"\r\n                        rows={4}\r\n                        style={{ width: \"100%\" }}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} md={24}>\r\n                    <Form.Item>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{ width: \"100%\", marginLeft: \"0px\" }}\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Serverdetaileditnon;\r\n","import React from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/Techpagestyles.css\";\r\nimport Layout2 from \"../../components/Layout2\";\r\n\r\nconst data = [\r\n    {\r\n      name: \"Teacher\",\r\n      path: \"/teachersumn\",\r\n      icon: \"fa-solid fa-chalkboard-user\",\r\n    },\r\n    {\r\n      name: \"Class\",\r\n      path: \"/classsumn\",\r\n      icon: \"fa-solid fa-house\",\r\n    },\r\n    {\r\n      name: \"Lab\",\r\n      path: \"/labsumn\",\r\n      icon: \"fa-solid fa-computer\",\r\n    },\r\n    {\r\n      name: \"Server\",\r\n      path: \"/serversumn\",\r\n      icon: \"fa-solid fa-server\",\r\n    }\r\n     \r\n  ];\r\n\r\nconst Nontechsum = () => {\r\n    const navigate = useNavigate();\r\n  return (\r\n    <>\r\n    <Layout2> \r\n    <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'24px',fontFamily:'bold'}}><p>NON-TECHNICAL SUMMARY</p></div>\r\n       <div style={{marginTop:\"8rem\"}}> \r\n      <section className=\"container1\">\r\n          {data.map((data) => {\r\n            return (\r\n              <div\r\n                className=\"box1\"\r\n                onClick={() => {\r\n                  navigate(data.path);\r\n                }}\r\n              >\r\n                <i class={data.icon}></i>\r\n\r\n                <b>{data.name}</b>\r\n              </div>\r\n            );\r\n          })}\r\n        </section>\r\n        </div>\r\n        </Layout2>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Nontechsum","import React, { useEffect, useState } from \"react\";\r\nimport Layout2 from \"../../components/Layout2\";\r\nimport { message, Select, Table } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst { Option } = Select;\r\nconst Teachersumnon = () => {\r\n\r\n     const [teachers, setTeachers] = useState([]);\r\n      const [teacherdetails, setTeacherdetails] = useState([]);\r\n    \r\n      const [teachernames, setTeachernames] = useState({});\r\n    const [totalteachers,setTotalteachers]=useState([]);\r\n    const[teachernums,setTeachernums]=useState('all');\r\n    const[sortorder,setSortorder]=useState('oldtonew')\r\n    \r\n      const [item, setItem] = useState(\"all\");\r\n      const [displaydata, setDisplaydata] = useState();\r\n\r\n      const getallteachers = async () => {\r\n        try {\r\n          const res = await axios.get(\"/api/v1/tech/teacher/getallteacher\", {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          });\r\n          if (res.data.success) {\r\n            message.success(res.data.message);\r\n            setTeachers(res.data.data);\r\n          } else {\r\n            message.error(res.data.messgae);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n\r\n      const getteacherdetails = async () => {\r\n        try {\r\n          const res = await axios.get(\"/api/v1/tech/teacher/getallteacherdetailsnon\", {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          });\r\n          if (res.data.success) {\r\n            message.success(res.data.message);\r\n            setTeacherdetails(res.data.data);\r\n          } else {\r\n            message.error(res.data.message);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n\r\n      const teachernamess = async () => {\r\n        const teachernames = {};\r\n     \r\n        const allteacherdetails = teacherdetails;\r\n        for (let data of allteacherdetails) {\r\n          teachernames[data._id] = await teachername(data.teacherid);\r\n        }\r\n        setTeachernames(teachernames);\r\n      };\r\n    \r\n      const teachername = async (teacherid) => {\r\n        const allteachers = teachers;\r\n        for (let data of allteachers) {\r\n          if (data._id === teacherid) {\r\n            return data.teachername;\r\n          }\r\n        }\r\n      };\r\n\r\n         useEffect(() => {\r\n            getteacherdetails();\r\n          }, []);\r\n        \r\n          useEffect(() => {\r\n            getallteachers();\r\n          }, []);\r\n        \r\n          useEffect(() => {\r\n            teachernamess();\r\n          }, [teacherdetails, teachers]);\r\n\r\n\r\n    useEffect(()=>{\r\n  const allteachers=[...new Set(teachers.map(data=>data.teachername))];\r\n  setTotalteachers(allteachers);\r\n    },[teachers]);\r\n\r\n\r\n    const initialprint = async () =>  {\r\n          if (item === \"all\") {\r\n            const tabledatas = teacherdetails.map((data) => ({\r\n              key: data._id,\r\n              product:data.itemtype, \r\n             uniqueid:data.uid,\r\n              date: new Date(data.installationdate).toLocaleDateString(),\r\n              description:data.description,\r\n              teachername: teachernames[data._id],\r\n              \r\n              \r\n               \r\n            }));\r\n            setDisplaydata(tabledatas);\r\n          }\r\n        };\r\n        useEffect(() => {\r\n          initialprint();\r\n        }, [teacherdetails, teachernames]);\r\n\r\n\r\n        const tabledata = (item, teachername,order) => {\r\n            let displaydatas;\r\n            if (item === 'other') {\r\n              if (teachername === 'all') {\r\n                \r\n                const excludeitem = [\"whiteboard\", \"marker\", \"chalk\", \"duster\", \"notice_board\", \"bookshelf\", \"clock\", \"chair\", \"desk\", \r\n  \"pen_holder\", \"paper_stack\", \"file_cabinet\", \"cupboard\", \"curtains\", \"trash_bin\", \"water_bottle\", \r\n  \"notepad\", \"globe\", \"poster\", \"calendar\", \"plant\", \"student_chair\", \"bulletin_board\", \"stapler\", \r\n  \"scissors\", \"paperweight\", \"nameplate\", \"map\", \"lamp\", \"cup\", \"rubber_band\", \"folder\", \"sticky_notes\", \r\n  \"paper_clips\", \"first_aid_kit\"\r\n                   ];\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) => !excludeitem.includes(data.itemtype)\r\n                );\r\n              } else {\r\n                const excludeitem = [ \r\n         \"whiteboard\", \"marker\", \"chalk\", \"duster\", \"notice_board\", \"bookshelf\", \"clock\", \"chair\", \"desk\", \r\n  \"pen_holder\", \"paper_stack\", \"file_cabinet\", \"cupboard\", \"curtains\", \"trash_bin\", \"water_bottle\", \r\n  \"notepad\", \"globe\", \"poster\", \"calendar\", \"plant\", \"student_chair\", \"bulletin_board\", \"stapler\", \r\n  \"scissors\", \"paperweight\", \"nameplate\", \"map\", \"lamp\", \"cup\", \"rubber_band\", \"folder\", \"sticky_notes\", \r\n  \"paper_clips\", \"first_aid_kit\"\r\n        ];\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) =>\r\n                    !excludeitem.includes(data.itemtype) &&\r\n                    teachernames[data._id] === teachername\r\n                );\r\n              }\r\n            } else if (item === \"all\") {\r\n              if (teachername === 'all') {\r\n                displaydatas = teacherdetails;  \r\n              } else {\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) => teachernames[data._id] === teachername\r\n                );\r\n              }\r\n            } else {\r\n              if (teachername === 'all') {\r\n                displaydatas = teacherdetails.filter((data) => data.itemtype === item);\r\n              } else {\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) => data.itemtype === item && teachernames[data._id] ===teachername\r\n                );\r\n              }\r\n            }\r\n          \r\n        displaydatas.sort((a,b)=>{\r\n          const dateA=new Date(a.installationdate);\r\n          const dateB=new Date(b.installationdate);\r\n          return order==='newtoold'?dateB-dateA:dateA-dateB;\r\n        });\r\n        \r\n            const tabledatas = displaydatas.map((data) => ({\r\n                key: data._id,\r\n                product:data.itemtype, \r\n               uniqueid:data.uid,\r\n                date: new Date(data.installationdate).toLocaleDateString(),\r\n                description:data.description,\r\n                teachername: teachernames[data._id],\r\n            }));\r\n            setDisplaydata(tabledatas);  \r\n          };\r\n\r\n          const columns =\r\n            teachernums===\"all\"?[\r\n            {\r\n                title: \"ITEM NAME\",\r\n                dataIndex: \"product\",\r\n                key: \"product\",\r\n              },\r\n              {\r\n                title:\"UNIQUE ID\",\r\n                dataIndex:\"uniqueid\",\r\n                key:\"uniqueid\"\r\n              },\r\n              { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n              {\r\n                title:\"DESCRIPTION\",\r\n                dataIndex: \"description\",\r\n                key: \"description\",\r\n              },{\r\n                title:\"TEACHER NAME\",\r\n                dataIndex:\"teachername\",\r\n                key:\"teachername\"\r\n              }\r\n          ]:[\r\n            {\r\n                title: \"ITEM NAME\",\r\n                dataIndex: \"product\",\r\n                key: \"product\",\r\n              },\r\n              {\r\n                title:\"UNIQUE ID\",\r\n                dataIndex:\"uniqueid\",\r\n                key:\"uniqueid\"\r\n              },\r\n              { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n              {\r\n                title:\"DESCRIPTION\",\r\n                dataIndex: \"description\",\r\n                key: \"description\",\r\n              }\r\n          ];\r\n\r\n            const itemchange=(value)=>{\r\n            setItem(value);\r\n            //tabledata(item,labnums);\r\n            }\r\n            \r\n            const teachernamechange=(value)=>{\r\n              setTeachernums(value);\r\n             // tabledata(item,labnums);\r\n            }\r\n            useEffect(()=>{\r\n            tabledata(item,teachernums,sortorder);\r\n            },[item,teachernums,sortorder])\r\n        \r\n  return (\r\n    <Layout2>\r\n       <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'24px',fontFamily:'bold'}}><p>TEACHERS' ROOM SUMMARY</p></div>\r\n <div className=\"d-flex justify-content-center align-items-center gap-2\" style={{width:\"100%\"}}>\r\n <span>SELECT ITEM : </span>\r\n          <Select placeholder=\"choose an item\" onChange={itemchange}  style={{width:\"150px\"}}>\r\n          \r\n  {[\"all\",\"other\", \"whiteboard\", \"marker\", \"chalk\", \"duster\", \"notice_board\", \"bookshelf\", \"clock\", \"chair\", \"desk\", \r\n  \"pen_holder\", \"paper_stack\", \"file_cabinet\", \"cupboard\", \"curtains\", \"trash_bin\", \"water_bottle\", \r\n  \"notepad\", \"globe\", \"poster\", \"calendar\", \"plant\", \"student_chair\", \"bulletin_board\", \"stapler\", \r\n  \"scissors\", \"paperweight\", \"nameplate\", \"map\", \"lamp\", \"cup\", \"rubber_band\", \"folder\", \"sticky_notes\", \r\n  \"paper_clips\", \"first_aid_kit\"].map((data)=>(\r\n<Option value={data}>{data}</Option>\r\n  ))}\r\n          </Select>\r\n          <span>SELECT TEACHER : </span>\r\n           <Select placeholder=\"choose teacher name\" onChange={teachernamechange} style={{width:\"150px\"}}>\r\n           <Option value='all' >All</Option>\r\n           { totalteachers.map((data)=>(\r\n            <Option value={data}>{data}</Option>\r\n           ))}\r\n\r\n           </Select>\r\n           <span>SORT ORDER</span>\r\n           <Select placeholder='select sort order' onChange={(value)=>{setSortorder(value)}}>\r\n            <Option value='newtoold'>New to Old</Option>\r\n            <Option value='oldtonew'>Old to New</Option>\r\n           </Select>\r\n            \r\n        </div>\r\n        <button onClick={()=>{window.print()}} style={{marginLeft:'5px',borderRadius:\"10px\",cursor:'pointer' }}>PRINT</button>\r\n        <Table columns={columns} dataSource={displaydata} pagination={false} />\r\n\r\n    </Layout2>\r\n  )\r\n}\r\n\r\nexport default Teachersumnon\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout2 from \"../../components/Layout2\";\r\nimport { message, Select, Table } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst { Option } = Select;\r\nconst Classsumnon = () => {\r\n\r\n     const [teachers, setTeachers] = useState([]);\r\n      const [teacherdetails, setTeacherdetails] = useState([]);\r\n    \r\n      const [teachernames, setTeachernames] = useState({});\r\n    const [totalteachers,setTotalteachers]=useState([]);\r\n    const[teachernums,setTeachernums]=useState('all');\r\n    const[sortorder,setSortorder]=useState('oldtonew')\r\n    \r\n      const [item, setItem] = useState(\"all\");\r\n      const [displaydata, setDisplaydata] = useState();\r\n\r\n      const getallteachers = async () => {\r\n        try {\r\n          const res = await axios.get(\"/api/v1/tech/getallclass\", {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          });\r\n          if (res.data.success) {\r\n            message.success(res.data.message);\r\n            setTeachers(res.data.data);\r\n          } else {\r\n            message.error(res.data.messgae);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n\r\n      const getteacherdetails = async () => {\r\n        try {\r\n          const res = await axios.get(\"/api/v1/tech/getallclassdetailsnon\", {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          });\r\n          if (res.data.success) {\r\n            message.success(res.data.message);\r\n            setTeacherdetails(res.data.data);\r\n          } else {\r\n            message.error(res.data.message);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n\r\n      const teachernamess = async () => {\r\n        const teachernames = {};\r\n     \r\n        const allteacherdetails = teacherdetails;\r\n        for (let data of allteacherdetails) {\r\n          teachernames[data._id] = await teachername(data.classid);\r\n        }\r\n        setTeachernames(teachernames);\r\n      };\r\n    \r\n      const teachername = async (teacherid) => {\r\n        const allteachers = teachers;\r\n        for (let data of allteachers) {\r\n          if (data._id === teacherid) {\r\n            return data.classname;\r\n          }\r\n        }\r\n      };\r\n\r\n         useEffect(() => {\r\n            getteacherdetails();\r\n          }, []);\r\n        \r\n          useEffect(() => {\r\n            getallteachers();\r\n          }, []);\r\n        \r\n          useEffect(() => {\r\n            teachernamess();\r\n          }, [teacherdetails, teachers]);\r\n\r\n\r\n    useEffect(()=>{\r\n  const allteachers=[...new Set(teachers.map(data=>data.classname))];\r\n  setTotalteachers(allteachers);\r\n    },[teachers]);\r\n\r\n\r\n    const initialprint = async () =>  {\r\n          if (item === \"all\") {\r\n            const tabledatas = teacherdetails.map((data) => ({\r\n              key: data._id,\r\n              product:data.itemtype, \r\n             uniqueid:data.uid,\r\n              date: new Date(data.installationdate).toLocaleDateString(),\r\n              description:data.description,\r\n              teachername: teachernames[data._id],\r\n              \r\n              \r\n               \r\n            }));\r\n            setDisplaydata(tabledatas);\r\n          }\r\n        };\r\n        useEffect(() => {\r\n          initialprint();\r\n        }, [teacherdetails, teachernames]);\r\n\r\n\r\n        const tabledata = (item, teachername,order) => {\r\n            let displaydatas;\r\n            if (item === 'other') {\r\n              if (teachername === 'all') {\r\n                \r\n                const excludeitem = [\"whiteboard\", \"marker\", \"chalk\", \"duster\", \"notice_board\", \"bookshelf\", \"clock\", \"chair\", \"desk\", \r\n  \"pen_holder\", \"paper_stack\", \"file_cabinet\", \"cupboard\", \"curtains\", \"trash_bin\", \"water_bottle\", \r\n  \"notepad\", \"globe\", \"poster\", \"calendar\", \"plant\", \"student_chair\", \"bulletin_board\", \"stapler\", \r\n  \"scissors\", \"paperweight\", \"nameplate\", \"map\", \"lamp\", \"cup\", \"rubber_band\", \"folder\", \"sticky_notes\", \r\n  \"paper_clips\", \"first_aid_kit\"\r\n                   ];\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) => !excludeitem.includes(data.itemtype)\r\n                );\r\n              } else {\r\n                const excludeitem = [ \r\n         \"whiteboard\", \"marker\", \"chalk\", \"duster\", \"notice_board\", \"bookshelf\", \"clock\", \"chair\", \"desk\", \r\n  \"pen_holder\", \"paper_stack\", \"file_cabinet\", \"cupboard\", \"curtains\", \"trash_bin\", \"water_bottle\", \r\n  \"notepad\", \"globe\", \"poster\", \"calendar\", \"plant\", \"student_chair\", \"bulletin_board\", \"stapler\", \r\n  \"scissors\", \"paperweight\", \"nameplate\", \"map\", \"lamp\", \"cup\", \"rubber_band\", \"folder\", \"sticky_notes\", \r\n  \"paper_clips\", \"first_aid_kit\"\r\n        ];\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) =>\r\n                    !excludeitem.includes(data.itemtype) &&\r\n                    teachernames[data._id] === teachername\r\n                );\r\n              }\r\n            } else if (item === \"all\") {\r\n              if (teachername === 'all') {\r\n                displaydatas = teacherdetails;  \r\n              } else {\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) => teachernames[data._id] === teachername\r\n                );\r\n              }\r\n            } else {\r\n              if (teachername === 'all') {\r\n                displaydatas = teacherdetails.filter((data) => data.itemtype === item);\r\n              } else {\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) => data.itemtype === item && teachernames[data._id] ===teachername\r\n                );\r\n              }\r\n            }\r\n          \r\n        displaydatas.sort((a,b)=>{\r\n          const dateA=new Date(a.installationdate);\r\n          const dateB=new Date(b.installationdate);\r\n          return order==='newtoold'?dateB-dateA:dateA-dateB;\r\n        });\r\n        \r\n            const tabledatas = displaydatas.map((data) => ({\r\n                key: data._id,\r\n                product:data.itemtype, \r\n               uniqueid:data.uid,\r\n                date: new Date(data.installationdate).toLocaleDateString(),\r\n                description:data.description,\r\n                teachername: teachernames[data._id],\r\n            }));\r\n            setDisplaydata(tabledatas);  \r\n          };\r\n\r\n          const columns =\r\n            teachernums===\"all\"?[\r\n            {\r\n                title: \"ITEM NAME\",\r\n                dataIndex: \"product\",\r\n                key: \"product\",\r\n              },\r\n              {\r\n                title:\"UNIQUE ID\",\r\n                dataIndex:\"uniqueid\",\r\n                key:\"uniqueid\"\r\n              },\r\n              { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n              {\r\n                title:\"DESCRIPTION\",\r\n                dataIndex: \"description\",\r\n                key: \"description\",\r\n              },{\r\n                title:\"CLASS NAME\",\r\n                dataIndex:\"teachername\",\r\n                key:\"teachername\"\r\n              }\r\n          ]:[\r\n            {\r\n                title: \"ITEM NAME\",\r\n                dataIndex: \"product\",\r\n                key: \"product\",\r\n              },\r\n              {\r\n                title:\"UNIQUE ID\",\r\n                dataIndex:\"uniqueid\",\r\n                key:\"uniqueid\"\r\n              },\r\n              { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n              {\r\n                title:\"DESCRIPTION\",\r\n                dataIndex: \"description\",\r\n                key: \"description\",\r\n              }\r\n          ];\r\n\r\n            const itemchange=(value)=>{\r\n            setItem(value);\r\n            //tabledata(item,labnums);\r\n            }\r\n            \r\n            const teachernamechange=(value)=>{\r\n              setTeachernums(value);\r\n             // tabledata(item,labnums);\r\n            }\r\n            useEffect(()=>{\r\n            tabledata(item,teachernums,sortorder);\r\n            },[item,teachernums,sortorder])\r\n        \r\n  return (\r\n    <Layout2>\r\n       <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'24px',fontFamily:'bold'}}><p>CLASSES' SUMMARY</p></div>\r\n <div className=\"d-flex justify-content-center align-items-center gap-2\" style={{width:\"100%\"}}>\r\n <span>SELECT ITEM : </span>\r\n          <Select placeholder=\"choose an item\" onChange={itemchange}  style={{width:\"150px\"}}>\r\n          \r\n  {[\"all\",\"other\", \"whiteboard\", \"marker\", \"chalk\", \"duster\", \"notice_board\", \"bookshelf\", \"clock\", \"chair\", \"desk\", \r\n  \"pen_holder\", \"paper_stack\", \"file_cabinet\", \"cupboard\", \"curtains\", \"trash_bin\", \"water_bottle\", \r\n  \"notepad\", \"globe\", \"poster\", \"calendar\", \"plant\", \"student_chair\", \"bulletin_board\", \"stapler\", \r\n  \"scissors\", \"paperweight\", \"nameplate\", \"map\", \"lamp\", \"cup\", \"rubber_band\", \"folder\", \"sticky_notes\", \r\n  \"paper_clips\", \"first_aid_kit\"].map((data)=>(\r\n<Option value={data}>{data}</Option>\r\n  ))}\r\n          </Select>\r\n          <span>SELECT CLASS : </span>\r\n           <Select placeholder=\"choose class name\" onChange={teachernamechange} style={{width:\"150px\"}}>\r\n           <Option value='all' >All</Option>\r\n           { totalteachers.map((data)=>(\r\n            <Option value={data}>{data}</Option>\r\n           ))}\r\n\r\n           </Select>\r\n           <span>SORT ORDER</span>\r\n           <Select placeholder='select sort order' onChange={(value)=>{setSortorder(value)}}>\r\n            <Option value='newtoold'>New to Old</Option>\r\n            <Option value='oldtonew'>Old to New</Option>\r\n           </Select>\r\n            \r\n        </div>\r\n        <button onClick={()=>{window.print()}} style={{marginLeft:'5px',borderRadius:\"10px\",cursor:'pointer' }}>PRINT</button>\r\n        <Table columns={columns} dataSource={displaydata} pagination={false} />\r\n\r\n    </Layout2>\r\n  )\r\n}\r\n\r\nexport default Classsumnon\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout2 from \"../../components/Layout2\";\r\nimport { message, Select, Table } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst { Option } = Select;\r\nconst Labsumnon = () => {\r\n\r\n     const [teachers, setTeachers] = useState([]);\r\n      const [teacherdetails, setTeacherdetails] = useState([]);\r\n    \r\n      const [teachernames, setTeachernames] = useState({});\r\n    const [totalteachers,setTotalteachers]=useState([]);\r\n    const[teachernums,setTeachernums]=useState('all');\r\n    const[sortorder,setSortorder]=useState('oldtonew')\r\n    \r\n      const [item, setItem] = useState(\"all\");\r\n      const [displaydata, setDisplaydata] = useState();\r\n\r\n      const getallteachers = async () => {\r\n        try {\r\n          const res = await axios.get(\"/api/v1/tech/lab/getalllabs\", {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          });\r\n          if (res.data.success) {\r\n            message.success(res.data.message);\r\n            setTeachers(res.data.data);\r\n          } else {\r\n            message.error(res.data.messgae);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n\r\n      const getteacherdetails = async () => {\r\n        try {\r\n          const res = await axios.get(\"/api/v1/tech/lab/labdetailsnon\", {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          });\r\n          if (res.data.success) {\r\n            message.success(res.data.message);\r\n            setTeacherdetails(res.data.data);\r\n          } else {\r\n            message.error(res.data.message);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n\r\n      const teachernamess = async () => {\r\n        const teachernames = {};\r\n     \r\n        const allteacherdetails = teacherdetails;\r\n        for (let data of allteacherdetails) {\r\n          teachernames[data._id] = await teachername(data.labid);\r\n        }\r\n        setTeachernames(teachernames);\r\n      };\r\n    \r\n      const teachername = async (teacherid) => {\r\n        const allteachers = teachers;\r\n        for (let data of allteachers) {\r\n          if (data._id === teacherid) {\r\n            return data.labname;\r\n          }\r\n        }\r\n      };\r\n\r\n         useEffect(() => {\r\n            getteacherdetails();\r\n          }, []);\r\n        \r\n          useEffect(() => {\r\n            getallteachers();\r\n          }, []);\r\n        \r\n          useEffect(() => {\r\n            teachernamess();\r\n          }, [teacherdetails, teachers]);\r\n\r\n\r\n    useEffect(()=>{\r\n  const allteachers=[...new Set(teachers.map(data=>data.labname))];\r\n  setTotalteachers(allteachers);\r\n    },[teachers]);\r\n\r\n\r\n    const initialprint = async () =>  {\r\n          if (item === \"all\") {\r\n            const tabledatas = teacherdetails.map((data) => ({\r\n              key: data._id,\r\n              product:data.itemtype, \r\n             uniqueid:data.uid,\r\n              date: new Date(data.installationdate).toLocaleDateString(),\r\n              description:data.description,\r\n              teachername: teachernames[data._id],\r\n              \r\n              \r\n               \r\n            }));\r\n            setDisplaydata(tabledatas);\r\n          }\r\n        };\r\n        useEffect(() => {\r\n          initialprint();\r\n        }, [teacherdetails, teachernames]);\r\n\r\n\r\n        const tabledata = (item, teachername,order) => {\r\n            let displaydatas;\r\n            if (item === 'other') {\r\n              if (teachername === 'all') {\r\n                \r\n                const excludeitem = [\"whiteboard\", \"marker\", \"chalk\", \"duster\", \"notice_board\", \"bookshelf\", \"clock\", \"chair\", \"desk\", \r\n  \"pen_holder\", \"paper_stack\", \"file_cabinet\", \"cupboard\", \"curtains\", \"trash_bin\", \"water_bottle\", \r\n  \"notepad\", \"globe\", \"poster\", \"calendar\", \"plant\", \"student_chair\", \"bulletin_board\", \"stapler\", \r\n  \"scissors\", \"paperweight\", \"nameplate\", \"map\", \"lamp\", \"cup\", \"rubber_band\", \"folder\", \"sticky_notes\", \r\n  \"paper_clips\", \"first_aid_kit\"\r\n                   ];\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) => !excludeitem.includes(data.itemtype)\r\n                );\r\n              } else {\r\n                const excludeitem = [ \r\n         \"whiteboard\", \"marker\", \"chalk\", \"duster\", \"notice_board\", \"bookshelf\", \"clock\", \"chair\", \"desk\", \r\n  \"pen_holder\", \"paper_stack\", \"file_cabinet\", \"cupboard\", \"curtains\", \"trash_bin\", \"water_bottle\", \r\n  \"notepad\", \"globe\", \"poster\", \"calendar\", \"plant\", \"student_chair\", \"bulletin_board\", \"stapler\", \r\n  \"scissors\", \"paperweight\", \"nameplate\", \"map\", \"lamp\", \"cup\", \"rubber_band\", \"folder\", \"sticky_notes\", \r\n  \"paper_clips\", \"first_aid_kit\"\r\n        ];\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) =>\r\n                    !excludeitem.includes(data.itemtype) &&\r\n                    teachernames[data._id] === teachername\r\n                );\r\n              }\r\n            } else if (item === \"all\") {\r\n              if (teachername === 'all') {\r\n                displaydatas = teacherdetails;  \r\n              } else {\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) => teachernames[data._id] === teachername\r\n                );\r\n              }\r\n            } else {\r\n              if (teachername === 'all') {\r\n                displaydatas = teacherdetails.filter((data) => data.itemtype === item);\r\n              } else {\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) => data.itemtype === item && teachernames[data._id] ===teachername\r\n                );\r\n              }\r\n            }\r\n          \r\n        displaydatas.sort((a,b)=>{\r\n          const dateA=new Date(a.installationdate);\r\n          const dateB=new Date(b.installationdate);\r\n          return order==='newtoold'?dateB-dateA:dateA-dateB;\r\n        });\r\n        \r\n            const tabledatas = displaydatas.map((data) => ({\r\n                key: data._id,\r\n                product:data.itemtype, \r\n               uniqueid:data.uid,\r\n                date: new Date(data.installationdate).toLocaleDateString(),\r\n                description:data.description,\r\n                teachername: teachernames[data._id],\r\n            }));\r\n            setDisplaydata(tabledatas);  \r\n          };\r\n\r\n          const columns =\r\n            teachernums===\"all\"?[\r\n            {\r\n                title: \"ITEM NAME\",\r\n                dataIndex: \"product\",\r\n                key: \"product\",\r\n              },\r\n              {\r\n                title:\"UNIQUE ID\",\r\n                dataIndex:\"uniqueid\",\r\n                key:\"uniqueid\"\r\n              },\r\n              { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n              {\r\n                title:\"DESCRIPTION\",\r\n                dataIndex: \"description\",\r\n                key: \"description\",\r\n              },{\r\n                title:\"LAB NAME\",\r\n                dataIndex:\"teachername\",\r\n                key:\"teachername\"\r\n              }\r\n          ]:[\r\n            {\r\n                title: \"ITEM NAME\",\r\n                dataIndex: \"product\",\r\n                key: \"product\",\r\n              },\r\n              {\r\n                title:\"UNIQUE ID\",\r\n                dataIndex:\"uniqueid\",\r\n                key:\"uniqueid\"\r\n              },\r\n              { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n              {\r\n                title:\"DESCRIPTION\",\r\n                dataIndex: \"description\",\r\n                key: \"description\",\r\n              }\r\n          ];\r\n\r\n            const itemchange=(value)=>{\r\n            setItem(value);\r\n            //tabledata(item,labnums);\r\n            }\r\n            \r\n            const teachernamechange=(value)=>{\r\n              setTeachernums(value);\r\n             // tabledata(item,labnums);\r\n            }\r\n            useEffect(()=>{\r\n            tabledata(item,teachernums,sortorder);\r\n            },[item,teachernums,sortorder])\r\n        \r\n  return (\r\n    <Layout2>\r\n       <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'24px',fontFamily:'bold'}}><p>LAB'S SUMMARY</p></div>\r\n <div className=\"d-flex justify-content-center align-items-center gap-2\" style={{width:\"100%\"}}>\r\n <span>SELECT ITEM : </span>\r\n          <Select placeholder=\"choose an item\" onChange={itemchange}  style={{width:\"150px\"}}>\r\n          \r\n  {[\"all\",\"other\", \"whiteboard\", \"marker\", \"chalk\", \"duster\", \"notice_board\", \"bookshelf\", \"clock\", \"chair\", \"desk\", \r\n  \"pen_holder\", \"paper_stack\", \"file_cabinet\", \"cupboard\", \"curtains\", \"trash_bin\", \"water_bottle\", \r\n  \"notepad\", \"globe\", \"poster\", \"calendar\", \"plant\", \"student_chair\", \"bulletin_board\", \"stapler\", \r\n  \"scissors\", \"paperweight\", \"nameplate\", \"map\", \"lamp\", \"cup\", \"rubber_band\", \"folder\", \"sticky_notes\", \r\n  \"paper_clips\", \"first_aid_kit\"].map((data)=>(\r\n<Option value={data}>{data}</Option>\r\n  ))}\r\n          </Select>\r\n          <span>SELECT LAB : </span>\r\n           <Select placeholder=\"choose lab name\" onChange={teachernamechange} style={{width:\"150px\"}}>\r\n           <Option value='all' >All</Option>\r\n           { totalteachers.map((data)=>(\r\n            <Option value={data}>{data}</Option>\r\n           ))}\r\n\r\n           </Select>\r\n           <span>SORT ORDER</span>\r\n           <Select placeholder='select sort order' onChange={(value)=>{setSortorder(value)}}>\r\n            <Option value='newtoold'>New to Old</Option>\r\n            <Option value='oldtonew'>Old to New</Option>\r\n           </Select>\r\n            \r\n        </div>\r\n        <button onClick={()=>{window.print()}} style={{marginLeft:'5px',borderRadius:\"10px\",cursor:'pointer' }}>PRINT</button>\r\n        <Table columns={columns} dataSource={displaydata} pagination={false} />\r\n\r\n    </Layout2>\r\n  )\r\n}\r\n\r\nexport default Labsumnon\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout2 from \"../../components/Layout2\";\r\nimport { message, Select, Table } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst { Option } = Select;\r\nconst Serversumnon = () => {\r\n\r\n     const [teachers, setTeachers] = useState([]);\r\n      const [teacherdetails, setTeacherdetails] = useState([]);\r\n    \r\n      const [teachernames, setTeachernames] = useState({});\r\n    const [totalteachers,setTotalteachers]=useState([]);\r\n    const[teachernums,setTeachernums]=useState('all');\r\n    const[sortorder,setSortorder]=useState('oldtonew')\r\n    \r\n      const [item, setItem] = useState(\"all\");\r\n      const [displaydata, setDisplaydata] = useState();\r\n\r\n      const getallteachers = async () => {\r\n        try {\r\n          const res = await axios.get(\"/api/v1/tech/server/getallserver\", {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          });\r\n          if (res.data.success) {\r\n            message.success(res.data.message);\r\n            setTeachers(res.data.data);\r\n          } else {\r\n            message.error(res.data.messgae);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n\r\n      const getteacherdetails = async () => {\r\n        try {\r\n          const res = await axios.get(\"/api/v1/tech/server/getallserverroomdetailsnon\", {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          });\r\n          if (res.data.success) {\r\n            message.success(res.data.message);\r\n            setTeacherdetails(res.data.data);\r\n          } else {\r\n            message.error(res.data.message);\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n          message.error(\"something went wrong\");\r\n        }\r\n      };\r\n\r\n      const teachernamess = async () => {\r\n        const teachernames = {};\r\n     \r\n        const allteacherdetails = teacherdetails;\r\n        for (let data of allteacherdetails) {\r\n          teachernames[data._id] = await teachername(data.serverroomid);\r\n        }\r\n        setTeachernames(teachernames);\r\n      };\r\n    \r\n      const teachername = async (teacherid) => {\r\n        const allteachers = teachers;\r\n        for (let data of allteachers) {\r\n          if (data._id === teacherid) {\r\n            return data.roomname;\r\n          }\r\n        }\r\n      };\r\n\r\n         useEffect(() => {\r\n            getteacherdetails();\r\n          }, []);\r\n        \r\n          useEffect(() => {\r\n            getallteachers();\r\n          }, []);\r\n        \r\n          useEffect(() => {\r\n            teachernamess();\r\n          }, [teacherdetails, teachers]);\r\n\r\n\r\n    useEffect(()=>{\r\n  const allteachers=[...new Set(teachers.map(data=>data.roomname))];\r\n  setTotalteachers(allteachers);\r\n    },[teachers]);\r\n\r\n\r\n    const initialprint = async () =>  {\r\n          if (item === \"all\") {\r\n            const tabledatas = teacherdetails.map((data) => ({\r\n              key: data._id,\r\n              product:data.itemtype, \r\n             uniqueid:data.uid,\r\n              date: new Date(data.installationdate).toLocaleDateString(),\r\n              description:data.description,\r\n              teachername: teachernames[data._id],\r\n              \r\n              \r\n               \r\n            }));\r\n            setDisplaydata(tabledatas);\r\n          }\r\n        };\r\n        useEffect(() => {\r\n          initialprint();\r\n        }, [teacherdetails, teachernames]);\r\n\r\n\r\n        const tabledata = (item, teachername,order) => {\r\n            let displaydatas;\r\n            if (item === 'other') {\r\n              if (teachername === 'all') {\r\n                \r\n                const excludeitem = [\"whiteboard\", \"marker\", \"chalk\", \"duster\", \"notice_board\", \"bookshelf\", \"clock\", \"chair\", \"desk\", \r\n  \"pen_holder\", \"paper_stack\", \"file_cabinet\", \"cupboard\", \"curtains\", \"trash_bin\", \"water_bottle\", \r\n  \"notepad\", \"globe\", \"poster\", \"calendar\", \"plant\", \"student_chair\", \"bulletin_board\", \"stapler\", \r\n  \"scissors\", \"paperweight\", \"nameplate\", \"map\", \"lamp\", \"cup\", \"rubber_band\", \"folder\", \"sticky_notes\", \r\n  \"paper_clips\", \"first_aid_kit\"\r\n                   ];\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) => !excludeitem.includes(data.itemtype)\r\n                );\r\n              } else {\r\n                const excludeitem = [ \r\n         \"whiteboard\", \"marker\", \"chalk\", \"duster\", \"notice_board\", \"bookshelf\", \"clock\", \"chair\", \"desk\", \r\n  \"pen_holder\", \"paper_stack\", \"file_cabinet\", \"cupboard\", \"curtains\", \"trash_bin\", \"water_bottle\", \r\n  \"notepad\", \"globe\", \"poster\", \"calendar\", \"plant\", \"student_chair\", \"bulletin_board\", \"stapler\", \r\n  \"scissors\", \"paperweight\", \"nameplate\", \"map\", \"lamp\", \"cup\", \"rubber_band\", \"folder\", \"sticky_notes\", \r\n  \"paper_clips\", \"first_aid_kit\"\r\n        ];\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) =>\r\n                    !excludeitem.includes(data.itemtype) &&\r\n                    teachernames[data._id] === teachername\r\n                );\r\n              }\r\n            } else if (item === \"all\") {\r\n              if (teachername === 'all') {\r\n                displaydatas = teacherdetails;  \r\n              } else {\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) => teachernames[data._id] === teachername\r\n                );\r\n              }\r\n            } else {\r\n              if (teachername === 'all') {\r\n                displaydatas = teacherdetails.filter((data) => data.itemtype === item);\r\n              } else {\r\n                displaydatas = teacherdetails.filter(\r\n                  (data) => data.itemtype === item && teachernames[data._id] ===teachername\r\n                );\r\n              }\r\n            }\r\n          \r\n        displaydatas.sort((a,b)=>{\r\n          const dateA=new Date(a.installationdate);\r\n          const dateB=new Date(b.installationdate);\r\n          return order==='newtoold'?dateB-dateA:dateA-dateB;\r\n        });\r\n        \r\n            const tabledatas = displaydatas.map((data) => ({\r\n                key: data._id,\r\n                product:data.itemtype, \r\n               uniqueid:data.uid,\r\n                date: new Date(data.installationdate).toLocaleDateString(),\r\n                description:data.description,\r\n                teachername: teachernames[data._id],\r\n            }));\r\n            setDisplaydata(tabledatas);  \r\n          };\r\n\r\n          const columns =\r\n            teachernums===\"all\"?[\r\n            {\r\n                title: \"ITEM NAME\",\r\n                dataIndex: \"product\",\r\n                key: \"product\",\r\n              },\r\n              {\r\n                title:\"UNIQUE ID\",\r\n                dataIndex:\"uniqueid\",\r\n                key:\"uniqueid\"\r\n              },\r\n              { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n              {\r\n                title:\"DESCRIPTION\",\r\n                dataIndex: \"description\",\r\n                key: \"description\",\r\n              },{\r\n                title:\"SERVER ROOM NAME\",\r\n                dataIndex:\"teachername\",\r\n                key:\"teachername\"\r\n              }\r\n          ]:[\r\n            {\r\n                title: \"ITEM NAME\",\r\n                dataIndex: \"product\",\r\n                key: \"product\",\r\n              },\r\n              {\r\n                title:\"UNIQUE ID\",\r\n                dataIndex:\"uniqueid\",\r\n                key:\"uniqueid\"\r\n              },\r\n              { title: \"INSTALLATION DATE\", dataIndex: \"date\", key: \"date\" },\r\n              {\r\n                title:\"DESCRIPTION\",\r\n                dataIndex: \"description\",\r\n                key: \"description\",\r\n              }\r\n          ];\r\n\r\n            const itemchange=(value)=>{\r\n            setItem(value);\r\n            //tabledata(item,labnums);\r\n            }\r\n            \r\n            const teachernamechange=(value)=>{\r\n              setTeachernums(value);\r\n             // tabledata(item,labnums);\r\n            }\r\n            useEffect(()=>{\r\n            tabledata(item,teachernums,sortorder);\r\n            },[item,teachernums,sortorder])\r\n        \r\n  return (\r\n    <Layout2>\r\n       <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'24px',fontFamily:'bold'}}><p>SERVER ROOM'S SUMMARY</p></div>\r\n <div className=\"d-flex justify-content-center align-items-center gap-2\" style={{width:\"100%\"}}>\r\n <span>SELECT ITEM : </span>\r\n          <Select placeholder=\"choose an item\" onChange={itemchange}  style={{width:\"150px\"}}>\r\n          \r\n  {[\"all\",\"other\", \"whiteboard\", \"marker\", \"chalk\", \"duster\", \"notice_board\", \"bookshelf\", \"clock\", \"chair\", \"desk\", \r\n  \"pen_holder\", \"paper_stack\", \"file_cabinet\", \"cupboard\", \"curtains\", \"trash_bin\", \"water_bottle\", \r\n  \"notepad\", \"globe\", \"poster\", \"calendar\", \"plant\", \"student_chair\", \"bulletin_board\", \"stapler\", \r\n  \"scissors\", \"paperweight\", \"nameplate\", \"map\", \"lamp\", \"cup\", \"rubber_band\", \"folder\", \"sticky_notes\", \r\n  \"paper_clips\", \"first_aid_kit\"].map((data)=>(\r\n<Option value={data}>{data}</Option>\r\n  ))}\r\n          </Select>\r\n          <span>SELECT SERVER ROOM : </span>\r\n           <Select placeholder=\"choose server room name\" onChange={teachernamechange} style={{width:\"150px\"}}>\r\n           <Option value='all' >All</Option>\r\n           { totalteachers.map((data)=>(\r\n            <Option value={data}>{data}</Option>\r\n           ))}\r\n\r\n           </Select>\r\n           <span>SORT ORDER</span>\r\n           <Select placeholder='select sort order' onChange={(value)=>{setSortorder(value)}}>\r\n            <Option value='newtoold'>New to Old</Option>\r\n            <Option value='oldtonew'>Old to New</Option>\r\n           </Select>\r\n            \r\n        </div>\r\n        <button onClick={()=>{window.print()}} style={{marginLeft:'5px',borderRadius:\"10px\",cursor:'pointer' }}>PRINT</button>\r\n        <Table columns={columns} dataSource={displaydata} pagination={false} />\r\n\r\n    </Layout2>\r\n  )\r\n}\r\n\r\nexport default Serversumnon\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { message,Switch,Table } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setRole } from \"../redux/features/roleslice\";\r\n\r\nconst Userlist = () => {\r\n  const [userlist, setUserlist] = useState([]);\r\n  const dispatch=useDispatch();\r\n  dispatch(setRole(\"admin\"));\r\n  const getusers = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/admin/getalluser\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          'Cache-Control':'no-store',\r\n            Pragma: 'no-cache',\r\n      Expires: '0'\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        //dispatch(setRole(\"admin\"));\r\n        setUserlist(res.data.data);\r\n      } else {\r\n        \r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"someting went wrong\");\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\ngetusers();\r\n  },[]);\r\n\r\n  const updateuserrole=async(userid,newrole)=>{\r\ntry{\r\nconst res=await axios.post(\"/api/v1/admin/updaterole\",{\r\n    id:userid,\r\n    role:newrole\r\n},{\r\n    headers:{\r\n        Authorization:`Bearer ${localStorage.getItem(\"token\")}`\r\n    }\r\n});\r\nconsole.log(res);\r\nif(res.data.success){\r\n    message.success(res.data.message);\r\n\r\n    window.location.reload();\r\n}else{\r\n    message.error(res.data.message);\r\n}\r\n}catch(error){\r\n    console.log(error);\r\n    message.error(\"something went wrong\");\r\n}\r\n  };\r\n\r\nconst column=[\r\n    {\r\n        title:\"User Name\",\r\n        dataIndex:\"name\",\r\n        key:\"name\"\r\n    },\r\n    {\r\n        title:\"Email\",\r\n        dataIndex:\"email\",\r\n        key:\"email\"\r\n    },\r\n    {\r\n        title:\"Role\",\r\n        dataIndex:\"role\",\r\n        key:\"role\"\r\n    },\r\n    {\r\n        title:\"Actions\",\r\n       key:\"actions\",\r\n       render:(_,record)=>(\r\n        <Switch\r\n        checked={record.role===\"editor\"}\r\n        checkedChildren=\"editor\"\r\n        unCheckedChildren=\"viewer\"\r\n        onClick={()=>{updateuserrole(record._id,record.role===\"editor\"?\"viewer\":\"editor\")}}\r\n        />\r\n       )\r\n    }\r\n];\r\n\r\n  return (<Layout>\r\n<div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'34px',fontFamily:'bold'}}><p>USERS</p></div>\r\n<Table columns={column} dataSource={userlist} pagination={false}/>\r\n\r\n\r\n\r\n  </Layout>);\r\n};\r\n\r\nexport default Userlist;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message, Select, DatePicker } from \"antd\";\r\n\r\nimport \"../../styles/Newtechpagestyles.css\";\r\n\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\nconst { Option } = Select;\r\n\r\nconst Dumpnontech = () => {\r\n  const navigate=useNavigate();\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  const [dumpdata, setDumpdata] = useState([]);\r\n  const [teacherlist, setTeacherlist] = useState([]);\r\n  const [classlist, setClasslist] = useState([]);\r\n  const [labslist, setLabslist] = useState([]);\r\n  const [serverlist, setServerlist] = useState([]);\r\n  const [roomnames, setRoomnames] = useState({});\r\n  const [tabledata, setTabledata] = useState([]);\r\n  const [item, setItem] = useState(\"all\");\r\n  const [countvalue, setCountvalue] = useState();\r\n  const [deleteitem, setDeleteitem] = useState();\r\n  const[totalitems,setTotalitems]=useState([]);\r\n \r\n\r\n  useEffect(() => {\r\n    if (roles === \"admin\" || roles === \"editor\") {\r\n      localStorage.setItem(\"role\", roles);\r\n    }\r\n  }, [roles]);\r\n\r\n  useEffect(() => {\r\n    const savedRole = localStorage.getItem(\"role\");\r\n    if (savedRole && savedRole !== roles) {\r\n      dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const getalldumpdata = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tech/lab/getalldumpdata \", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setDumpdata(res.data.data);\r\n      } else {\r\n        message.error(res.data.messgae);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getalldumpdata();\r\n  }, []);\r\n\r\n  const getallteacher = async () => {\r\n    const res = await axios.get(\"/api/v1/tech/teacher/getallteacher\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    if (res.data.success) {\r\n      setTeacherlist(res.data.data);\r\n      message.success(\"all teachers get\");\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getallteacher();\r\n  }, []);\r\n\r\n  const getallclass = async () => {\r\n    const res = await axios.get(\"/api/v1/tech/getallclass\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    if (res.data.success) {\r\n      setClasslist(res.data.data);\r\n      message.success(\"all classes get\");\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getallclass();\r\n  }, []);\r\n  const getalllabs = async () => {\r\n    const res = await axios.get(\"/api/v1/tech/lab/getalllabs\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    if (res.data.success) {\r\n      setLabslist(res.data.data);\r\n      message.success(\"all labs get\");\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getalllabs();\r\n  }, []);\r\n  const getallserver = async () => {\r\n    const res = await axios.get(\"/api/v1/tech/server/getallserver\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    if (res.data.success) {\r\n      setServerlist(res.data.data);\r\n      message.success(\"all server get\");\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getallserver();\r\n  }, []);\r\n\r\n  const roomnamess = async () => {\r\n    const roomnames = {};\r\n\r\n    const alldumpdata = dumpdata;\r\n    for (let data of alldumpdata) {\r\n      roomnames[data._id] = await roomname(data.roomid, data.roomtype);\r\n    }\r\n    setRoomnames(roomnames);\r\n  };\r\n\r\n  const roomname = async (roomid, roomtype) => {\r\n    const teachers = teacherlist;\r\n    const labs = labslist;\r\n    const classes = classlist;\r\n    const server = serverlist;\r\n    if (roomtype === \"teacher\") {\r\n      for (let data of teachers) {\r\n        if (data._id === roomid) {\r\n          return data.teachername;\r\n        }\r\n      }\r\n    } else if (roomtype === \"class\") {\r\n      for (let data of classes) {\r\n        if (data._id === roomid) {\r\n          return data.classname;\r\n        }\r\n      }\r\n    } else if (roomtype === \"lab\") {\r\n      for (let data of labs) {\r\n        if (data._id === roomid) {\r\n          return data.labname;\r\n        }\r\n      }\r\n    } else if (roomtype === \"server\") {\r\n      for (let data of server) {\r\n        if (data._id === roomid) {\r\n          return data.roomname;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    roomnamess();\r\n  }, [dumpdata, teacherlist, classlist, labslist, serverlist]);\r\n\r\n  const handledelete = async (id) => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/lab/deleteonedumpdata\",\r\n        {\r\n          id,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let tabledatas;\r\n    if (item === \"all\") {\r\n      tabledatas = dumpdata;\r\n    } else if (item === \"other\") {\r\n      const excludeitem = [\r\n        \"whiteboard\",\r\n        \"marker\",\r\n        \"chalk\",\r\n        \"duster\",\r\n        \"notice_board\",\r\n        \"bookshelf\",\r\n        \"clock\",\r\n        \"chair\",\r\n        \"desk\",\r\n        \"pen_holder\",\r\n        \"paper_stack\",\r\n        \"file_cabinet\",\r\n        \"cupboard\",\r\n        \"curtains\",\r\n        \"trash_bin\",\r\n        \"water_bottle\",\r\n        \"notepad\",\r\n        \"globe\",\r\n        \"poster\",\r\n        \"calendar\",\r\n        \"plant\",\r\n        \"student_chair\",\r\n        \"bulletin_board\",\r\n        \"stapler\",\r\n        \"scissors\",\r\n        \"paperweight\",\r\n        \"nameplate\",\r\n        \"map\",\r\n        \"lamp\",\r\n        \"cup\",\r\n        \"rubber_band\",\r\n        \"folder\",\r\n        \"sticky_notes\",\r\n        \"paper_clips\",\r\n        \"first_aid_kit\",\r\n      ];\r\n      tabledatas = dumpdata.filter(\r\n        (data) => !excludeitem.includes(data.itemtype)\r\n      );\r\n    } else {\r\n      tabledatas = dumpdata.filter((data) => data.itemtype === item);\r\n    }\r\n    setTabledata(tabledatas);\r\n    setCountvalue(tabledatas.length);\r\n  }, [item, dumpdata]);\r\n\r\n  const itemchange = (value) => {\r\n    setItem(value);\r\n    //tabledata(item,labnums);\r\n  };\r\n\r\n   useEffect(()=>{\r\n    const allteachers=[...new Set(dumpdata.map(data=>data.itemtype))];\r\n    setTotalitems(allteachers);\r\n      },[dumpdata]);\r\n\r\n\r\n  const deleteitemchange = (value) => {\r\n    setDeleteitem(value);\r\n    //tabledata(item,labnums);\r\n  };\r\n\r\n  const deletedata = async () => {\r\n    try {\r\n         \r\n      const res = await axios.post(\r\n        \"/api/v1/tech/lab/deletedata\",\r\n        {\r\n          item: deleteitem,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          display: \"flex\",\r\n          fontSize: \"24px\",\r\n          fontFamily: \"bold\",\r\n        }}\r\n      >\r\n        <p>DUMP ROOM NON TECHNICAL</p>\r\n      </div>\r\n      <div\r\n        className=\"d-flex justify-content-center align-items-center gap-2\"\r\n        style={{ width: \"100%\" }}\r\n      >\r\n        <span>SELECT ITEM : </span>\r\n        <Select\r\n          placeholder=\"choose an item\"\r\n          onChange={itemchange}\r\n          style={{ width: \"150px\" }}\r\n        >\r\n          {[\r\n            \"all\",\r\n            \"other\",\r\n            \"whiteboard\",\r\n            \"marker\",\r\n            \"chalk\",\r\n            \"duster\",\r\n            \"notice_board\",\r\n            \"bookshelf\",\r\n            \"clock\",\r\n            \"chair\",\r\n            \"desk\",\r\n            \"pen_holder\",\r\n            \"paper_stack\",\r\n            \"file_cabinet\",\r\n            \"cupboard\",\r\n            \"curtains\",\r\n            \"trash_bin\",\r\n            \"water_bottle\",\r\n            \"notepad\",\r\n            \"globe\",\r\n            \"poster\",\r\n            \"calendar\",\r\n            \"plant\",\r\n            \"student_chair\",\r\n            \"bulletin_board\",\r\n            \"stapler\",\r\n            \"scissors\",\r\n            \"paperweight\",\r\n            \"nameplate\",\r\n            \"map\",\r\n            \"lamp\",\r\n            \"cup\",\r\n            \"rubber_band\",\r\n            \"folder\",\r\n            \"sticky_notes\",\r\n            \"paper_clips\",\r\n            \"first_aid_kit\",\r\n          ].map((data) => (\r\n            <Option value={data}>{data}</Option>\r\n          ))}\r\n        </Select>\r\n        <span>DELETE BY ITEM : </span>\r\n        <Select\r\n          placeholder=\"choose an item\"\r\n          onChange={deleteitemchange}\r\n          style={{ width: \"150px\" }}\r\n        >\r\n            <Option value=\"all\">All</Option>\r\n         {totalitems.map((data) => (\r\n            <Option value={data}>{data}</Option>\r\n          ))}\r\n        </Select>\r\n        \r\n        <button\r\n          style={{\r\n            borderRadius: \"10px\",\r\n            cursor: \"pointer\",\r\n            color: \"white\",\r\n            backgroundColor: \"red\",\r\n            padding: \"6px 8px\",\r\n          }}\r\n          onClick={()=>{if(window.confirm(\"are you sure to delete?\")){deletedata()}}}\r\n            \r\n            \r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n          position: \"relative\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <button\r\n          onClick={() => window.print()}\r\n          style={{\r\n            borderRadius: \"10px\",\r\n            cursor: \"pointer\",\r\n            color: \"white\",\r\n            backgroundColor: \"blue\",\r\n            padding: \" 6px 10px\",\r\n            border: \"none\",\r\n          }}\r\n        >\r\n          PRINT\r\n        </button>\r\n\r\n        <span\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"24px\",\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n          }}\r\n        >\r\n          Total Count:{countvalue}\r\n        </span>\r\n\r\n        <button\r\n          onClick={() =>{navigate(\"/purchaselist\")}}\r\n          style={{\r\n            borderRadius: \"10px\",\r\n            cursor: \"pointer\",\r\n            color: \"white\",\r\n            backgroundColor: \"green\",\r\n            padding: \" 6px 10px\",\r\n            border: \"none\",\r\n          }}\r\n        >\r\n          Generate Purchase List\r\n        </button>\r\n      </div>\r\n\r\n      <table\r\n        className=\"table\"\r\n        style={{\r\n          width: \"100%\",\r\n          borderCollapse: \"collapse\",\r\n          marginTop: \"10px\",\r\n        }}\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th\r\n              style={{\r\n                border: \"2px solid black\",\r\n                textAlign: \"center\",\r\n                padding: \"10px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              Item Type\r\n            </th>\r\n            <th\r\n              style={{\r\n                border: \"2px solid black\",\r\n                textAlign: \"center\",\r\n                padding: \"10px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              Unique Id\r\n            </th>\r\n            <th\r\n              style={{\r\n                border: \"2px solid black\",\r\n                textAlign: \"center\",\r\n                padding: \"10px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              Room Name\r\n            </th>\r\n            <th\r\n              style={{\r\n                border: \"2px solid black\",\r\n                textAlign: \"center\",\r\n                padding: \"10px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              DE-Installation Date\r\n            </th>\r\n            <th\r\n              style={{\r\n                border: \"2px solid black\",\r\n                textAlign: \"center\",\r\n                padding: \"10px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              Description\r\n            </th>\r\n            <th\r\n              style={{\r\n                border: \"2px solid black\",\r\n                textAlign: \"center\",\r\n                padding: \"10px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              Actions\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tabledata &&\r\n            tabledata.map((data) => (\r\n              <tr key={data._id}>\r\n                <td\r\n                  style={{\r\n                    border: \"2px solid black\",\r\n                    textAlign: \"center\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <b>{data.itemtype}</b>\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    border: \"2px solid black\",\r\n                    textAlign: \"center\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <b>{data.uid}</b>\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    border: \"2px solid black\",\r\n                    textAlign: \"center\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <b>{roomnames[data._id]}</b>\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    border: \"2px solid black\",\r\n                    textAlign: \"center\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  {data.deinstallationdate\r\n                    ? new Date(data.deinstallationdate).toLocaleDateString()\r\n                    : \"N/A\"}\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    border: \"2px solid black\",\r\n                    textAlign: \"center\",\r\n\r\n                    width: \"350px\",\r\n                  }}\r\n                >\r\n                  <div style={{ maxHeight: \"150px\", overflowY: \"auto\" }}>\r\n                    {data.description || \"N/A\"}\r\n                  </div>\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    border: \"2px solid black\",\r\n                    textAlign: \"center\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <i\r\n                    className=\"fa-solid fa-trash icon\"\r\n                    style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                    onClick={() => {\r\n                      if (window.confirm(\"Do you want to delete?\")) {\r\n                        handledelete(data._id);\r\n                      }\r\n                    }}\r\n                  ></i>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dumpnontech;\r\n","import React, { useEffect, useState,useRef } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { Form, Input, Row, Col, message, Select, DatePicker } from \"antd\";\r\n\r\nimport \"../styles/Newtechpagestyles.css\";\r\n\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../redux/features/roleslice\";\r\nconst { Option } = Select;\r\n\r\nconst Purchaselist = () => {\r\n     const roles = useSelector((State) => State.role.role);\r\n      const dispatch = useDispatch();\r\nconst [purchasedata,setPurchasedata]=useState([]);\r\nconst[edititem,setEdititem]=useState(null);\r\nconst[deletecount,setDeletecount]=useState(0);\r\n \r\n\r\n        useEffect(() => {\r\n          if (roles === \"admin\" || roles === \"editor\") {\r\n            localStorage.setItem(\"role\", roles);\r\n          }\r\n        }, [roles]);\r\n      \r\n        useEffect(() => {\r\n          const savedRole = localStorage.getItem(\"role\");\r\n          if (savedRole && savedRole !== roles) {\r\n            dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n          }\r\n        }, [dispatch]);\r\n\r\n        const getallpurchasedata = async () => {\r\n            try {\r\n              const res = await axios.get(\"/api/v1/tech/lab/getallpurchasedata \", {\r\n                headers: {\r\n                  Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n              });\r\n              if (res.data.success) {\r\n                message.success(res.data.message);\r\n                setPurchasedata(res.data.data);\r\n              } else {\r\n                message.error(res.data.messgae);\r\n              }\r\n            } catch (error) {\r\n              console.log(error);\r\n              message.error(\"something went wrong\");\r\n            }\r\n          };\r\n          useEffect(() => {\r\n            getallpurchasedata();\r\n          }, []);\r\n\r\n          const handledelete=async(item)=>{\r\n            try{\r\n                const res=await axios.post(\"/api/v1/tech/lab/deletepurchase\",{\r\n                    item\r\n                },{\r\n                    headers: {\r\n                        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                      },\r\n                });\r\n\r\n                if (res.data.success) {\r\n                    message.success(res.data.message);\r\n                     window.location.reload();\r\n                  } else {\r\n                    message.error(res.data.messgae);\r\n                  }\r\n\r\n            }catch(error){\r\n                console.log(error);\r\n              message.error(\"something went wrong\");\r\n            }\r\n          };\r\n\r\n          const handlepartialdelete=async(item)=>{\r\n            try{\r\n                const res=await axios.post(\"/api/v1/tech/lab/deletepartial\",{\r\n                    item:item,\r\n                    count:deletecount\r\n                },{\r\n                    headers: {\r\n                        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                      },\r\n                });\r\n\r\n                if (res.data.success) {\r\n                    message.success(res.data.message);\r\n                    let data=purchasedata.map((item)=>\r\n                      item._id===edititem?{...item,count:item.count-deletecount}:item\r\n                    ).filter(item=>item.count>0);\r\n                    setPurchasedata(data);\r\n                    setDeletecount(0);\r\n                    setEdititem(null);\r\n                    // window.location.reload();\r\n                  } else {\r\n                    message.error(res.data.messgae);\r\n                  }\r\n\r\n            }catch(error){\r\n                console.log(error);\r\n              message.error(\"choose loweer value\");\r\n              window.location.reload();\r\n            }\r\n          };\r\n\r\n\r\n          const deletelist=async()=>{\r\n            try{\r\n              const res=await axios.post(\"/api/v1/tech/lab/deletelist\",{},\r\n              {\r\n                  headers: {\r\n                      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n              });\r\n\r\n              if (res.data.success) {\r\n                  message.success(res.data.message);\r\n                   window.location.reload();\r\n                } else {\r\n                  message.error(res.data.messgae);\r\n                }\r\n\r\n          }catch(error){\r\n              console.log(error);\r\n            message.error(\"something went wrong\");\r\n          }\r\n          };\r\n \r\n  const changevalue=async()=>{\r\n    setDeletecount(0);\r\n    setEdititem(null);\r\n    }\r\n\r\n  return (\r\n    <Layout>\r\n        <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'34px',fontFamily:'bold'}}><p>PURCHASE SUMMARY NON TECHNICAL </p></div>\r\n       <div style={{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",}}>\r\n\r\n       <button\r\n          onClick={() => window.print()}\r\n          style={{\r\n            borderRadius: \"10px\",\r\n            cursor: \"pointer\",\r\n            color: \"white\",\r\n            backgroundColor: \"blue\",\r\n            padding: \" 6px 10px\",\r\n            border: \"none\",\r\n          }}\r\n        >\r\n          PRINT\r\n        </button>\r\n\r\n        <span style={{fontSize:\"20px\"}}> Date:{new Date().toLocaleDateString()}</span>\r\n\r\n        <button\r\n          onClick={()=>{if(window.confirm(\"are you sure to delete entire list\")){deletelist()}}}\r\n          style={{\r\n            borderRadius: \"10px\",\r\n            cursor: \"pointer\",\r\n            color: \"#FFFFFF\",\r\n            backgroundColor: \"#FF6347\",\r\n            padding: \" 6px 10px\",\r\n            border: \"none\",\r\n          }}\r\n        >\r\n        DELETE LIST\r\n        </button>\r\n\r\n      \r\n       </div>\r\n       \r\n\r\n       <div>\r\n \r\n      <table border=\"1\"\r\n       className=\"table\"\r\n       style={{\r\n         width: \"100%\",\r\n         borderCollapse: \"collapse\",\r\n         marginTop: \"10px\",\r\n       }}>\r\n        <thead>\r\n          <tr>\r\n            <th>ITEM</th>\r\n            <th> QUANTITY</th>\r\n            <th>ACTION</th> {/* New column for delete button */}\r\n          </tr>\r\n        </thead>\r\n        <tbody >\r\n           \r\n            {purchasedata.length>0 ? purchasedata.map((item) => (\r\n              <tr key={item._id}>\r\n                <td>{item._id}</td>\r\n                <td>{item.count}</td>\r\n                <td >\r\n                  <button\r\n                    onClick={()=>{\r\n                        if(window.confirm(\"are you sure\")){\r\n                            handledelete(item._id)}\r\n                        }\r\n                      \r\n                    }\r\n                    style={{\r\n                      background: \"none\",\r\n                      border: \"none\",\r\n                      cursor: \"pointer\",\r\n                      fontSize: \"18px\",\r\n                    }}\r\n                  >\r\n                    ❌\r\n                  </button>\r\n\r\n                  <button\r\n                    onClick={() => setEdititem(item._id)}\r\n                    style={{ background: \"none\", border: \"none\", cursor: \"pointer\", fontSize: \"18px\", marginLeft: \"10px\" }}\r\n                  >\r\n                    ✏️\r\n                  </button>\r\n                  {edititem===item._id && (\r\n                    <div style={{display:\"flex\",alignItems:\"center\",gap:\"10px\" }}  >\r\n                      <input type=\"number\" min={1} max={item.count} value={deletecount} onChange={(e)=>setDeletecount(Number(e.target.value))}/>\r\n                      <button onClick={()=>{handlepartialdelete(item._id)}} style={{border:\"none\",borderRadius:\"5px\",color:\"white\",backgroundColor:\"green\",cursor:\"pointer\",padding:\"5px 6px\"}}>REDUCE</button> \r\n                      <button onClick={changevalue}  style={{border:\"none\",borderRadius:\"5px\",color:\"#D3D3D3\",backgroundColor:\"#F8F8FF\",cursor:\"pointer\",padding:\"5px 6px\"}}>HIDE</button> \r\n                    </div>\r\n                  \r\n                  )}\r\n                </td>\r\n              </tr>\r\n            \r\n          )\r\n          ):( \r\n            <tr>\r\n                <td colSpan={3} style={{textAlign:\"center\",fontWeight:\"bold\"}}>No Data Available</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Purchaselist\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Form, Input, Row, Col, message, Select, DatePicker } from \"antd\";\r\n\r\nimport \"../../styles/Newtechpagestyles.css\";\r\n\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../../redux/features/roleslice\";\r\nconst { Option } = Select;\r\n\r\nconst Dumptech = () => {\r\n  const navigate=useNavigate();\r\n  const roles = useSelector((State) => State.role.role);\r\n  const dispatch = useDispatch();\r\n  const [dumpdata, setDumpdata] = useState([]);\r\n  const [teacherlist, setTeacherlist] = useState([]);\r\n  const [classlist, setClasslist] = useState([]);\r\n  const [labslist, setLabslist] = useState([]);\r\n  const [serverlist, setServerlist] = useState([]);\r\n  const [roomnames, setRoomnames] = useState({});\r\n  const [tabledata, setTabledata] = useState([]);\r\n  const [item, setItem] = useState(\"all\");\r\n  const [countvalue, setCountvalue] = useState();\r\n  const [deleteitem, setDeleteitem] = useState();\r\n  const[totalitems,setTotalitems]=useState([]);\r\n \r\n\r\n  useEffect(() => {\r\n    if (roles === \"admin\" || roles === \"editor\") {\r\n      localStorage.setItem(\"role\", roles);\r\n    }\r\n  }, [roles]);\r\n\r\n  useEffect(() => {\r\n    const savedRole = localStorage.getItem(\"role\");\r\n    if (savedRole && savedRole !== roles) {\r\n      dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const getalldumpdata = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/v1/tech/lab/getalldumpdatatech \", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        setDumpdata(res.data.data);\r\n      } else {\r\n        message.error(res.data.messgae);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getalldumpdata();\r\n  }, []);\r\n\r\n  const getallteacher = async () => {\r\n    const res = await axios.get(\"/api/v1/tech/teacher/getallteacher\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    if (res.data.success) {\r\n      setTeacherlist(res.data.data);\r\n      message.success(\"all teachers get\");\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getallteacher();\r\n  }, []);\r\n\r\n  const getallclass = async () => {\r\n    const res = await axios.get(\"/api/v1/tech/getallclass\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    if (res.data.success) {\r\n      setClasslist(res.data.data);\r\n      message.success(\"all classes get\");\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getallclass();\r\n  }, []);\r\n  const getalllabs = async () => {\r\n    const res = await axios.get(\"/api/v1/tech/lab/getalllabs\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    if (res.data.success) {\r\n      setLabslist(res.data.data);\r\n      message.success(\"all labs get\");\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getalllabs();\r\n  }, []);\r\n  const getallserver = async () => {\r\n    const res = await axios.get(\"/api/v1/tech/server/getallserver\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    });\r\n\r\n    if (res.data.success) {\r\n      setServerlist(res.data.data);\r\n      message.success(\"all server get\");\r\n    } else {\r\n      message.error(res.data.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getallserver();\r\n  }, []);\r\n\r\n  const roomnamess = async () => {\r\n    const roomnames = {};\r\n\r\n    const alldumpdata = dumpdata;\r\n    for (let data of alldumpdata) {\r\n      roomnames[data._id] = await roomname(data.roomid, data.roomtype);\r\n    }\r\n    setRoomnames(roomnames);\r\n  };\r\n\r\n  const roomname = async (roomid, roomtype) => {\r\n    const teachers = teacherlist;\r\n    const labs = labslist;\r\n    const classes = classlist;\r\n    const server = serverlist;\r\n    if (roomtype === \"teacher\") {\r\n      for (let data of teachers) {\r\n        if (data._id === roomid) {\r\n          return data.teachername;\r\n        }\r\n      }\r\n    } else if (roomtype === \"class\") {\r\n      for (let data of classes) {\r\n        if (data._id === roomid) {\r\n          return data.classname;\r\n        }\r\n      }\r\n    } else if (roomtype === \"lab\") {\r\n      for (let data of labs) {\r\n        if (data._id === roomid) {\r\n          return data.labname;\r\n        }\r\n      }\r\n    } else if (roomtype === \"server\") {\r\n      for (let data of server) {\r\n        if (data._id === roomid) {\r\n          return data.roomname;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    roomnamess();\r\n  }, [dumpdata, teacherlist, classlist, labslist, serverlist]);\r\n\r\n  const handledelete = async (id) => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"/api/v1/tech/lab/deleteonedumpdatatech\",\r\n        {\r\n          id,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let tabledatas;\r\n    if (item === \"all\") {\r\n      tabledatas = dumpdata;\r\n    } else if (item === \"other\") {\r\n      const excludeitem = [\r\n        \"projector\", \"printer\", \"speaker\", \"microphone\", \"smartboard\", \r\n  \"desktop\", \"server\", \"laptop\", \"networkSwitches\", \"routers\", \r\n  \"firewalls\", \"ups\", \"coolingSystems\", \"patchPanels\", \"cableManagement\", \r\n  \"storageArrays\", \"kvmSwitch\", \"serverRacks\", \"securityCameras\", \r\n  \"accessControl\", \"environmentalMonitoring\", \"backupSystems\", \r\n  \"fireSuppression\", \"remoteManagement\", \"pdus\", \"patchCables\", \r\n  \"monitoringSoftware\", \"interactive-whiteboard\", \"scanner\", \"router\", \r\n  \"switch\", \"tablet\", \"smartphone\", \"external-hard-drive\", \"usb-device\", \r\n  \"camera\", \"document-camera\", \"monitor\", \"headphones\", \"webcam\", \r\n  \"vr-headset\", \"coding-kits\", \"drone\", \"3d-printer\", \"arduino-kits\", \r\n  \"raspberry-pi\", \"network-tools\"\r\n      ];\r\n      tabledatas = dumpdata.filter(\r\n        (data) => !excludeitem.includes(data.itemtype)\r\n      );\r\n    } else {\r\n      tabledatas = dumpdata.filter((data) => data.itemtype === item);\r\n    }\r\n    setTabledata(tabledatas);\r\n    setCountvalue(tabledatas.length);\r\n  }, [item, dumpdata]);\r\n\r\n  const itemchange = (value) => {\r\n    setItem(value);\r\n    //tabledata(item,labnums);\r\n  };\r\n\r\n   useEffect(()=>{\r\n    const allteachers=[...new Set(dumpdata.map(data=>data.itemtype))];\r\n    setTotalitems(allteachers);\r\n      },[dumpdata]);\r\n\r\n\r\n  const deleteitemchange = (value) => {\r\n    setDeleteitem(value);\r\n    //tabledata(item,labnums);\r\n  };\r\n\r\n  const deletedata = async () => {\r\n    try {\r\n         \r\n      const res = await axios.post(\r\n        \"/api/v1/tech/lab/deletedatatech\",\r\n        {\r\n          item: deleteitem,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (res.data.success) {\r\n        message.success(res.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      message.error(\"something went wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <div\r\n        style={{\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          display: \"flex\",\r\n          fontSize: \"24px\",\r\n          fontFamily: \"bold\",\r\n        }}\r\n      >\r\n        <p>DUMP ROOM TECHNICAL</p>\r\n      </div>\r\n      <div\r\n        className=\"d-flex justify-content-center align-items-center gap-2\"\r\n        style={{ width: \"100%\" }}\r\n      >\r\n        <span>SELECT ITEM : </span>\r\n        <Select\r\n          placeholder=\"choose an item\"\r\n          onChange={itemchange}\r\n          style={{ width: \"150px\" }}\r\n        >\r\n          {[\r\n            \"all\",\r\n            \"other\",\r\n            \"projector\", \"printer\", \"speaker\", \"microphone\", \"smartboard\", \r\n            \"desktop\", \"server\", \"laptop\", \"networkSwitches\", \"routers\", \r\n            \"firewalls\", \"ups\", \"coolingSystems\", \"patchPanels\", \"cableManagement\", \r\n            \"storageArrays\", \"kvmSwitch\", \"serverRacks\", \"securityCameras\", \r\n            \"accessControl\", \"environmentalMonitoring\", \"backupSystems\", \r\n            \"fireSuppression\", \"remoteManagement\", \"pdus\", \"patchCables\", \r\n            \"monitoringSoftware\", \"interactive-whiteboard\", \"scanner\", \"router\", \r\n            \"switch\", \"tablet\", \"smartphone\", \"external-hard-drive\", \"usb-device\", \r\n            \"camera\", \"document-camera\", \"monitor\", \"headphones\", \"webcam\", \r\n            \"vr-headset\", \"coding-kits\", \"drone\", \"3d-printer\", \"arduino-kits\", \r\n            \"raspberry-pi\", \"network-tools\"\r\n          ].map((data) => (\r\n            <Option value={data}>{data}</Option>\r\n          ))}\r\n        </Select>\r\n        <span>DELETE BY ITEM : </span>\r\n        <Select\r\n          placeholder=\"choose an item\"\r\n          onChange={deleteitemchange}\r\n          style={{ width: \"150px\" }}\r\n        >\r\n            <Option value=\"all\">All</Option>\r\n         {totalitems.map((data) => (\r\n            <Option value={data}>{data}</Option>\r\n          ))}\r\n        </Select>\r\n        \r\n        <button\r\n          style={{\r\n            borderRadius: \"10px\",\r\n            cursor: \"pointer\",\r\n            color: \"white\",\r\n            backgroundColor: \"red\",\r\n            padding: \"6px 8px\",\r\n          }}\r\n          onClick={()=>{if(window.confirm(\"are you sure to delete?\")){deletedata()}}}\r\n            \r\n            \r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n          position: \"relative\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <button\r\n          onClick={() => window.print()}\r\n          style={{\r\n            borderRadius: \"10px\",\r\n            cursor: \"pointer\",\r\n            color: \"white\",\r\n            backgroundColor: \"blue\",\r\n            padding: \" 6px 10px\",\r\n            border: \"none\",\r\n          }}\r\n        >\r\n          PRINT\r\n        </button>\r\n\r\n        <span\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"24px\",\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n          }}\r\n        >\r\n          Total Count:{countvalue}\r\n        </span>\r\n\r\n        <button\r\n          onClick={() =>{navigate(\"/purchaselisttech\")}}\r\n          style={{\r\n            borderRadius: \"10px\",\r\n            cursor: \"pointer\",\r\n            color: \"white\",\r\n            backgroundColor: \"green\",\r\n            padding: \" 6px 10px\",\r\n            border: \"none\",\r\n          }}\r\n        >\r\n          Generate Purchase List\r\n        </button>\r\n      </div>\r\n\r\n      <table\r\n        className=\"table\"\r\n        style={{\r\n          width: \"100%\",\r\n          borderCollapse: \"collapse\",\r\n          marginTop: \"10px\",\r\n        }}\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th\r\n              style={{\r\n                border: \"2px solid black\",\r\n                textAlign: \"center\",\r\n                padding: \"10px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              Item Type\r\n            </th>\r\n            \r\n            <th\r\n              style={{\r\n                border: \"2px solid black\",\r\n                textAlign: \"center\",\r\n                padding: \"10px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              Room Name\r\n            </th>\r\n            <th\r\n              style={{\r\n                border: \"2px solid black\",\r\n                textAlign: \"center\",\r\n                padding: \"10px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              DE-Installation Date\r\n            </th>\r\n            <th\r\n              style={{\r\n                border: \"2px solid black\",\r\n                textAlign: \"center\",\r\n                padding: \"10px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              Description\r\n            </th>\r\n            <th\r\n              style={{\r\n                border: \"2px solid black\",\r\n                textAlign: \"center\",\r\n                padding: \"10px\",\r\n                color: \"red\",\r\n              }}\r\n            >\r\n              Actions\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tabledata &&\r\n            tabledata.map((data) => (\r\n              <tr key={data._id}>\r\n                <td\r\n                  style={{\r\n                    border: \"2px solid black\",\r\n                    textAlign: \"center\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <b>{data.itemtype}</b>\r\n                </td>\r\n                 \r\n                <td\r\n                  style={{\r\n                    border: \"2px solid black\",\r\n                    textAlign: \"center\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <b>{roomnames[data._id]}</b>\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    border: \"2px solid black\",\r\n                    textAlign: \"center\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  {data.deinstallationdate\r\n                    ? new Date(data.deinstallationdate).toLocaleDateString()\r\n                    : \"N/A\"}\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    border: \"2px solid black\",\r\n                    textAlign: \"center\",\r\n\r\n                    width: \"350px\",\r\n                  }}\r\n                >\r\n                  <div style={{ maxHeight: \"150px\", overflowY: \"auto\" }}>\r\n                    {data.description || \"N/A\"}\r\n                  </div>\r\n                </td>\r\n                <td\r\n                  style={{\r\n                    border: \"2px solid black\",\r\n                    textAlign: \"center\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                >\r\n                  <i\r\n                    className=\"fa-solid fa-trash icon\"\r\n                    style={{ cursor: \"pointer\", margin: \"10px\" }}\r\n                    onClick={() => {\r\n                      if (window.confirm(\"Do you want to delete?\")) {\r\n                        handledelete(data._id);\r\n                      }\r\n                    }}\r\n                  ></i>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dumptech;\r\n","import React, { useEffect, useState,useRef } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { Form, Input, Row, Col, message, Select, DatePicker } from \"antd\";\r\n\r\nimport \"../styles/Newtechpagestyles.css\";\r\n\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setRole } from \"../redux/features/roleslice\";\r\nconst { Option } = Select;\r\n\r\nconst Purchasetechlist = () => {\r\n     const roles = useSelector((State) => State.role.role);\r\n      const dispatch = useDispatch();\r\nconst [purchasedata,setPurchasedata]=useState([]);\r\nconst[edititem,setEdititem]=useState(null);\r\nconst[deletecount,setDeletecount]=useState(0);\r\n \r\n\r\n        useEffect(() => {\r\n          if (roles === \"admin\" || roles === \"editor\") {\r\n            localStorage.setItem(\"role\", roles);\r\n          }\r\n        }, [roles]);\r\n      \r\n        useEffect(() => {\r\n          const savedRole = localStorage.getItem(\"role\");\r\n          if (savedRole && savedRole !== roles) {\r\n            dispatch(setRole(savedRole)); // Sync Redux with localStorage\r\n          }\r\n        }, [dispatch]);\r\n\r\n        const getallpurchasedata = async () => {\r\n            try {\r\n              const res = await axios.get(\"/api/v1/tech/lab/getallpurchasedatatech \", {\r\n                headers: {\r\n                  Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                },\r\n              });\r\n              if (res.data.success) {\r\n                message.success(res.data.message);\r\n                setPurchasedata(res.data.data);\r\n              } else {\r\n                message.error(res.data.messgae);\r\n              }\r\n            } catch (error) {\r\n              console.log(error);\r\n              message.error(\"something went wrong\");\r\n            }\r\n          };\r\n          useEffect(() => {\r\n            getallpurchasedata();\r\n          }, []);\r\n\r\n          const handledelete=async(item)=>{\r\n            try{\r\n                const res=await axios.post(\"/api/v1/tech/lab/deletepurchasetech\",{\r\n                    item\r\n                },{\r\n                    headers: {\r\n                        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                      },\r\n                });\r\n\r\n                if (res.data.success) {\r\n                    message.success(res.data.message);\r\n                     window.location.reload();\r\n                  } else {\r\n                    message.error(res.data.messgae);\r\n                  }\r\n\r\n            }catch(error){\r\n                console.log(error);\r\n              message.error(\"something went wrong\");\r\n            }\r\n          };\r\n\r\n          const handlepartialdelete=async(item)=>{\r\n            try{\r\n                const res=await axios.post(\"/api/v1/tech/lab/deletepartialtech\",{\r\n                    item:item,\r\n                    count:deletecount\r\n                },{\r\n                    headers: {\r\n                        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                      },\r\n                });\r\n\r\n                if (res.data.success) {\r\n                    message.success(res.data.message);\r\n                    let data=purchasedata.map((item)=>\r\n                      item._id===edititem?{...item,count:item.count-deletecount}:item\r\n                    ).filter(item=>item.count>0);\r\n                    setPurchasedata(data);\r\n                    setDeletecount(0);\r\n                    setEdititem(null);\r\n                    // window.location.reload();\r\n                  } else {\r\n                    message.error(res.data.messgae);\r\n                  }\r\n\r\n            }catch(error){\r\n                console.log(error);\r\n              message.error(\"choose loweer value\");\r\n              window.location.reload();\r\n            }\r\n          };\r\n\r\n\r\n          const deletelist=async()=>{\r\n            try{\r\n              const res=await axios.post(\"/api/v1/tech/lab/deletelisttech\",{},\r\n              {\r\n                  headers: {\r\n                      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n              });\r\n\r\n              if (res.data.success) {\r\n                  message.success(res.data.message);\r\n                   window.location.reload();\r\n                } else {\r\n                  message.error(res.data.messgae);\r\n                }\r\n\r\n          }catch(error){\r\n              console.log(error);\r\n            message.error(\"something went wrong\");\r\n          }\r\n          };\r\n \r\n  const changevalue=async()=>{\r\n    setDeletecount(0);\r\n    setEdititem(null);\r\n    }\r\n\r\n  return (\r\n    <Layout>\r\n        <div style={{alignItems:'center',justifyContent:'center',display:'flex',fontSize:'34px',fontFamily:'bold'}}><p>PURCHASE SUMMARY TECHNICAL </p></div>\r\n       <div style={{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",}}>\r\n\r\n       <button\r\n          onClick={() => window.print()}\r\n          style={{\r\n            borderRadius: \"10px\",\r\n            cursor: \"pointer\",\r\n            color: \"white\",\r\n            backgroundColor: \"blue\",\r\n            padding: \" 6px 10px\",\r\n            border: \"none\",\r\n          }}\r\n        >\r\n          PRINT\r\n        </button>\r\n\r\n        <span style={{fontSize:\"20px\"}}> Date:{new Date().toLocaleDateString()}</span>\r\n\r\n        <button\r\n          onClick={()=>{if(window.confirm(\"are you sure to delete entire list\")){deletelist()}}}\r\n          style={{\r\n            borderRadius: \"10px\",\r\n            cursor: \"pointer\",\r\n            color: \"#FFFFFF\",\r\n            backgroundColor: \"#FF6347\",\r\n            padding: \" 6px 10px\",\r\n            border: \"none\",\r\n          }}\r\n        >\r\n        DELETE LIST\r\n        </button>\r\n\r\n      \r\n       </div>\r\n       \r\n\r\n       <div>\r\n \r\n      <table border=\"1\"\r\n       className=\"table\"\r\n       style={{\r\n         width: \"100%\",\r\n         borderCollapse: \"collapse\",\r\n         marginTop: \"10px\",\r\n       }}>\r\n        <thead>\r\n          <tr>\r\n            <th>ITEM</th>\r\n            <th> QUANTITY</th>\r\n            <th>ACTION</th> {/* New column for delete button */}\r\n          </tr>\r\n        </thead>\r\n        <tbody >\r\n           \r\n            {purchasedata.length>0 ? purchasedata.map((item) => (\r\n              <tr key={item._id}>\r\n                <td>{item._id}</td>\r\n                <td>{item.count}</td>\r\n                <td >\r\n                  <button\r\n                    onClick={()=>{\r\n                        if(window.confirm(\"are you sure\")){\r\n                            handledelete(item._id)}\r\n                        }\r\n                      \r\n                    }\r\n                    style={{\r\n                      background: \"none\",\r\n                      border: \"none\",\r\n                      cursor: \"pointer\",\r\n                      fontSize: \"18px\",\r\n                    }}\r\n                  >\r\n                    ❌\r\n                  </button>\r\n\r\n                  <button\r\n                    onClick={() => setEdititem(item._id)}\r\n                    style={{ background: \"none\", border: \"none\", cursor: \"pointer\", fontSize: \"18px\", marginLeft: \"10px\" }}\r\n                  >\r\n                    ✏️\r\n                  </button>\r\n                  {edititem===item._id && (\r\n                    <div style={{display:\"flex\",alignItems:\"center\",gap:\"10px\" }}  >\r\n                      <input type=\"number\" min={1} max={item.count} value={deletecount} onChange={(e)=>setDeletecount(Number(e.target.value))}/>\r\n                      <button onClick={()=>{handlepartialdelete(item._id)}} style={{border:\"none\",borderRadius:\"5px\",color:\"white\",backgroundColor:\"green\",cursor:\"pointer\",padding:\"5px 6px\"}}>REDUCE</button> \r\n                      <button onClick={changevalue}  style={{border:\"none\",borderRadius:\"5px\",color:\"#D3D3D3\",backgroundColor:\"#F8F8FF\",cursor:\"pointer\",padding:\"5px 6px\"}}>HIDE</button> \r\n                    </div>\r\n                  \r\n                  )}\r\n                </td>\r\n              </tr>\r\n            \r\n          )\r\n          ):( \r\n            <tr>\r\n                <td colSpan={3} style={{textAlign:\"center\",fontWeight:\"bold\"}}>No Data Available</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Purchasetechlist\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Homepage from \"./pages/Homepage\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport { ProtectedRoute } from \"./components/ProtectedRoute\";\nimport { PublicRoute } from \"./components/PublicRoute\";\nimport Techpage from \"./pages/techpage/Techpage\";\nimport Classpage from \"./pages/techpage/Classpage\";\nimport Classedit from \"./pages/techpage/Classedit\";\nimport { useSelector } from \"react-redux\";\nimport Spinner from \"./components/Spinner\";\nimport Classdetail from \"./pages/techpage/Classdetail\";\nimport Classdetailedit from \"./pages/techpage/Classdetailedit\";\nimport Labpage from \"./pages/techpage/Labpage\";\nimport Labedit from \"./pages/techpage/Labedit\";\nimport Labdetail from \"./pages/techpage/Labdetail\";\nimport Summary from \"./pages/Summary\";\nimport Labdetailedit from \"./pages/techpage/Labdetailedit\";\nimport Techsum from \"./pages/summary/Techsum\";\nimport Labsum from \"./pages/summary/Labsum\";\nimport Teacherpage from \"./pages/techpage/Teacherpage\";\nimport Teacheredit from \"./pages/techpage/Teacheredit\";\nimport Teacherdetail from \"./pages/techpage/Teacherdetail\";\nimport Teacherdetailedit from \"./pages/techpage/Teacherdetailedit\";\nimport Serverpage from \"./pages/techpage/Serverpage\";\nimport Serveredit from \"./pages/techpage/Serveredit\";\nimport Serverdetail from \"./pages/techpage/Serverdetail\";\nimport Serverdetailedit from \"./pages/techpage/Serverdetailedit\";\nimport Classsum from \"./pages/summary/Classsum\";\nimport Teachersum from \"./pages/summary/Teachersum\";\nimport Serversum from \"./pages/summary/Serversum\";\nimport Nontechpage from \"./pages/nontech/Nontechpage\";\nimport Teacherpage_non from \"./pages/nontech/Teacherpage_non\";\nimport Teachereditnon from \"./pages/nontech/Teachereditnon\";\nimport Teacherdetailsnon from \"./pages/nontech/Teacherdetailsnon\";\nimport Teacherdetaileditnon from \"./pages/nontech/Teacherdetaileditnon\";\nimport Classpage_non from \"./pages/nontech/Classpage_non\";\nimport Classeditnon from \"./pages/nontech/Classeditnon\";\nimport Classdetailsnon from \"./pages/nontech/Classdetailsnon\";\nimport Classdetaileditnon from \"./pages/nontech/Classdetaileditnon\";\nimport Labpage_non from \"./pages/nontech/Labpage_non\";\nimport Labeditnon from \"./pages/nontech/Labeditnon\";\nimport Labdetailsnon from \"./pages/nontech/Labdetailsnon\";\nimport Labdetaileditnon from \"./pages/nontech/Labdetaileditnon\";\nimport Serverpage_non from \"./pages/nontech/Serverpage_non\";\nimport Servereditnon from \"./pages/nontech/Servereditnon\";\nimport Serverdetailnon from \"./pages/nontech/Serverdetailnon\";\nimport Serverrdetaileditnon from \"./pages/nontech/Serverdetaileditnon\";\nimport Nontechsum from \"./pages/summary/Nontechsum\";\nimport Teachersumnon from \"./pages/summary/Teachersumnon\";\nimport Classsumnon from \"./pages/summary/Classsumnon\";\nimport Labsumnon from \"./pages/summary/Labsumnon\";\nimport Serversumnon from \"./pages/summary/Serversumnon\";\nimport Userlist from \"./pages/Userlist\";\nimport Dumpnontech from \"./pages/nontech/Dumpnontech\";\nimport Purchaselist from \"./pages/Purchaselist\";\nimport Dumptech from \"./pages/techpage/Dumptech\";\nimport Purchasetechlist from \"./pages/Purchasetechlist\";\n \n\nfunction App() {\n  const { loading } = useSelector((state) => state.alerts);\n\n  return (\n    <>\n      <BrowserRouter>\n        {loading ? (\n          <Spinner />\n        ) : (\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <ProtectedRoute>\n                  <Homepage />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/login\"\n              element={\n                <PublicRoute>\n                  <Login />\n                </PublicRoute>\n              }\n            />\n            <Route\n              path=\"/register\"\n              element={\n                <PublicRoute>\n                  <Register />\n                </PublicRoute>\n              }\n            />\n            <Route\n              path=\"/tech\"\n              element={\n                <ProtectedRoute>\n                  <Techpage />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/class\"\n              element={\n                <ProtectedRoute>\n                  <Classpage />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/classedit/:classid\"\n              element={\n                <ProtectedRoute>\n                  <Classedit />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/classeditnon/:classid\"\n              element={\n                <ProtectedRoute>\n                  <Classeditnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/classdetails/:classid\"\n              element={\n                <ProtectedRoute>\n                  <Classdetail />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/classdetailsnon/:classid\"\n              element={\n                <ProtectedRoute>\n                  <Classdetailsnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/classdetailedit/:classdetailid\"\n              element={\n                <ProtectedRoute>\n                  <Classdetailedit />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/classdetaileditnon/:classdetailid\"\n              element={\n                <ProtectedRoute>\n                  <Classdetaileditnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/lab\"\n              element={\n                <ProtectedRoute>\n                  <Labpage />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/labn\"\n              element={\n                <ProtectedRoute>\n                  <Labpage_non />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/labedit/:labid\"\n              element={\n                <ProtectedRoute>\n                  <Labedit />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/labeditnon/:labid\"\n              element={\n                <ProtectedRoute>\n                  <Labeditnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/labdetails/:labid\"\n              element={\n                <ProtectedRoute>\n                  <Labdetail />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/labdetailsnon/:labid\"\n              element={\n                <ProtectedRoute>\n                  <Labdetailsnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/summary\"\n              element={\n                <ProtectedRoute>\n                  <Summary />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/labdetailedit/:labdetailid\"\n              element={\n                <ProtectedRoute>\n                  <Labdetailedit />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/labdetaileditnon/:labdetailid\"\n              element={\n                <ProtectedRoute>\n                  <Labdetaileditnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/techsum\"\n              element={\n                <ProtectedRoute>\n                  <Techsum />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/labsum\"\n              element={\n                <ProtectedRoute>\n                  <Labsum />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/teacher\"\n              element={\n                <ProtectedRoute>\n                  <Teacherpage />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/teacheredit/:teacherid\"\n              element={\n                <ProtectedRoute>\n                  <Teacheredit />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/teachereditnon/:teacherid\"\n              element={\n                <ProtectedRoute>\n                  <Teachereditnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/teacherdetails/:teacherid\"\n              element={\n                <ProtectedRoute>\n                  <Teacherdetail />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/teacherdetails_non/:teacherid\"\n              element={\n                <ProtectedRoute>\n                  <Teacherdetailsnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/server\"\n              element={\n                <ProtectedRoute>\n                  <Serverpage />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/servern\"\n              element={\n                <ProtectedRoute>\n                  <Serverpage_non />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/teacherdetailedit/:teacherdetailid\"\n              element={\n                <ProtectedRoute>\n                  <Teacherdetailedit />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/teacherdetaileditnon/:teacherdetailid\"\n              element={\n                <ProtectedRoute>\n                  <Teacherdetaileditnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/serveredit/:serverroomid\"\n              element={\n                <ProtectedRoute>\n                  <Serveredit />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/servereditnon/:serverroomid\"\n              element={\n                <ProtectedRoute>\n                  <Servereditnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/serverdetails/:serverroomid\"\n              element={\n                <ProtectedRoute>\n                  <Serverdetail />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/serverdetailsnon/:serverroomid\"\n              element={\n                <ProtectedRoute>\n                  <Serverdetailnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/serverdetailedit/:serverdetailid\"\n              element={\n                <ProtectedRoute>\n                  <Serverdetailedit />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/serverdetaileditnon/:serverdetailid\"\n              element={\n                <ProtectedRoute>\n                  <Serverrdetaileditnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/classsum\"\n              element={\n                <ProtectedRoute>\n                  <Classsum />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/teachersum\"\n              element={\n                <ProtectedRoute>\n                  <Teachersum />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/non-tech-sum\"\n              element={\n                <ProtectedRoute>\n                  <Nontechsum />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/teachersumn\"\n              element={\n                <ProtectedRoute>\n                  <Teachersumnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/classsumn\"\n              element={\n                <ProtectedRoute>\n                  <Classsumnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/labsumn\"\n              element={\n                <ProtectedRoute>\n                  <Labsumnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/serversumn\"\n              element={\n                <ProtectedRoute>\n                  <Serversumnon />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/serversum\"\n              element={\n                <ProtectedRoute>\n                  <Serversum />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/non-tech\"\n              element={\n                <ProtectedRoute>\n                  <Nontechpage />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/teachern\"\n              element={\n                <ProtectedRoute>\n                  <Teacherpage_non />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/classn\"\n              element={\n                <ProtectedRoute>\n                  <Classpage_non />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/userlist\"\n              element={\n                <ProtectedRoute>\n                  <Userlist />\n                </ProtectedRoute>\n              }\n            />\n\n            <Route\n              path=\"/dumpn\"\n              element={\n                <ProtectedRoute>\n                  <Dumpnontech />\n                </ProtectedRoute>\n              }\n            />\n            <Route\n              path=\"/dump\"\n              element={\n                <ProtectedRoute>\n                <Dumptech/>\n                </ProtectedRoute>\n              }\n            />\n\n            <Route\n              path=\"/purchaselist\"\n              element={\n                <ProtectedRoute>\n              <Purchaselist/>\n                </ProtectedRoute>\n              }\n            />\n             \n             <Route\n              path=\"/purchaselisttech\"\n              element={\n                <ProtectedRoute>\n           <Purchasetechlist/>\n                </ProtectedRoute>\n              }\n            />\n          </Routes>\n        )}\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { alertslice } from \"./features/alertslice\";\r\nimport {roleslice} from \"./features/roleslice\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    alerts: alertslice.reducer,\r\n    role:roleslice.reducer\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}